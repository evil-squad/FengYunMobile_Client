// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: promotion.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "promotion.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace app {
namespace message {

namespace {

const ::google::protobuf::Descriptor* JiuWeiHuDatasProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JiuWeiHuDatasProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* JiuWeiHuDataProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JiuWeiHuDataProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GuildHongBaoDatasProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GuildHongBaoDatasProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GuildHongBaoDataProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GuildHongBaoDataProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* TiaoZhanDatasProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TiaoZhanDatasProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* TiaoZhanRankDataProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TiaoZhanRankDataProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* TiaoZhanExchangeDataProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TiaoZhanExchangeDataProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* MoBingActivityDatasProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MoBingActivityDatasProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GlobalRechargePrizeDatasProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GlobalRechargePrizeDatasProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GlobalMarriageRankDatasProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GlobalMarriageRankDatasProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GlobalMarriageRankDataProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GlobalMarriageRankDataProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpgradeYuanbaoCutProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpgradeYuanbaoCutProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpgradeYuanbaoCutSingleProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpgradeYuanbaoCutSingleProto_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* UpgradeYuanbaoCutSingleProto_UpgradeType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* GlobalRechargeRankDatasProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GlobalRechargeRankDatasProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GlobalRechargeRankDataProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GlobalRechargeRankDataProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GlobalConsumeRankDatasProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GlobalConsumeRankDatasProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GlobalConsumeRankDataProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GlobalConsumeRankDataProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GlobalSelectImageDatasProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GlobalSelectImageDatasProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GlobalSelectImageRankDataProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GlobalSelectImageRankDataProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GlobalSelectImageRankTaskProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GlobalSelectImageRankTaskProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GlobalChargeFightAmountRankDataProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GlobalChargeFightAmountRankDataProto_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* GlobalChargeFightAmountRankPrizeProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GlobalChargeFightAmountRankPrizeProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* NewServerRechargeRankDatasProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NewServerRechargeRankDatasProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* NewServerRechargeRankDataProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NewServerRechargeRankDataProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* TuHaoDatasProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TuHaoDatasProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* TuHaoDataProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TuHaoDataProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* LaoBingBackDatasProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LaoBingBackDatasProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* LaoBingBackDataProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LaoBingBackDataProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* DingZhiDatasProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DingZhiDatasProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* DingZhiDataProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DingZhiDataProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* RechargeRebateProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RechargeRebateProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* RechargeRebateSingleProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RechargeRebateSingleProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* RechargeExchangeProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RechargeExchangeProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* RechargeExchangeSingleProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RechargeExchangeSingleProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* CollectPrizePromotionProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CollectPrizePromotionProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* CollectPrizePromotionSingleProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CollectPrizePromotionSingleProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpgradePromotionProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpgradePromotionProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpgradePromotionSingleProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpgradePromotionSingleProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* AllServerStartRankPromotionProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AllServerStartRankPromotionProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* RankPromotionProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RankPromotionProto_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* RankPromotionProto_RankPromotionProtoType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* RankPromotionSingleProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RankPromotionSingleProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnionRankPromotionProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnionRankPromotionProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* DailyConsumeProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DailyConsumeProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* DailyConsumeSingleProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DailyConsumeSingleProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* TaskPromotionProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TaskPromotionProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* TaskPromotionPrizeListProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TaskPromotionPrizeListProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* TaskPromotionRankDatasProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TaskPromotionRankDatasProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* WandaMovieConfigProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WandaMovieConfigProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* RechargeBoxRebateConfigProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RechargeBoxRebateConfigProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* RechargeBoxRebateRule_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RechargeBoxRebateRule_reflection_ = NULL;
const ::google::protobuf::Descriptor* ConsumeBoxRebateConfigProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ConsumeBoxRebateConfigProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* ConsumeBoxRebateRule_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ConsumeBoxRebateRule_reflection_ = NULL;
const ::google::protobuf::Descriptor* GlobalChargeFightAmountChangedValueRankDataProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GlobalChargeFightAmountChangedValueRankDataProto_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* GlobalChargeFightAmountChangedValueVRankPrizeProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GlobalChargeFightAmountChangedValueVRankPrizeProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* YYPurpleVipConfigProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YYPurpleVipConfigProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* YYPurpleVipNickProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YYPurpleVipNickProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* YYPurpleVipXinshoulibaoProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YYPurpleVipXinshoulibaoProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* YYPurpleVipShopProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  YYPurpleVipShopProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreditsShopDatasProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreditsShopDatasProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreditsShopDataProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreditsShopDataProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* DailyShopDatasProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DailyShopDatasProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* DailyShopDataProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DailyShopDataProto_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* DailyShopDataProto_PriceType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* BuYuCreditsShopDatasProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuYuCreditsShopDatasProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* BuYuCreditsShopDataProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BuYuCreditsShopDataProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* DailyFirstRechargePromotionDatasProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DailyFirstRechargePromotionDatasProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* DailyFirstRechargePromotionDataProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DailyFirstRechargePromotionDataProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* FireworkPromotionDatasProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FireworkPromotionDatasProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* FireworkPromotionDataProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FireworkPromotionDataProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* SecretShopDatasProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SecretShopDatasProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* SecretShopDataProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SecretShopDataProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* MonopolyConfigProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MonopolyConfigProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* MonopolyCellProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MonopolyCellProto_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MonopolyCellProto_PrizeType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* CollectShenzhuangRuleProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CollectShenzhuangRuleProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* CollectShenzhuangConfigProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CollectShenzhuangConfigProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* FreeExchangeRuleProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FreeExchangeRuleProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* FreeExchangeConfigProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FreeExchangeConfigProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoveDailyPrizeProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoveDailyPrizeProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoveOnlinePrizeProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoveOnlinePrizeProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoveExchangeProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoveExchangeProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoveSingleExchangeProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoveSingleExchangeProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GlobalMarriageChangeRankDatasProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GlobalMarriageChangeRankDatasProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GlobalMarriageChangeRankDataProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GlobalMarriageChangeRankDataProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* NianshouDatasProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NianshouDatasProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* NianshouDataProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NianshouDataProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* NianshouRankProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NianshouRankProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* AnniversaryRechargeFanliProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AnniversaryRechargeFanliProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* AnniversaryCakeProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AnniversaryCakeProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* AnniversaryDailyPrizeProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AnniversaryDailyPrizeProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* ComebackPrizeProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ComebackPrizeProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* AnniversaryDailyTaskProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AnniversaryDailyTaskProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoginPromotion2DatasProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginPromotion2DatasProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoginPromotion2DataProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginPromotion2DataProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* MonthlyCardTaskProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MonthlyCardTaskProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* MonthlyCardPrizeProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MonthlyCardPrizeProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* DoublePrizeProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DoublePrizeProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* SingleDoublePrizeProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SingleDoublePrizeProto_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* SingleDoublePrizeProto_DoublePrizeType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* GlobalMaxFightingAmountRankDataProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GlobalMaxFightingAmountRankDataProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* ComebackProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ComebackProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* DaDiShuRankProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DaDiShuRankProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* SingleDaDiShuRankProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SingleDaDiShuRankProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* DaDiShuCreditsShopDatasProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DaDiShuCreditsShopDatasProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* DaDiShuCreditsShopDataProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DaDiShuCreditsShopDataProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* SysHongBaoDatasProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SysHongBaoDatasProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* ChouJiangFanLiProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChouJiangFanLiProto_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* UpgradePromotionProtoType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_promotion_2eproto() {
  protobuf_AddDesc_promotion_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "promotion.proto");
  GOOGLE_CHECK(file != NULL);
  JiuWeiHuDatasProto_descriptor_ = file->message_type(0);
  static const int JiuWeiHuDatasProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiuWeiHuDatasProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiuWeiHuDatasProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiuWeiHuDatasProto, data_),
  };
  JiuWeiHuDatasProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      JiuWeiHuDatasProto_descriptor_,
      JiuWeiHuDatasProto::default_instance_,
      JiuWeiHuDatasProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiuWeiHuDatasProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiuWeiHuDatasProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(JiuWeiHuDatasProto));
  JiuWeiHuDataProto_descriptor_ = file->message_type(1);
  static const int JiuWeiHuDataProto_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiuWeiHuDataProto, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiuWeiHuDataProto, recharge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiuWeiHuDataProto, shield_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiuWeiHuDataProto, shield_big_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiuWeiHuDataProto, hero_equip_fashion_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiuWeiHuDataProto, mount_tong_ling_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiuWeiHuDataProto, sprite_stat_proto_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiuWeiHuDataProto, nickname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiuWeiHuDataProto, shield_monster_data1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiuWeiHuDataProto, shield_monster_data2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiuWeiHuDataProto, fighting_amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiuWeiHuDataProto, weapon_),
  };
  JiuWeiHuDataProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      JiuWeiHuDataProto_descriptor_,
      JiuWeiHuDataProto::default_instance_,
      JiuWeiHuDataProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiuWeiHuDataProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JiuWeiHuDataProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(JiuWeiHuDataProto));
  GuildHongBaoDatasProto_descriptor_ = file->message_type(2);
  static const int GuildHongBaoDatasProto_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildHongBaoDatasProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildHongBaoDatasProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildHongBaoDatasProto, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildHongBaoDatasProto, type_),
  };
  GuildHongBaoDatasProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GuildHongBaoDatasProto_descriptor_,
      GuildHongBaoDatasProto::default_instance_,
      GuildHongBaoDatasProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildHongBaoDatasProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildHongBaoDatasProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GuildHongBaoDatasProto));
  GuildHongBaoDataProto_descriptor_ = file->message_type(3);
  static const int GuildHongBaoDataProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildHongBaoDataProto, max_give_yb_),
  };
  GuildHongBaoDataProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GuildHongBaoDataProto_descriptor_,
      GuildHongBaoDataProto::default_instance_,
      GuildHongBaoDataProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildHongBaoDataProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GuildHongBaoDataProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GuildHongBaoDataProto));
  TiaoZhanDatasProto_descriptor_ = file->message_type(4);
  static const int TiaoZhanDatasProto_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TiaoZhanDatasProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TiaoZhanDatasProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TiaoZhanDatasProto, fight_day_start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TiaoZhanDatasProto, fight_day_end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TiaoZhanDatasProto, rank_data_proto_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TiaoZhanDatasProto, exchange_data_proto_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TiaoZhanDatasProto, pair_timeout_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TiaoZhanDatasProto, pair_yuan_bao_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TiaoZhanDatasProto, shop_point_multiple_),
  };
  TiaoZhanDatasProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TiaoZhanDatasProto_descriptor_,
      TiaoZhanDatasProto::default_instance_,
      TiaoZhanDatasProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TiaoZhanDatasProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TiaoZhanDatasProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TiaoZhanDatasProto));
  TiaoZhanRankDataProto_descriptor_ = file->message_type(5);
  static const int TiaoZhanRankDataProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TiaoZhanRankDataProto, last_rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TiaoZhanRankDataProto, prize_),
  };
  TiaoZhanRankDataProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TiaoZhanRankDataProto_descriptor_,
      TiaoZhanRankDataProto::default_instance_,
      TiaoZhanRankDataProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TiaoZhanRankDataProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TiaoZhanRankDataProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TiaoZhanRankDataProto));
  TiaoZhanExchangeDataProto_descriptor_ = file->message_type(6);
  static const int TiaoZhanExchangeDataProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TiaoZhanExchangeDataProto, goods_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TiaoZhanExchangeDataProto, shop_point_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TiaoZhanExchangeDataProto, limit_),
  };
  TiaoZhanExchangeDataProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TiaoZhanExchangeDataProto_descriptor_,
      TiaoZhanExchangeDataProto::default_instance_,
      TiaoZhanExchangeDataProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TiaoZhanExchangeDataProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TiaoZhanExchangeDataProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TiaoZhanExchangeDataProto));
  MoBingActivityDatasProto_descriptor_ = file->message_type(7);
  static const int MoBingActivityDatasProto_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoBingActivityDatasProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoBingActivityDatasProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoBingActivityDatasProto, mo_bing_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoBingActivityDatasProto, recharge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoBingActivityDatasProto, prize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoBingActivityDatasProto, desc_),
  };
  MoBingActivityDatasProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MoBingActivityDatasProto_descriptor_,
      MoBingActivityDatasProto::default_instance_,
      MoBingActivityDatasProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoBingActivityDatasProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MoBingActivityDatasProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MoBingActivityDatasProto));
  GlobalRechargePrizeDatasProto_descriptor_ = file->message_type(8);
  static const int GlobalRechargePrizeDatasProto_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalRechargePrizeDatasProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalRechargePrizeDatasProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalRechargePrizeDatasProto, recharge_amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalRechargePrizeDatasProto, prize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalRechargePrizeDatasProto, desc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalRechargePrizeDatasProto, vip_level_),
  };
  GlobalRechargePrizeDatasProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GlobalRechargePrizeDatasProto_descriptor_,
      GlobalRechargePrizeDatasProto::default_instance_,
      GlobalRechargePrizeDatasProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalRechargePrizeDatasProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalRechargePrizeDatasProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GlobalRechargePrizeDatasProto));
  GlobalMarriageRankDatasProto_descriptor_ = file->message_type(9);
  static const int GlobalMarriageRankDatasProto_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalMarriageRankDatasProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalMarriageRankDatasProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalMarriageRankDatasProto, page_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalMarriageRankDatasProto, total_page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalMarriageRankDatasProto, data_),
  };
  GlobalMarriageRankDatasProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GlobalMarriageRankDatasProto_descriptor_,
      GlobalMarriageRankDatasProto::default_instance_,
      GlobalMarriageRankDatasProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalMarriageRankDatasProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalMarriageRankDatasProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GlobalMarriageRankDatasProto));
  GlobalMarriageRankDataProto_descriptor_ = file->message_type(10);
  static const int GlobalMarriageRankDataProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalMarriageRankDataProto, last_rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalMarriageRankDataProto, finalprize_),
  };
  GlobalMarriageRankDataProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GlobalMarriageRankDataProto_descriptor_,
      GlobalMarriageRankDataProto::default_instance_,
      GlobalMarriageRankDataProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalMarriageRankDataProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalMarriageRankDataProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GlobalMarriageRankDataProto));
  UpgradeYuanbaoCutProto_descriptor_ = file->message_type(11);
  static const int UpgradeYuanbaoCutProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeYuanbaoCutProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeYuanbaoCutProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeYuanbaoCutProto, rules_),
  };
  UpgradeYuanbaoCutProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpgradeYuanbaoCutProto_descriptor_,
      UpgradeYuanbaoCutProto::default_instance_,
      UpgradeYuanbaoCutProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeYuanbaoCutProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeYuanbaoCutProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpgradeYuanbaoCutProto));
  UpgradeYuanbaoCutSingleProto_descriptor_ = file->message_type(12);
  static const int UpgradeYuanbaoCutSingleProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeYuanbaoCutSingleProto, recharge_amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeYuanbaoCutSingleProto, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeYuanbaoCutSingleProto, percentage_),
  };
  UpgradeYuanbaoCutSingleProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpgradeYuanbaoCutSingleProto_descriptor_,
      UpgradeYuanbaoCutSingleProto::default_instance_,
      UpgradeYuanbaoCutSingleProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeYuanbaoCutSingleProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradeYuanbaoCutSingleProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpgradeYuanbaoCutSingleProto));
  UpgradeYuanbaoCutSingleProto_UpgradeType_descriptor_ = UpgradeYuanbaoCutSingleProto_descriptor_->enum_type(0);
  GlobalRechargeRankDatasProto_descriptor_ = file->message_type(13);
  static const int GlobalRechargeRankDatasProto_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalRechargeRankDatasProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalRechargeRankDatasProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalRechargeRankDatasProto, page_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalRechargeRankDatasProto, total_page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalRechargeRankDatasProto, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalRechargeRankDatasProto, can_see_days_after_end_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalRechargeRankDatasProto, daily_min_recharge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalRechargeRankDatasProto, final_min_recharge_),
  };
  GlobalRechargeRankDatasProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GlobalRechargeRankDatasProto_descriptor_,
      GlobalRechargeRankDatasProto::default_instance_,
      GlobalRechargeRankDatasProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalRechargeRankDatasProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalRechargeRankDatasProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GlobalRechargeRankDatasProto));
  GlobalRechargeRankDataProto_descriptor_ = file->message_type(14);
  static const int GlobalRechargeRankDataProto_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalRechargeRankDataProto, last_rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalRechargeRankDataProto, dailyprize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalRechargeRankDataProto, finalprize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalRechargeRankDataProto, type_),
  };
  GlobalRechargeRankDataProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GlobalRechargeRankDataProto_descriptor_,
      GlobalRechargeRankDataProto::default_instance_,
      GlobalRechargeRankDataProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalRechargeRankDataProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalRechargeRankDataProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GlobalRechargeRankDataProto));
  GlobalConsumeRankDatasProto_descriptor_ = file->message_type(15);
  static const int GlobalConsumeRankDatasProto_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalConsumeRankDatasProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalConsumeRankDatasProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalConsumeRankDatasProto, page_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalConsumeRankDatasProto, total_page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalConsumeRankDatasProto, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalConsumeRankDatasProto, can_see_days_after_end_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalConsumeRankDatasProto, daily_min_recharge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalConsumeRankDatasProto, final_min_recharge_),
  };
  GlobalConsumeRankDatasProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GlobalConsumeRankDatasProto_descriptor_,
      GlobalConsumeRankDatasProto::default_instance_,
      GlobalConsumeRankDatasProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalConsumeRankDatasProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalConsumeRankDatasProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GlobalConsumeRankDatasProto));
  GlobalConsumeRankDataProto_descriptor_ = file->message_type(16);
  static const int GlobalConsumeRankDataProto_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalConsumeRankDataProto, last_rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalConsumeRankDataProto, dailyprize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalConsumeRankDataProto, finalprize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalConsumeRankDataProto, type_),
  };
  GlobalConsumeRankDataProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GlobalConsumeRankDataProto_descriptor_,
      GlobalConsumeRankDataProto::default_instance_,
      GlobalConsumeRankDataProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalConsumeRankDataProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalConsumeRankDataProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GlobalConsumeRankDataProto));
  GlobalSelectImageDatasProto_descriptor_ = file->message_type(17);
  static const int GlobalSelectImageDatasProto_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalSelectImageDatasProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalSelectImageDatasProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalSelectImageDatasProto, page_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalSelectImageDatasProto, total_page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalSelectImageDatasProto, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalSelectImageDatasProto, can_see_days_after_end_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalSelectImageDatasProto, score_prize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalSelectImageDatasProto, min_score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalSelectImageDatasProto, reset_yuanbao_cost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalSelectImageDatasProto, task_list_),
  };
  GlobalSelectImageDatasProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GlobalSelectImageDatasProto_descriptor_,
      GlobalSelectImageDatasProto::default_instance_,
      GlobalSelectImageDatasProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalSelectImageDatasProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalSelectImageDatasProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GlobalSelectImageDatasProto));
  GlobalSelectImageRankDataProto_descriptor_ = file->message_type(18);
  static const int GlobalSelectImageRankDataProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalSelectImageRankDataProto, last_rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalSelectImageRankDataProto, finalprize_),
  };
  GlobalSelectImageRankDataProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GlobalSelectImageRankDataProto_descriptor_,
      GlobalSelectImageRankDataProto::default_instance_,
      GlobalSelectImageRankDataProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalSelectImageRankDataProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalSelectImageRankDataProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GlobalSelectImageRankDataProto));
  GlobalSelectImageRankTaskProto_descriptor_ = file->message_type(19);
  static const int GlobalSelectImageRankTaskProto_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalSelectImageRankTaskProto, order_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalSelectImageRankTaskProto, image_a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalSelectImageRankTaskProto, image_b_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalSelectImageRankTaskProto, time_limt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalSelectImageRankTaskProto, score_),
  };
  GlobalSelectImageRankTaskProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GlobalSelectImageRankTaskProto_descriptor_,
      GlobalSelectImageRankTaskProto::default_instance_,
      GlobalSelectImageRankTaskProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalSelectImageRankTaskProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalSelectImageRankTaskProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GlobalSelectImageRankTaskProto));
  GlobalChargeFightAmountRankDataProto_descriptor_ = file->message_type(20);
  static const int GlobalChargeFightAmountRankDataProto_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalChargeFightAmountRankDataProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalChargeFightAmountRankDataProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalChargeFightAmountRankDataProto, page_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalChargeFightAmountRankDataProto, total_page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalChargeFightAmountRankDataProto, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalChargeFightAmountRankDataProto, background_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalChargeFightAmountRankDataProto, min_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalChargeFightAmountRankDataProto, upgradegoods_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalChargeFightAmountRankDataProto, prizes_),
  };
  GlobalChargeFightAmountRankDataProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GlobalChargeFightAmountRankDataProto_descriptor_,
      GlobalChargeFightAmountRankDataProto::default_instance_,
      GlobalChargeFightAmountRankDataProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalChargeFightAmountRankDataProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalChargeFightAmountRankDataProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GlobalChargeFightAmountRankDataProto));
  GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType_descriptor_ = GlobalChargeFightAmountRankDataProto_descriptor_->enum_type(0);
  GlobalChargeFightAmountRankPrizeProto_descriptor_ = file->message_type(21);
  static const int GlobalChargeFightAmountRankPrizeProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalChargeFightAmountRankPrizeProto, last_rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalChargeFightAmountRankPrizeProto, prize_),
  };
  GlobalChargeFightAmountRankPrizeProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GlobalChargeFightAmountRankPrizeProto_descriptor_,
      GlobalChargeFightAmountRankPrizeProto::default_instance_,
      GlobalChargeFightAmountRankPrizeProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalChargeFightAmountRankPrizeProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalChargeFightAmountRankPrizeProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GlobalChargeFightAmountRankPrizeProto));
  NewServerRechargeRankDatasProto_descriptor_ = file->message_type(22);
  static const int NewServerRechargeRankDatasProto_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewServerRechargeRankDatasProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewServerRechargeRankDatasProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewServerRechargeRankDatasProto, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewServerRechargeRankDatasProto, daily_min_recharge_),
  };
  NewServerRechargeRankDatasProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NewServerRechargeRankDatasProto_descriptor_,
      NewServerRechargeRankDatasProto::default_instance_,
      NewServerRechargeRankDatasProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewServerRechargeRankDatasProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewServerRechargeRankDatasProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NewServerRechargeRankDatasProto));
  NewServerRechargeRankDataProto_descriptor_ = file->message_type(23);
  static const int NewServerRechargeRankDataProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewServerRechargeRankDataProto, last_rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewServerRechargeRankDataProto, dailyprize_),
  };
  NewServerRechargeRankDataProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NewServerRechargeRankDataProto_descriptor_,
      NewServerRechargeRankDataProto::default_instance_,
      NewServerRechargeRankDataProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewServerRechargeRankDataProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewServerRechargeRankDataProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NewServerRechargeRankDataProto));
  TuHaoDatasProto_descriptor_ = file->message_type(24);
  static const int TuHaoDatasProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TuHaoDatasProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TuHaoDatasProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TuHaoDatasProto, data_),
  };
  TuHaoDatasProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TuHaoDatasProto_descriptor_,
      TuHaoDatasProto::default_instance_,
      TuHaoDatasProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TuHaoDatasProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TuHaoDatasProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TuHaoDatasProto));
  TuHaoDataProto_descriptor_ = file->message_type(25);
  static const int TuHaoDataProto_offsets_[25] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TuHaoDataProto, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TuHaoDataProto, prize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TuHaoDataProto, required_acc_recharge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TuHaoDataProto, required_mount_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TuHaoDataProto, required_tian_zui_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TuHaoDataProto, required_tian_jie_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TuHaoDataProto, required_bow_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TuHaoDataProto, required_super_arm_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TuHaoDataProto, required_demon_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TuHaoDataProto, required_cloak_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TuHaoDataProto, required_vip_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TuHaoDataProto, required_last_recharge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TuHaoDataProto, desc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TuHaoDataProto, required_mo_shi_total_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TuHaoDataProto, required_qian_qiu_da_jie_total_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TuHaoDataProto, required_mo_shi_hei_han_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TuHaoDataProto, required_mo_shi_bing_po_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TuHaoDataProto, required_mo_shi_bai_lu_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TuHaoDataProto, required_mo_shi_bu_tian_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TuHaoDataProto, required_qian_qiu_jian_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TuHaoDataProto, required_da_jie_dao_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TuHaoDataProto, required_chihuoshenggong_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TuHaoDataProto, required_tianxiezhanjian_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TuHaoDataProto, required_wudao_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TuHaoDataProto, required_shield_1_level_),
  };
  TuHaoDataProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TuHaoDataProto_descriptor_,
      TuHaoDataProto::default_instance_,
      TuHaoDataProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TuHaoDataProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TuHaoDataProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TuHaoDataProto));
  LaoBingBackDatasProto_descriptor_ = file->message_type(26);
  static const int LaoBingBackDatasProto_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaoBingBackDatasProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaoBingBackDatasProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaoBingBackDatasProto, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaoBingBackDatasProto, min_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaoBingBackDatasProto, min_offline_days_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaoBingBackDatasProto, recharge_one_prize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaoBingBackDatasProto, online_prize_minutes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaoBingBackDatasProto, max_prize_time_),
  };
  LaoBingBackDatasProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LaoBingBackDatasProto_descriptor_,
      LaoBingBackDatasProto::default_instance_,
      LaoBingBackDatasProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaoBingBackDatasProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaoBingBackDatasProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LaoBingBackDatasProto));
  LaoBingBackDataProto_descriptor_ = file->message_type(27);
  static const int LaoBingBackDataProto_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaoBingBackDataProto, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaoBingBackDataProto, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaoBingBackDataProto, prize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaoBingBackDataProto, desc_),
  };
  LaoBingBackDataProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LaoBingBackDataProto_descriptor_,
      LaoBingBackDataProto::default_instance_,
      LaoBingBackDataProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaoBingBackDataProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LaoBingBackDataProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LaoBingBackDataProto));
  DingZhiDatasProto_descriptor_ = file->message_type(28);
  static const int DingZhiDatasProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DingZhiDatasProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DingZhiDatasProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DingZhiDatasProto, data_),
  };
  DingZhiDatasProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DingZhiDatasProto_descriptor_,
      DingZhiDatasProto::default_instance_,
      DingZhiDatasProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DingZhiDatasProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DingZhiDatasProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DingZhiDatasProto));
  DingZhiDataProto_descriptor_ = file->message_type(29);
  static const int DingZhiDataProto_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DingZhiDataProto, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DingZhiDataProto, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DingZhiDataProto, yuan_bao_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DingZhiDataProto, min_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DingZhiDataProto, target_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DingZhiDataProto, secondary_prize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DingZhiDataProto, fan_pai_prize_goods_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DingZhiDataProto, extra_prize_required_fan_pai_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DingZhiDataProto, extra_prize_),
  };
  DingZhiDataProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DingZhiDataProto_descriptor_,
      DingZhiDataProto::default_instance_,
      DingZhiDataProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DingZhiDataProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DingZhiDataProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DingZhiDataProto));
  RechargeRebateProto_descriptor_ = file->message_type(30);
  static const int RechargeRebateProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeRebateProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeRebateProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeRebateProto, prize_),
  };
  RechargeRebateProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RechargeRebateProto_descriptor_,
      RechargeRebateProto::default_instance_,
      RechargeRebateProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeRebateProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeRebateProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RechargeRebateProto));
  RechargeRebateSingleProto_descriptor_ = file->message_type(31);
  static const int RechargeRebateSingleProto_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeRebateSingleProto, yuanbao_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeRebateSingleProto, limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeRebateSingleProto, prize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeRebateSingleProto, prize2_),
  };
  RechargeRebateSingleProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RechargeRebateSingleProto_descriptor_,
      RechargeRebateSingleProto::default_instance_,
      RechargeRebateSingleProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeRebateSingleProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeRebateSingleProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RechargeRebateSingleProto));
  RechargeExchangeProto_descriptor_ = file->message_type(32);
  static const int RechargeExchangeProto_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeExchangeProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeExchangeProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeExchangeProto, prize_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeExchangeProto, prize_),
  };
  RechargeExchangeProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RechargeExchangeProto_descriptor_,
      RechargeExchangeProto::default_instance_,
      RechargeExchangeProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeExchangeProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeExchangeProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RechargeExchangeProto));
  RechargeExchangeSingleProto_descriptor_ = file->message_type(33);
  static const int RechargeExchangeSingleProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeExchangeSingleProto, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeExchangeSingleProto, yuanbao_),
  };
  RechargeExchangeSingleProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RechargeExchangeSingleProto_descriptor_,
      RechargeExchangeSingleProto::default_instance_,
      RechargeExchangeSingleProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeExchangeSingleProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeExchangeSingleProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RechargeExchangeSingleProto));
  CollectPrizePromotionProto_descriptor_ = file->message_type(34);
  static const int CollectPrizePromotionProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectPrizePromotionProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectPrizePromotionProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectPrizePromotionProto, prize_),
  };
  CollectPrizePromotionProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CollectPrizePromotionProto_descriptor_,
      CollectPrizePromotionProto::default_instance_,
      CollectPrizePromotionProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectPrizePromotionProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectPrizePromotionProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CollectPrizePromotionProto));
  CollectPrizePromotionSingleProto_descriptor_ = file->message_type(35);
  static const int CollectPrizePromotionSingleProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectPrizePromotionSingleProto, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectPrizePromotionSingleProto, prize_),
  };
  CollectPrizePromotionSingleProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CollectPrizePromotionSingleProto_descriptor_,
      CollectPrizePromotionSingleProto::default_instance_,
      CollectPrizePromotionSingleProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectPrizePromotionSingleProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectPrizePromotionSingleProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CollectPrizePromotionSingleProto));
  UpgradePromotionProto_descriptor_ = file->message_type(36);
  static const int UpgradePromotionProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradePromotionProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradePromotionProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradePromotionProto, prize_),
  };
  UpgradePromotionProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpgradePromotionProto_descriptor_,
      UpgradePromotionProto::default_instance_,
      UpgradePromotionProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradePromotionProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradePromotionProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpgradePromotionProto));
  UpgradePromotionSingleProto_descriptor_ = file->message_type(37);
  static const int UpgradePromotionSingleProto_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradePromotionSingleProto, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradePromotionSingleProto, global_limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradePromotionSingleProto, prize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradePromotionSingleProto, type_),
  };
  UpgradePromotionSingleProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UpgradePromotionSingleProto_descriptor_,
      UpgradePromotionSingleProto::default_instance_,
      UpgradePromotionSingleProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradePromotionSingleProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpgradePromotionSingleProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UpgradePromotionSingleProto));
  AllServerStartRankPromotionProto_descriptor_ = file->message_type(38);
  static const int AllServerStartRankPromotionProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllServerStartRankPromotionProto, promotion_),
  };
  AllServerStartRankPromotionProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AllServerStartRankPromotionProto_descriptor_,
      AllServerStartRankPromotionProto::default_instance_,
      AllServerStartRankPromotionProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllServerStartRankPromotionProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllServerStartRankPromotionProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AllServerStartRankPromotionProto));
  RankPromotionProto_descriptor_ = file->message_type(39);
  static const int RankPromotionProto_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankPromotionProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankPromotionProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankPromotionProto, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankPromotionProto, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankPromotionProto, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankPromotionProto, rule_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankPromotionProto, prize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankPromotionProto, min_recharge_),
  };
  RankPromotionProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RankPromotionProto_descriptor_,
      RankPromotionProto::default_instance_,
      RankPromotionProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankPromotionProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankPromotionProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RankPromotionProto));
  RankPromotionProto_RankPromotionProtoType_descriptor_ = RankPromotionProto_descriptor_->enum_type(0);
  RankPromotionSingleProto_descriptor_ = file->message_type(40);
  static const int RankPromotionSingleProto_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankPromotionSingleProto, goods_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankPromotionSingleProto, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankPromotionSingleProto, min_rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankPromotionSingleProto, max_rank_),
  };
  RankPromotionSingleProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RankPromotionSingleProto_descriptor_,
      RankPromotionSingleProto::default_instance_,
      RankPromotionSingleProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankPromotionSingleProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankPromotionSingleProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RankPromotionSingleProto));
  UnionRankPromotionProto_descriptor_ = file->message_type(41);
  static const int UnionRankPromotionProto_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionRankPromotionProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionRankPromotionProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionRankPromotionProto, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionRankPromotionProto, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionRankPromotionProto, rule_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionRankPromotionProto, leader_goods_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionRankPromotionProto, winner_goods_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionRankPromotionProto, loser_goods_),
  };
  UnionRankPromotionProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      UnionRankPromotionProto_descriptor_,
      UnionRankPromotionProto::default_instance_,
      UnionRankPromotionProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionRankPromotionProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnionRankPromotionProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(UnionRankPromotionProto));
  DailyConsumeProto_descriptor_ = file->message_type(42);
  static const int DailyConsumeProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyConsumeProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyConsumeProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyConsumeProto, prize_),
  };
  DailyConsumeProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DailyConsumeProto_descriptor_,
      DailyConsumeProto::default_instance_,
      DailyConsumeProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyConsumeProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyConsumeProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DailyConsumeProto));
  DailyConsumeSingleProto_descriptor_ = file->message_type(43);
  static const int DailyConsumeSingleProto_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyConsumeSingleProto, yuanbao_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyConsumeSingleProto, limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyConsumeSingleProto, require_vip_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyConsumeSingleProto, prize_),
  };
  DailyConsumeSingleProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DailyConsumeSingleProto_descriptor_,
      DailyConsumeSingleProto::default_instance_,
      DailyConsumeSingleProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyConsumeSingleProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyConsumeSingleProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DailyConsumeSingleProto));
  TaskPromotionProto_descriptor_ = file->message_type(44);
  static const int TaskPromotionProto_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskPromotionProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskPromotionProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskPromotionProto, points_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskPromotionProto, collected_point_prize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskPromotionProto, task_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskPromotionProto, goal_target_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskPromotionProto, goal_current_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskPromotionProto, task_prize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskPromotionProto, prize_collected_),
  };
  TaskPromotionProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TaskPromotionProto_descriptor_,
      TaskPromotionProto::default_instance_,
      TaskPromotionProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskPromotionProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskPromotionProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TaskPromotionProto));
  TaskPromotionPrizeListProto_descriptor_ = file->message_type(45);
  static const int TaskPromotionPrizeListProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskPromotionPrizeListProto, required_point_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskPromotionPrizeListProto, prize_),
  };
  TaskPromotionPrizeListProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TaskPromotionPrizeListProto_descriptor_,
      TaskPromotionPrizeListProto::default_instance_,
      TaskPromotionPrizeListProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskPromotionPrizeListProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskPromotionPrizeListProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TaskPromotionPrizeListProto));
  TaskPromotionRankDatasProto_descriptor_ = file->message_type(46);
  static const int TaskPromotionRankDatasProto_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskPromotionRankDatasProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskPromotionRankDatasProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskPromotionRankDatasProto, can_see_days_after_end_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskPromotionRankDatasProto, prize_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskPromotionRankDatasProto, prize_2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskPromotionRankDatasProto, prize_3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskPromotionRankDatasProto, prize_4_10_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskPromotionRankDatasProto, prize_11_100_),
  };
  TaskPromotionRankDatasProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TaskPromotionRankDatasProto_descriptor_,
      TaskPromotionRankDatasProto::default_instance_,
      TaskPromotionRankDatasProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskPromotionRankDatasProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TaskPromotionRankDatasProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TaskPromotionRankDatasProto));
  WandaMovieConfigProto_descriptor_ = file->message_type(47);
  static const int WandaMovieConfigProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WandaMovieConfigProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WandaMovieConfigProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WandaMovieConfigProto, prize_),
  };
  WandaMovieConfigProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      WandaMovieConfigProto_descriptor_,
      WandaMovieConfigProto::default_instance_,
      WandaMovieConfigProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WandaMovieConfigProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WandaMovieConfigProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(WandaMovieConfigProto));
  RechargeBoxRebateConfigProto_descriptor_ = file->message_type(48);
  static const int RechargeBoxRebateConfigProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeBoxRebateConfigProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeBoxRebateConfigProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeBoxRebateConfigProto, rule_),
  };
  RechargeBoxRebateConfigProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RechargeBoxRebateConfigProto_descriptor_,
      RechargeBoxRebateConfigProto::default_instance_,
      RechargeBoxRebateConfigProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeBoxRebateConfigProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeBoxRebateConfigProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RechargeBoxRebateConfigProto));
  RechargeBoxRebateRule_descriptor_ = file->message_type(49);
  static const int RechargeBoxRebateRule_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeBoxRebateRule, total_recharge_day_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeBoxRebateRule, yuanbao_per_day_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeBoxRebateRule, desc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeBoxRebateRule, prize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeBoxRebateRule, every_day_prize_),
  };
  RechargeBoxRebateRule_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RechargeBoxRebateRule_descriptor_,
      RechargeBoxRebateRule::default_instance_,
      RechargeBoxRebateRule_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeBoxRebateRule, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RechargeBoxRebateRule, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RechargeBoxRebateRule));
  ConsumeBoxRebateConfigProto_descriptor_ = file->message_type(50);
  static const int ConsumeBoxRebateConfigProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConsumeBoxRebateConfigProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConsumeBoxRebateConfigProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConsumeBoxRebateConfigProto, rule_),
  };
  ConsumeBoxRebateConfigProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ConsumeBoxRebateConfigProto_descriptor_,
      ConsumeBoxRebateConfigProto::default_instance_,
      ConsumeBoxRebateConfigProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConsumeBoxRebateConfigProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConsumeBoxRebateConfigProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ConsumeBoxRebateConfigProto));
  ConsumeBoxRebateRule_descriptor_ = file->message_type(51);
  static const int ConsumeBoxRebateRule_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConsumeBoxRebateRule, total_consume_day_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConsumeBoxRebateRule, yuanbao_per_day_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConsumeBoxRebateRule, desc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConsumeBoxRebateRule, prize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConsumeBoxRebateRule, every_day_prize_),
  };
  ConsumeBoxRebateRule_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ConsumeBoxRebateRule_descriptor_,
      ConsumeBoxRebateRule::default_instance_,
      ConsumeBoxRebateRule_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConsumeBoxRebateRule, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConsumeBoxRebateRule, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ConsumeBoxRebateRule));
  GlobalChargeFightAmountChangedValueRankDataProto_descriptor_ = file->message_type(52);
  static const int GlobalChargeFightAmountChangedValueRankDataProto_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalChargeFightAmountChangedValueRankDataProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalChargeFightAmountChangedValueRankDataProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalChargeFightAmountChangedValueRankDataProto, page_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalChargeFightAmountChangedValueRankDataProto, total_page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalChargeFightAmountChangedValueRankDataProto, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalChargeFightAmountChangedValueRankDataProto, background_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalChargeFightAmountChangedValueRankDataProto, dailyprize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalChargeFightAmountChangedValueRankDataProto, mindailychangedvalue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalChargeFightAmountChangedValueRankDataProto, rankprize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalChargeFightAmountChangedValueRankDataProto, combined_type_),
  };
  GlobalChargeFightAmountChangedValueRankDataProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GlobalChargeFightAmountChangedValueRankDataProto_descriptor_,
      GlobalChargeFightAmountChangedValueRankDataProto::default_instance_,
      GlobalChargeFightAmountChangedValueRankDataProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalChargeFightAmountChangedValueRankDataProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalChargeFightAmountChangedValueRankDataProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GlobalChargeFightAmountChangedValueRankDataProto));
  GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType_descriptor_ = GlobalChargeFightAmountChangedValueRankDataProto_descriptor_->enum_type(0);
  GlobalChargeFightAmountChangedValueVRankPrizeProto_descriptor_ = file->message_type(53);
  static const int GlobalChargeFightAmountChangedValueVRankPrizeProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalChargeFightAmountChangedValueVRankPrizeProto, last_rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalChargeFightAmountChangedValueVRankPrizeProto, prize_),
  };
  GlobalChargeFightAmountChangedValueVRankPrizeProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GlobalChargeFightAmountChangedValueVRankPrizeProto_descriptor_,
      GlobalChargeFightAmountChangedValueVRankPrizeProto::default_instance_,
      GlobalChargeFightAmountChangedValueVRankPrizeProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalChargeFightAmountChangedValueVRankPrizeProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalChargeFightAmountChangedValueVRankPrizeProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GlobalChargeFightAmountChangedValueVRankPrizeProto));
  YYPurpleVipConfigProto_descriptor_ = file->message_type(54);
  static const int YYPurpleVipConfigProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YYPurpleVipConfigProto, shop_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YYPurpleVipConfigProto, nicks_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YYPurpleVipConfigProto, libao_),
  };
  YYPurpleVipConfigProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      YYPurpleVipConfigProto_descriptor_,
      YYPurpleVipConfigProto::default_instance_,
      YYPurpleVipConfigProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YYPurpleVipConfigProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YYPurpleVipConfigProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(YYPurpleVipConfigProto));
  YYPurpleVipNickProto_descriptor_ = file->message_type(55);
  static const int YYPurpleVipNickProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YYPurpleVipNickProto, nick_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YYPurpleVipNickProto, vip_type_),
  };
  YYPurpleVipNickProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      YYPurpleVipNickProto_descriptor_,
      YYPurpleVipNickProto::default_instance_,
      YYPurpleVipNickProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YYPurpleVipNickProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YYPurpleVipNickProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(YYPurpleVipNickProto));
  YYPurpleVipXinshoulibaoProto_descriptor_ = file->message_type(56);
  static const int YYPurpleVipXinshoulibaoProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YYPurpleVipXinshoulibaoProto, prize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YYPurpleVipXinshoulibaoProto, vip_type_),
  };
  YYPurpleVipXinshoulibaoProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      YYPurpleVipXinshoulibaoProto_descriptor_,
      YYPurpleVipXinshoulibaoProto::default_instance_,
      YYPurpleVipXinshoulibaoProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YYPurpleVipXinshoulibaoProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YYPurpleVipXinshoulibaoProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(YYPurpleVipXinshoulibaoProto));
  YYPurpleVipShopProto_descriptor_ = file->message_type(57);
  static const int YYPurpleVipShopProto_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YYPurpleVipShopProto, prize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YYPurpleVipShopProto, vip_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YYPurpleVipShopProto, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YYPurpleVipShopProto, time_limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YYPurpleVipShopProto, show_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YYPurpleVipShopProto, price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YYPurpleVipShopProto, desc_),
  };
  YYPurpleVipShopProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      YYPurpleVipShopProto_descriptor_,
      YYPurpleVipShopProto::default_instance_,
      YYPurpleVipShopProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YYPurpleVipShopProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(YYPurpleVipShopProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(YYPurpleVipShopProto));
  CreditsShopDatasProto_descriptor_ = file->message_type(58);
  static const int CreditsShopDatasProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreditsShopDatasProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreditsShopDatasProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreditsShopDatasProto, data_),
  };
  CreditsShopDatasProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreditsShopDatasProto_descriptor_,
      CreditsShopDatasProto::default_instance_,
      CreditsShopDatasProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreditsShopDatasProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreditsShopDatasProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreditsShopDatasProto));
  CreditsShopDataProto_descriptor_ = file->message_type(59);
  static const int CreditsShopDataProto_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreditsShopDataProto, goods_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreditsShopDataProto, sale_start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreditsShopDataProto, sale_end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreditsShopDataProto, credits_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreditsShopDataProto, credits_discount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreditsShopDataProto, max_exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreditsShopDataProto, yuanbao_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreditsShopDataProto, yuanbao_discount_),
  };
  CreditsShopDataProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CreditsShopDataProto_descriptor_,
      CreditsShopDataProto::default_instance_,
      CreditsShopDataProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreditsShopDataProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreditsShopDataProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CreditsShopDataProto));
  DailyShopDatasProto_descriptor_ = file->message_type(60);
  static const int DailyShopDatasProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyShopDatasProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyShopDatasProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyShopDatasProto, data_),
  };
  DailyShopDatasProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DailyShopDatasProto_descriptor_,
      DailyShopDatasProto::default_instance_,
      DailyShopDatasProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyShopDatasProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyShopDatasProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DailyShopDatasProto));
  DailyShopDataProto_descriptor_ = file->message_type(61);
  static const int DailyShopDataProto_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyShopDataProto, goods_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyShopDataProto, day_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyShopDataProto, max_exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyShopDataProto, price_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyShopDataProto, price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyShopDataProto, price_discount_),
  };
  DailyShopDataProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DailyShopDataProto_descriptor_,
      DailyShopDataProto::default_instance_,
      DailyShopDataProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyShopDataProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyShopDataProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DailyShopDataProto));
  DailyShopDataProto_PriceType_descriptor_ = DailyShopDataProto_descriptor_->enum_type(0);
  BuYuCreditsShopDatasProto_descriptor_ = file->message_type(62);
  static const int BuYuCreditsShopDatasProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuYuCreditsShopDatasProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuYuCreditsShopDatasProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuYuCreditsShopDatasProto, data_),
  };
  BuYuCreditsShopDatasProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuYuCreditsShopDatasProto_descriptor_,
      BuYuCreditsShopDatasProto::default_instance_,
      BuYuCreditsShopDatasProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuYuCreditsShopDatasProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuYuCreditsShopDatasProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuYuCreditsShopDatasProto));
  BuYuCreditsShopDataProto_descriptor_ = file->message_type(63);
  static const int BuYuCreditsShopDataProto_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuYuCreditsShopDataProto, goods_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuYuCreditsShopDataProto, sale_start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuYuCreditsShopDataProto, sale_end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuYuCreditsShopDataProto, credits_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuYuCreditsShopDataProto, credits_discount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuYuCreditsShopDataProto, max_exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuYuCreditsShopDataProto, yuanbao_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuYuCreditsShopDataProto, yuanbao_discount_),
  };
  BuYuCreditsShopDataProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BuYuCreditsShopDataProto_descriptor_,
      BuYuCreditsShopDataProto::default_instance_,
      BuYuCreditsShopDataProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuYuCreditsShopDataProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuYuCreditsShopDataProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BuYuCreditsShopDataProto));
  DailyFirstRechargePromotionDatasProto_descriptor_ = file->message_type(64);
  static const int DailyFirstRechargePromotionDatasProto_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyFirstRechargePromotionDatasProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyFirstRechargePromotionDatasProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyFirstRechargePromotionDatasProto, daily_prize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyFirstRechargePromotionDatasProto, final_prize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyFirstRechargePromotionDatasProto, promotion_type_),
  };
  DailyFirstRechargePromotionDatasProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DailyFirstRechargePromotionDatasProto_descriptor_,
      DailyFirstRechargePromotionDatasProto::default_instance_,
      DailyFirstRechargePromotionDatasProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyFirstRechargePromotionDatasProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyFirstRechargePromotionDatasProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DailyFirstRechargePromotionDatasProto));
  DailyFirstRechargePromotionDataProto_descriptor_ = file->message_type(65);
  static const int DailyFirstRechargePromotionDataProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyFirstRechargePromotionDataProto, goods_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyFirstRechargePromotionDataProto, recharge_yuanbao_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyFirstRechargePromotionDataProto, goods_show_),
  };
  DailyFirstRechargePromotionDataProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DailyFirstRechargePromotionDataProto_descriptor_,
      DailyFirstRechargePromotionDataProto::default_instance_,
      DailyFirstRechargePromotionDataProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyFirstRechargePromotionDataProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DailyFirstRechargePromotionDataProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DailyFirstRechargePromotionDataProto));
  FireworkPromotionDatasProto_descriptor_ = file->message_type(66);
  static const int FireworkPromotionDatasProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FireworkPromotionDatasProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FireworkPromotionDatasProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FireworkPromotionDatasProto, data_),
  };
  FireworkPromotionDatasProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FireworkPromotionDatasProto_descriptor_,
      FireworkPromotionDatasProto::default_instance_,
      FireworkPromotionDatasProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FireworkPromotionDatasProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FireworkPromotionDatasProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FireworkPromotionDatasProto));
  FireworkPromotionDataProto_descriptor_ = file->message_type(67);
  static const int FireworkPromotionDataProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FireworkPromotionDataProto, goods_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FireworkPromotionDataProto, color_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FireworkPromotionDataProto, get_prize_value_),
  };
  FireworkPromotionDataProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FireworkPromotionDataProto_descriptor_,
      FireworkPromotionDataProto::default_instance_,
      FireworkPromotionDataProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FireworkPromotionDataProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FireworkPromotionDataProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FireworkPromotionDataProto));
  SecretShopDatasProto_descriptor_ = file->message_type(68);
  static const int SecretShopDatasProto_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SecretShopDatasProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SecretShopDatasProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SecretShopDatasProto, refresh_cost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SecretShopDatasProto, refresh_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SecretShopDatasProto, data_),
  };
  SecretShopDatasProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SecretShopDatasProto_descriptor_,
      SecretShopDatasProto::default_instance_,
      SecretShopDatasProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SecretShopDatasProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SecretShopDatasProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SecretShopDatasProto));
  SecretShopDataProto_descriptor_ = file->message_type(69);
  static const int SecretShopDataProto_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SecretShopDataProto, goods_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SecretShopDataProto, random_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SecretShopDataProto, prize_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SecretShopDataProto, prize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SecretShopDataProto, prize_show_),
  };
  SecretShopDataProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SecretShopDataProto_descriptor_,
      SecretShopDataProto::default_instance_,
      SecretShopDataProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SecretShopDataProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SecretShopDataProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SecretShopDataProto));
  MonopolyConfigProto_descriptor_ = file->message_type(70);
  static const int MonopolyConfigProto_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonopolyConfigProto, cells_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonopolyConfigProto, random_dice_cost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonopolyConfigProto, controllable_dice_cost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonopolyConfigProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonopolyConfigProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonopolyConfigProto, daily_roll_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonopolyConfigProto, first_add_once_cost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonopolyConfigProto, roll_cd_),
  };
  MonopolyConfigProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MonopolyConfigProto_descriptor_,
      MonopolyConfigProto::default_instance_,
      MonopolyConfigProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonopolyConfigProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonopolyConfigProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MonopolyConfigProto));
  MonopolyCellProto_descriptor_ = file->message_type(71);
  static const int MonopolyCellProto_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonopolyCellProto, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonopolyCellProto, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonopolyCellProto, prize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonopolyCellProto, steps_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonopolyCellProto, icon_),
  };
  MonopolyCellProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MonopolyCellProto_descriptor_,
      MonopolyCellProto::default_instance_,
      MonopolyCellProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonopolyCellProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonopolyCellProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MonopolyCellProto));
  MonopolyCellProto_PrizeType_descriptor_ = MonopolyCellProto_descriptor_->enum_type(0);
  CollectShenzhuangRuleProto_descriptor_ = file->message_type(72);
  static const int CollectShenzhuangRuleProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectShenzhuangRuleProto, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectShenzhuangRuleProto, prize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectShenzhuangRuleProto, require_count_),
  };
  CollectShenzhuangRuleProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CollectShenzhuangRuleProto_descriptor_,
      CollectShenzhuangRuleProto::default_instance_,
      CollectShenzhuangRuleProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectShenzhuangRuleProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectShenzhuangRuleProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CollectShenzhuangRuleProto));
  CollectShenzhuangConfigProto_descriptor_ = file->message_type(73);
  static const int CollectShenzhuangConfigProto_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectShenzhuangConfigProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectShenzhuangConfigProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectShenzhuangConfigProto, collect_goods_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectShenzhuangConfigProto, rule_list_),
  };
  CollectShenzhuangConfigProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CollectShenzhuangConfigProto_descriptor_,
      CollectShenzhuangConfigProto::default_instance_,
      CollectShenzhuangConfigProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectShenzhuangConfigProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectShenzhuangConfigProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CollectShenzhuangConfigProto));
  FreeExchangeRuleProto_descriptor_ = file->message_type(74);
  static const int FreeExchangeRuleProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FreeExchangeRuleProto, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FreeExchangeRuleProto, prize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FreeExchangeRuleProto, require_count_),
  };
  FreeExchangeRuleProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FreeExchangeRuleProto_descriptor_,
      FreeExchangeRuleProto::default_instance_,
      FreeExchangeRuleProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FreeExchangeRuleProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FreeExchangeRuleProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FreeExchangeRuleProto));
  FreeExchangeConfigProto_descriptor_ = file->message_type(75);
  static const int FreeExchangeConfigProto_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FreeExchangeConfigProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FreeExchangeConfigProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FreeExchangeConfigProto, collect_goods_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FreeExchangeConfigProto, rule_list_),
  };
  FreeExchangeConfigProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FreeExchangeConfigProto_descriptor_,
      FreeExchangeConfigProto::default_instance_,
      FreeExchangeConfigProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FreeExchangeConfigProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FreeExchangeConfigProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FreeExchangeConfigProto));
  LoveDailyPrizeProto_descriptor_ = file->message_type(76);
  static const int LoveDailyPrizeProto_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoveDailyPrizeProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoveDailyPrizeProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoveDailyPrizeProto, prize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoveDailyPrizeProto, daily_hero_min_level_),
  };
  LoveDailyPrizeProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LoveDailyPrizeProto_descriptor_,
      LoveDailyPrizeProto::default_instance_,
      LoveDailyPrizeProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoveDailyPrizeProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoveDailyPrizeProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LoveDailyPrizeProto));
  LoveOnlinePrizeProto_descriptor_ = file->message_type(77);
  static const int LoveOnlinePrizeProto_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoveOnlinePrizeProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoveOnlinePrizeProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoveOnlinePrizeProto, minutes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoveOnlinePrizeProto, prize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoveOnlinePrizeProto, daily_max_online_minutes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoveOnlinePrizeProto, sign_),
  };
  LoveOnlinePrizeProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LoveOnlinePrizeProto_descriptor_,
      LoveOnlinePrizeProto::default_instance_,
      LoveOnlinePrizeProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoveOnlinePrizeProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoveOnlinePrizeProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LoveOnlinePrizeProto));
  LoveExchangeProto_descriptor_ = file->message_type(78);
  static const int LoveExchangeProto_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoveExchangeProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoveExchangeProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoveExchangeProto, ad_percent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoveExchangeProto, point_goods_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoveExchangeProto, point_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoveExchangeProto, items_),
  };
  LoveExchangeProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LoveExchangeProto_descriptor_,
      LoveExchangeProto::default_instance_,
      LoveExchangeProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoveExchangeProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoveExchangeProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LoveExchangeProto));
  LoveSingleExchangeProto_descriptor_ = file->message_type(79);
  static const int LoveSingleExchangeProto_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoveSingleExchangeProto, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoveSingleExchangeProto, point_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoveSingleExchangeProto, goods_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoveSingleExchangeProto, prize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoveSingleExchangeProto, daily_max_count_),
  };
  LoveSingleExchangeProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LoveSingleExchangeProto_descriptor_,
      LoveSingleExchangeProto::default_instance_,
      LoveSingleExchangeProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoveSingleExchangeProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoveSingleExchangeProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LoveSingleExchangeProto));
  GlobalMarriageChangeRankDatasProto_descriptor_ = file->message_type(80);
  static const int GlobalMarriageChangeRankDatasProto_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalMarriageChangeRankDatasProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalMarriageChangeRankDatasProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalMarriageChangeRankDatasProto, page_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalMarriageChangeRankDatasProto, total_page_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalMarriageChangeRankDatasProto, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalMarriageChangeRankDatasProto, sign_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalMarriageChangeRankDatasProto, daily_prize_haogan_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalMarriageChangeRankDatasProto, daily_prize_),
  };
  GlobalMarriageChangeRankDatasProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GlobalMarriageChangeRankDatasProto_descriptor_,
      GlobalMarriageChangeRankDatasProto::default_instance_,
      GlobalMarriageChangeRankDatasProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalMarriageChangeRankDatasProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalMarriageChangeRankDatasProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GlobalMarriageChangeRankDatasProto));
  GlobalMarriageChangeRankDataProto_descriptor_ = file->message_type(81);
  static const int GlobalMarriageChangeRankDataProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalMarriageChangeRankDataProto, last_rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalMarriageChangeRankDataProto, finalprize_),
  };
  GlobalMarriageChangeRankDataProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GlobalMarriageChangeRankDataProto_descriptor_,
      GlobalMarriageChangeRankDataProto::default_instance_,
      GlobalMarriageChangeRankDataProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalMarriageChangeRankDataProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalMarriageChangeRankDataProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GlobalMarriageChangeRankDataProto));
  NianshouDatasProto_descriptor_ = file->message_type(82);
  static const int NianshouDatasProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NianshouDatasProto, base_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NianshouDatasProto, rank_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NianshouDatasProto, count_per_page_),
  };
  NianshouDatasProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NianshouDatasProto_descriptor_,
      NianshouDatasProto::default_instance_,
      NianshouDatasProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NianshouDatasProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NianshouDatasProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NianshouDatasProto));
  NianshouDataProto_descriptor_ = file->message_type(83);
  static const int NianshouDataProto_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NianshouDataProto, start_date_millis_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NianshouDataProto, keep_days_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NianshouDataProto, day_start_minutes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NianshouDataProto, scene_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NianshouDataProto, big_nianshou_prize_goods_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NianshouDataProto, bianpao_goods_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NianshouDataProto, big_nianshou_max_life_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NianshouDataProto, small_nianshou_max_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NianshouDataProto, big_nianshou_monster_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NianshouDataProto, small_nianshou_monster_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NianshouDataProto, big_nianshou_x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NianshouDataProto, big_nianshou_y_),
  };
  NianshouDataProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NianshouDataProto_descriptor_,
      NianshouDataProto::default_instance_,
      NianshouDataProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NianshouDataProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NianshouDataProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NianshouDataProto));
  NianshouRankProto_descriptor_ = file->message_type(84);
  static const int NianshouRankProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NianshouRankProto, last_rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NianshouRankProto, dailyprize_),
  };
  NianshouRankProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NianshouRankProto_descriptor_,
      NianshouRankProto::default_instance_,
      NianshouRankProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NianshouRankProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NianshouRankProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NianshouRankProto));
  AnniversaryRechargeFanliProto_descriptor_ = file->message_type(85);
  static const int AnniversaryRechargeFanliProto_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnniversaryRechargeFanliProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnniversaryRechargeFanliProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnniversaryRechargeFanliProto, sign_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnniversaryRechargeFanliProto, yuanbao_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnniversaryRechargeFanliProto, percent_),
  };
  AnniversaryRechargeFanliProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AnniversaryRechargeFanliProto_descriptor_,
      AnniversaryRechargeFanliProto::default_instance_,
      AnniversaryRechargeFanliProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnniversaryRechargeFanliProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnniversaryRechargeFanliProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AnniversaryRechargeFanliProto));
  AnniversaryCakeProto_descriptor_ = file->message_type(86);
  static const int AnniversaryCakeProto_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnniversaryCakeProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnniversaryCakeProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnniversaryCakeProto, cakes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnniversaryCakeProto, npc_),
  };
  AnniversaryCakeProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AnniversaryCakeProto_descriptor_,
      AnniversaryCakeProto::default_instance_,
      AnniversaryCakeProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnniversaryCakeProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnniversaryCakeProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AnniversaryCakeProto));
  AnniversaryDailyPrizeProto_descriptor_ = file->message_type(87);
  static const int AnniversaryDailyPrizeProto_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnniversaryDailyPrizeProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnniversaryDailyPrizeProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnniversaryDailyPrizeProto, normal_prize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnniversaryDailyPrizeProto, vip_prize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnniversaryDailyPrizeProto, min_vip_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnniversaryDailyPrizeProto, type_),
  };
  AnniversaryDailyPrizeProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AnniversaryDailyPrizeProto_descriptor_,
      AnniversaryDailyPrizeProto::default_instance_,
      AnniversaryDailyPrizeProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnniversaryDailyPrizeProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnniversaryDailyPrizeProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AnniversaryDailyPrizeProto));
  ComebackPrizeProto_descriptor_ = file->message_type(88);
  static const int ComebackPrizeProto_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComebackPrizeProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComebackPrizeProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComebackPrizeProto, normal_prize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComebackPrizeProto, vip_prize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComebackPrizeProto, min_vip_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComebackPrizeProto, type_),
  };
  ComebackPrizeProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ComebackPrizeProto_descriptor_,
      ComebackPrizeProto::default_instance_,
      ComebackPrizeProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComebackPrizeProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComebackPrizeProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ComebackPrizeProto));
  AnniversaryDailyTaskProto_descriptor_ = file->message_type(89);
  static const int AnniversaryDailyTaskProto_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnniversaryDailyTaskProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnniversaryDailyTaskProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnniversaryDailyTaskProto, final_prize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnniversaryDailyTaskProto, size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnniversaryDailyTaskProto, group_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnniversaryDailyTaskProto, refresh_cost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnniversaryDailyTaskProto, refresh_add_cost_),
  };
  AnniversaryDailyTaskProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AnniversaryDailyTaskProto_descriptor_,
      AnniversaryDailyTaskProto::default_instance_,
      AnniversaryDailyTaskProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnniversaryDailyTaskProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AnniversaryDailyTaskProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AnniversaryDailyTaskProto));
  LoginPromotion2DatasProto_descriptor_ = file->message_type(90);
  static const int LoginPromotion2DatasProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginPromotion2DatasProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginPromotion2DatasProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginPromotion2DatasProto, daily_prize_),
  };
  LoginPromotion2DatasProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LoginPromotion2DatasProto_descriptor_,
      LoginPromotion2DatasProto::default_instance_,
      LoginPromotion2DatasProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginPromotion2DatasProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginPromotion2DatasProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LoginPromotion2DatasProto));
  LoginPromotion2DataProto_descriptor_ = file->message_type(91);
  static const int LoginPromotion2DataProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginPromotion2DataProto, goods_),
  };
  LoginPromotion2DataProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LoginPromotion2DataProto_descriptor_,
      LoginPromotion2DataProto::default_instance_,
      LoginPromotion2DataProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginPromotion2DataProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginPromotion2DataProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LoginPromotion2DataProto));
  MonthlyCardTaskProto_descriptor_ = file->message_type(92);
  static const int MonthlyCardTaskProto_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonthlyCardTaskProto, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonthlyCardTaskProto, task_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonthlyCardTaskProto, goal_target_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonthlyCardTaskProto, desc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonthlyCardTaskProto, type_),
  };
  MonthlyCardTaskProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MonthlyCardTaskProto_descriptor_,
      MonthlyCardTaskProto::default_instance_,
      MonthlyCardTaskProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonthlyCardTaskProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonthlyCardTaskProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MonthlyCardTaskProto));
  MonthlyCardPrizeProto_descriptor_ = file->message_type(93);
  static const int MonthlyCardPrizeProto_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonthlyCardPrizeProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonthlyCardPrizeProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonthlyCardPrizeProto, vip_lv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonthlyCardPrizeProto, mutiple_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonthlyCardPrizeProto, daily_prize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonthlyCardPrizeProto, task_prize_),
  };
  MonthlyCardPrizeProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MonthlyCardPrizeProto_descriptor_,
      MonthlyCardPrizeProto::default_instance_,
      MonthlyCardPrizeProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonthlyCardPrizeProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonthlyCardPrizeProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MonthlyCardPrizeProto));
  DoublePrizeProto_descriptor_ = file->message_type(94);
  static const int DoublePrizeProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoublePrizeProto, single_),
  };
  DoublePrizeProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DoublePrizeProto_descriptor_,
      DoublePrizeProto::default_instance_,
      DoublePrizeProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoublePrizeProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DoublePrizeProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DoublePrizeProto));
  SingleDoublePrizeProto_descriptor_ = file->message_type(95);
  static const int SingleDoublePrizeProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SingleDoublePrizeProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SingleDoublePrizeProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SingleDoublePrizeProto, type_),
  };
  SingleDoublePrizeProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SingleDoublePrizeProto_descriptor_,
      SingleDoublePrizeProto::default_instance_,
      SingleDoublePrizeProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SingleDoublePrizeProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SingleDoublePrizeProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SingleDoublePrizeProto));
  SingleDoublePrizeProto_DoublePrizeType_descriptor_ = SingleDoublePrizeProto_descriptor_->enum_type(0);
  GlobalMaxFightingAmountRankDataProto_descriptor_ = file->message_type(96);
  static const int GlobalMaxFightingAmountRankDataProto_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalMaxFightingAmountRankDataProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalMaxFightingAmountRankDataProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalMaxFightingAmountRankDataProto, rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalMaxFightingAmountRankDataProto, prizes_),
  };
  GlobalMaxFightingAmountRankDataProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GlobalMaxFightingAmountRankDataProto_descriptor_,
      GlobalMaxFightingAmountRankDataProto::default_instance_,
      GlobalMaxFightingAmountRankDataProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalMaxFightingAmountRankDataProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GlobalMaxFightingAmountRankDataProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GlobalMaxFightingAmountRankDataProto));
  ComebackProto_descriptor_ = file->message_type(97);
  static const int ComebackProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComebackProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComebackProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComebackProto, prize_),
  };
  ComebackProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ComebackProto_descriptor_,
      ComebackProto::default_instance_,
      ComebackProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComebackProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComebackProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ComebackProto));
  DaDiShuRankProto_descriptor_ = file->message_type(98);
  static const int DaDiShuRankProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DaDiShuRankProto, signle_),
  };
  DaDiShuRankProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DaDiShuRankProto_descriptor_,
      DaDiShuRankProto::default_instance_,
      DaDiShuRankProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DaDiShuRankProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DaDiShuRankProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DaDiShuRankProto));
  SingleDaDiShuRankProto_descriptor_ = file->message_type(99);
  static const int SingleDaDiShuRankProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SingleDaDiShuRankProto, begin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SingleDaDiShuRankProto, end_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SingleDaDiShuRankProto, prize_),
  };
  SingleDaDiShuRankProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SingleDaDiShuRankProto_descriptor_,
      SingleDaDiShuRankProto::default_instance_,
      SingleDaDiShuRankProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SingleDaDiShuRankProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SingleDaDiShuRankProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SingleDaDiShuRankProto));
  DaDiShuCreditsShopDatasProto_descriptor_ = file->message_type(100);
  static const int DaDiShuCreditsShopDatasProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DaDiShuCreditsShopDatasProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DaDiShuCreditsShopDatasProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DaDiShuCreditsShopDatasProto, data_),
  };
  DaDiShuCreditsShopDatasProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DaDiShuCreditsShopDatasProto_descriptor_,
      DaDiShuCreditsShopDatasProto::default_instance_,
      DaDiShuCreditsShopDatasProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DaDiShuCreditsShopDatasProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DaDiShuCreditsShopDatasProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DaDiShuCreditsShopDatasProto));
  DaDiShuCreditsShopDataProto_descriptor_ = file->message_type(101);
  static const int DaDiShuCreditsShopDataProto_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DaDiShuCreditsShopDataProto, goods_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DaDiShuCreditsShopDataProto, sale_start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DaDiShuCreditsShopDataProto, sale_end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DaDiShuCreditsShopDataProto, credits_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DaDiShuCreditsShopDataProto, credits_discount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DaDiShuCreditsShopDataProto, max_exchange_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DaDiShuCreditsShopDataProto, yuanbao_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DaDiShuCreditsShopDataProto, yuanbao_discount_),
  };
  DaDiShuCreditsShopDataProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DaDiShuCreditsShopDataProto_descriptor_,
      DaDiShuCreditsShopDataProto::default_instance_,
      DaDiShuCreditsShopDataProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DaDiShuCreditsShopDataProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DaDiShuCreditsShopDataProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DaDiShuCreditsShopDataProto));
  SysHongBaoDatasProto_descriptor_ = file->message_type(102);
  static const int SysHongBaoDatasProto_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SysHongBaoDatasProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SysHongBaoDatasProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SysHongBaoDatasProto, collect_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SysHongBaoDatasProto, recycal_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SysHongBaoDatasProto, open_lv_),
  };
  SysHongBaoDatasProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SysHongBaoDatasProto_descriptor_,
      SysHongBaoDatasProto::default_instance_,
      SysHongBaoDatasProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SysHongBaoDatasProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SysHongBaoDatasProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SysHongBaoDatasProto));
  ChouJiangFanLiProto_descriptor_ = file->message_type(103);
  static const int ChouJiangFanLiProto_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChouJiangFanLiProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChouJiangFanLiProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChouJiangFanLiProto, percent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChouJiangFanLiProto, yuanbao_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChouJiangFanLiProto, chip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChouJiangFanLiProto, draw_limitation_),
  };
  ChouJiangFanLiProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ChouJiangFanLiProto_descriptor_,
      ChouJiangFanLiProto::default_instance_,
      ChouJiangFanLiProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChouJiangFanLiProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChouJiangFanLiProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ChouJiangFanLiProto));
  UpgradePromotionProtoType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_promotion_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    JiuWeiHuDatasProto_descriptor_, &JiuWeiHuDatasProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    JiuWeiHuDataProto_descriptor_, &JiuWeiHuDataProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GuildHongBaoDatasProto_descriptor_, &GuildHongBaoDatasProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GuildHongBaoDataProto_descriptor_, &GuildHongBaoDataProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TiaoZhanDatasProto_descriptor_, &TiaoZhanDatasProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TiaoZhanRankDataProto_descriptor_, &TiaoZhanRankDataProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TiaoZhanExchangeDataProto_descriptor_, &TiaoZhanExchangeDataProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MoBingActivityDatasProto_descriptor_, &MoBingActivityDatasProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GlobalRechargePrizeDatasProto_descriptor_, &GlobalRechargePrizeDatasProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GlobalMarriageRankDatasProto_descriptor_, &GlobalMarriageRankDatasProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GlobalMarriageRankDataProto_descriptor_, &GlobalMarriageRankDataProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpgradeYuanbaoCutProto_descriptor_, &UpgradeYuanbaoCutProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpgradeYuanbaoCutSingleProto_descriptor_, &UpgradeYuanbaoCutSingleProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GlobalRechargeRankDatasProto_descriptor_, &GlobalRechargeRankDatasProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GlobalRechargeRankDataProto_descriptor_, &GlobalRechargeRankDataProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GlobalConsumeRankDatasProto_descriptor_, &GlobalConsumeRankDatasProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GlobalConsumeRankDataProto_descriptor_, &GlobalConsumeRankDataProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GlobalSelectImageDatasProto_descriptor_, &GlobalSelectImageDatasProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GlobalSelectImageRankDataProto_descriptor_, &GlobalSelectImageRankDataProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GlobalSelectImageRankTaskProto_descriptor_, &GlobalSelectImageRankTaskProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GlobalChargeFightAmountRankDataProto_descriptor_, &GlobalChargeFightAmountRankDataProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GlobalChargeFightAmountRankPrizeProto_descriptor_, &GlobalChargeFightAmountRankPrizeProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NewServerRechargeRankDatasProto_descriptor_, &NewServerRechargeRankDatasProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NewServerRechargeRankDataProto_descriptor_, &NewServerRechargeRankDataProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TuHaoDatasProto_descriptor_, &TuHaoDatasProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TuHaoDataProto_descriptor_, &TuHaoDataProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LaoBingBackDatasProto_descriptor_, &LaoBingBackDatasProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LaoBingBackDataProto_descriptor_, &LaoBingBackDataProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DingZhiDatasProto_descriptor_, &DingZhiDatasProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DingZhiDataProto_descriptor_, &DingZhiDataProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RechargeRebateProto_descriptor_, &RechargeRebateProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RechargeRebateSingleProto_descriptor_, &RechargeRebateSingleProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RechargeExchangeProto_descriptor_, &RechargeExchangeProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RechargeExchangeSingleProto_descriptor_, &RechargeExchangeSingleProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CollectPrizePromotionProto_descriptor_, &CollectPrizePromotionProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CollectPrizePromotionSingleProto_descriptor_, &CollectPrizePromotionSingleProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpgradePromotionProto_descriptor_, &UpgradePromotionProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UpgradePromotionSingleProto_descriptor_, &UpgradePromotionSingleProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AllServerStartRankPromotionProto_descriptor_, &AllServerStartRankPromotionProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RankPromotionProto_descriptor_, &RankPromotionProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RankPromotionSingleProto_descriptor_, &RankPromotionSingleProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    UnionRankPromotionProto_descriptor_, &UnionRankPromotionProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DailyConsumeProto_descriptor_, &DailyConsumeProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DailyConsumeSingleProto_descriptor_, &DailyConsumeSingleProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TaskPromotionProto_descriptor_, &TaskPromotionProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TaskPromotionPrizeListProto_descriptor_, &TaskPromotionPrizeListProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TaskPromotionRankDatasProto_descriptor_, &TaskPromotionRankDatasProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    WandaMovieConfigProto_descriptor_, &WandaMovieConfigProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RechargeBoxRebateConfigProto_descriptor_, &RechargeBoxRebateConfigProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RechargeBoxRebateRule_descriptor_, &RechargeBoxRebateRule::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ConsumeBoxRebateConfigProto_descriptor_, &ConsumeBoxRebateConfigProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ConsumeBoxRebateRule_descriptor_, &ConsumeBoxRebateRule::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GlobalChargeFightAmountChangedValueRankDataProto_descriptor_, &GlobalChargeFightAmountChangedValueRankDataProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GlobalChargeFightAmountChangedValueVRankPrizeProto_descriptor_, &GlobalChargeFightAmountChangedValueVRankPrizeProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    YYPurpleVipConfigProto_descriptor_, &YYPurpleVipConfigProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    YYPurpleVipNickProto_descriptor_, &YYPurpleVipNickProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    YYPurpleVipXinshoulibaoProto_descriptor_, &YYPurpleVipXinshoulibaoProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    YYPurpleVipShopProto_descriptor_, &YYPurpleVipShopProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreditsShopDatasProto_descriptor_, &CreditsShopDatasProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CreditsShopDataProto_descriptor_, &CreditsShopDataProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DailyShopDatasProto_descriptor_, &DailyShopDatasProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DailyShopDataProto_descriptor_, &DailyShopDataProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuYuCreditsShopDatasProto_descriptor_, &BuYuCreditsShopDatasProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BuYuCreditsShopDataProto_descriptor_, &BuYuCreditsShopDataProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DailyFirstRechargePromotionDatasProto_descriptor_, &DailyFirstRechargePromotionDatasProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DailyFirstRechargePromotionDataProto_descriptor_, &DailyFirstRechargePromotionDataProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FireworkPromotionDatasProto_descriptor_, &FireworkPromotionDatasProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FireworkPromotionDataProto_descriptor_, &FireworkPromotionDataProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SecretShopDatasProto_descriptor_, &SecretShopDatasProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SecretShopDataProto_descriptor_, &SecretShopDataProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MonopolyConfigProto_descriptor_, &MonopolyConfigProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MonopolyCellProto_descriptor_, &MonopolyCellProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CollectShenzhuangRuleProto_descriptor_, &CollectShenzhuangRuleProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CollectShenzhuangConfigProto_descriptor_, &CollectShenzhuangConfigProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FreeExchangeRuleProto_descriptor_, &FreeExchangeRuleProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FreeExchangeConfigProto_descriptor_, &FreeExchangeConfigProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LoveDailyPrizeProto_descriptor_, &LoveDailyPrizeProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LoveOnlinePrizeProto_descriptor_, &LoveOnlinePrizeProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LoveExchangeProto_descriptor_, &LoveExchangeProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LoveSingleExchangeProto_descriptor_, &LoveSingleExchangeProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GlobalMarriageChangeRankDatasProto_descriptor_, &GlobalMarriageChangeRankDatasProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GlobalMarriageChangeRankDataProto_descriptor_, &GlobalMarriageChangeRankDataProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NianshouDatasProto_descriptor_, &NianshouDatasProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NianshouDataProto_descriptor_, &NianshouDataProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NianshouRankProto_descriptor_, &NianshouRankProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AnniversaryRechargeFanliProto_descriptor_, &AnniversaryRechargeFanliProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AnniversaryCakeProto_descriptor_, &AnniversaryCakeProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AnniversaryDailyPrizeProto_descriptor_, &AnniversaryDailyPrizeProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ComebackPrizeProto_descriptor_, &ComebackPrizeProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AnniversaryDailyTaskProto_descriptor_, &AnniversaryDailyTaskProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LoginPromotion2DatasProto_descriptor_, &LoginPromotion2DatasProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LoginPromotion2DataProto_descriptor_, &LoginPromotion2DataProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MonthlyCardTaskProto_descriptor_, &MonthlyCardTaskProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MonthlyCardPrizeProto_descriptor_, &MonthlyCardPrizeProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DoublePrizeProto_descriptor_, &DoublePrizeProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SingleDoublePrizeProto_descriptor_, &SingleDoublePrizeProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GlobalMaxFightingAmountRankDataProto_descriptor_, &GlobalMaxFightingAmountRankDataProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ComebackProto_descriptor_, &ComebackProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DaDiShuRankProto_descriptor_, &DaDiShuRankProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SingleDaDiShuRankProto_descriptor_, &SingleDaDiShuRankProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DaDiShuCreditsShopDatasProto_descriptor_, &DaDiShuCreditsShopDatasProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DaDiShuCreditsShopDataProto_descriptor_, &DaDiShuCreditsShopDataProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SysHongBaoDatasProto_descriptor_, &SysHongBaoDatasProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ChouJiangFanLiProto_descriptor_, &ChouJiangFanLiProto::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_promotion_2eproto() {
  delete JiuWeiHuDatasProto::default_instance_;
  delete JiuWeiHuDatasProto_reflection_;
  delete JiuWeiHuDataProto::default_instance_;
  delete JiuWeiHuDataProto_reflection_;
  delete GuildHongBaoDatasProto::default_instance_;
  delete GuildHongBaoDatasProto_reflection_;
  delete GuildHongBaoDataProto::default_instance_;
  delete GuildHongBaoDataProto_reflection_;
  delete TiaoZhanDatasProto::default_instance_;
  delete TiaoZhanDatasProto_reflection_;
  delete TiaoZhanRankDataProto::default_instance_;
  delete TiaoZhanRankDataProto_reflection_;
  delete TiaoZhanExchangeDataProto::default_instance_;
  delete TiaoZhanExchangeDataProto_reflection_;
  delete MoBingActivityDatasProto::default_instance_;
  delete MoBingActivityDatasProto_reflection_;
  delete GlobalRechargePrizeDatasProto::default_instance_;
  delete GlobalRechargePrizeDatasProto_reflection_;
  delete GlobalMarriageRankDatasProto::default_instance_;
  delete GlobalMarriageRankDatasProto_reflection_;
  delete GlobalMarriageRankDataProto::default_instance_;
  delete GlobalMarriageRankDataProto_reflection_;
  delete UpgradeYuanbaoCutProto::default_instance_;
  delete UpgradeYuanbaoCutProto_reflection_;
  delete UpgradeYuanbaoCutSingleProto::default_instance_;
  delete UpgradeYuanbaoCutSingleProto_reflection_;
  delete GlobalRechargeRankDatasProto::default_instance_;
  delete GlobalRechargeRankDatasProto_reflection_;
  delete GlobalRechargeRankDataProto::default_instance_;
  delete GlobalRechargeRankDataProto_reflection_;
  delete GlobalConsumeRankDatasProto::default_instance_;
  delete GlobalConsumeRankDatasProto_reflection_;
  delete GlobalConsumeRankDataProto::default_instance_;
  delete GlobalConsumeRankDataProto_reflection_;
  delete GlobalSelectImageDatasProto::default_instance_;
  delete GlobalSelectImageDatasProto_reflection_;
  delete GlobalSelectImageRankDataProto::default_instance_;
  delete GlobalSelectImageRankDataProto_reflection_;
  delete GlobalSelectImageRankTaskProto::default_instance_;
  delete GlobalSelectImageRankTaskProto_reflection_;
  delete GlobalChargeFightAmountRankDataProto::default_instance_;
  delete GlobalChargeFightAmountRankDataProto_reflection_;
  delete GlobalChargeFightAmountRankPrizeProto::default_instance_;
  delete GlobalChargeFightAmountRankPrizeProto_reflection_;
  delete NewServerRechargeRankDatasProto::default_instance_;
  delete NewServerRechargeRankDatasProto_reflection_;
  delete NewServerRechargeRankDataProto::default_instance_;
  delete NewServerRechargeRankDataProto_reflection_;
  delete TuHaoDatasProto::default_instance_;
  delete TuHaoDatasProto_reflection_;
  delete TuHaoDataProto::default_instance_;
  delete TuHaoDataProto_reflection_;
  delete LaoBingBackDatasProto::default_instance_;
  delete LaoBingBackDatasProto_reflection_;
  delete LaoBingBackDataProto::default_instance_;
  delete LaoBingBackDataProto_reflection_;
  delete DingZhiDatasProto::default_instance_;
  delete DingZhiDatasProto_reflection_;
  delete DingZhiDataProto::default_instance_;
  delete DingZhiDataProto_reflection_;
  delete RechargeRebateProto::default_instance_;
  delete RechargeRebateProto_reflection_;
  delete RechargeRebateSingleProto::default_instance_;
  delete RechargeRebateSingleProto_reflection_;
  delete RechargeExchangeProto::default_instance_;
  delete RechargeExchangeProto_reflection_;
  delete RechargeExchangeSingleProto::default_instance_;
  delete RechargeExchangeSingleProto_reflection_;
  delete CollectPrizePromotionProto::default_instance_;
  delete CollectPrizePromotionProto_reflection_;
  delete CollectPrizePromotionSingleProto::default_instance_;
  delete CollectPrizePromotionSingleProto_reflection_;
  delete UpgradePromotionProto::default_instance_;
  delete UpgradePromotionProto_reflection_;
  delete UpgradePromotionSingleProto::default_instance_;
  delete UpgradePromotionSingleProto_reflection_;
  delete AllServerStartRankPromotionProto::default_instance_;
  delete AllServerStartRankPromotionProto_reflection_;
  delete RankPromotionProto::default_instance_;
  delete RankPromotionProto_reflection_;
  delete RankPromotionSingleProto::default_instance_;
  delete RankPromotionSingleProto_reflection_;
  delete UnionRankPromotionProto::default_instance_;
  delete UnionRankPromotionProto_reflection_;
  delete DailyConsumeProto::default_instance_;
  delete DailyConsumeProto_reflection_;
  delete DailyConsumeSingleProto::default_instance_;
  delete DailyConsumeSingleProto_reflection_;
  delete TaskPromotionProto::default_instance_;
  delete TaskPromotionProto_reflection_;
  delete TaskPromotionPrizeListProto::default_instance_;
  delete TaskPromotionPrizeListProto_reflection_;
  delete TaskPromotionRankDatasProto::default_instance_;
  delete TaskPromotionRankDatasProto_reflection_;
  delete WandaMovieConfigProto::default_instance_;
  delete WandaMovieConfigProto_reflection_;
  delete RechargeBoxRebateConfigProto::default_instance_;
  delete RechargeBoxRebateConfigProto_reflection_;
  delete RechargeBoxRebateRule::default_instance_;
  delete RechargeBoxRebateRule_reflection_;
  delete ConsumeBoxRebateConfigProto::default_instance_;
  delete ConsumeBoxRebateConfigProto_reflection_;
  delete ConsumeBoxRebateRule::default_instance_;
  delete ConsumeBoxRebateRule_reflection_;
  delete GlobalChargeFightAmountChangedValueRankDataProto::default_instance_;
  delete GlobalChargeFightAmountChangedValueRankDataProto_reflection_;
  delete GlobalChargeFightAmountChangedValueVRankPrizeProto::default_instance_;
  delete GlobalChargeFightAmountChangedValueVRankPrizeProto_reflection_;
  delete YYPurpleVipConfigProto::default_instance_;
  delete YYPurpleVipConfigProto_reflection_;
  delete YYPurpleVipNickProto::default_instance_;
  delete YYPurpleVipNickProto_reflection_;
  delete YYPurpleVipXinshoulibaoProto::default_instance_;
  delete YYPurpleVipXinshoulibaoProto_reflection_;
  delete YYPurpleVipShopProto::default_instance_;
  delete YYPurpleVipShopProto_reflection_;
  delete CreditsShopDatasProto::default_instance_;
  delete CreditsShopDatasProto_reflection_;
  delete CreditsShopDataProto::default_instance_;
  delete CreditsShopDataProto_reflection_;
  delete DailyShopDatasProto::default_instance_;
  delete DailyShopDatasProto_reflection_;
  delete DailyShopDataProto::default_instance_;
  delete DailyShopDataProto_reflection_;
  delete BuYuCreditsShopDatasProto::default_instance_;
  delete BuYuCreditsShopDatasProto_reflection_;
  delete BuYuCreditsShopDataProto::default_instance_;
  delete BuYuCreditsShopDataProto_reflection_;
  delete DailyFirstRechargePromotionDatasProto::default_instance_;
  delete DailyFirstRechargePromotionDatasProto_reflection_;
  delete DailyFirstRechargePromotionDataProto::default_instance_;
  delete DailyFirstRechargePromotionDataProto_reflection_;
  delete FireworkPromotionDatasProto::default_instance_;
  delete FireworkPromotionDatasProto_reflection_;
  delete FireworkPromotionDataProto::default_instance_;
  delete FireworkPromotionDataProto_reflection_;
  delete SecretShopDatasProto::default_instance_;
  delete SecretShopDatasProto_reflection_;
  delete SecretShopDataProto::default_instance_;
  delete SecretShopDataProto_reflection_;
  delete MonopolyConfigProto::default_instance_;
  delete MonopolyConfigProto_reflection_;
  delete MonopolyCellProto::default_instance_;
  delete MonopolyCellProto_reflection_;
  delete CollectShenzhuangRuleProto::default_instance_;
  delete CollectShenzhuangRuleProto_reflection_;
  delete CollectShenzhuangConfigProto::default_instance_;
  delete CollectShenzhuangConfigProto_reflection_;
  delete FreeExchangeRuleProto::default_instance_;
  delete FreeExchangeRuleProto_reflection_;
  delete FreeExchangeConfigProto::default_instance_;
  delete FreeExchangeConfigProto_reflection_;
  delete LoveDailyPrizeProto::default_instance_;
  delete LoveDailyPrizeProto_reflection_;
  delete LoveOnlinePrizeProto::default_instance_;
  delete LoveOnlinePrizeProto_reflection_;
  delete LoveExchangeProto::default_instance_;
  delete LoveExchangeProto_reflection_;
  delete LoveSingleExchangeProto::default_instance_;
  delete LoveSingleExchangeProto_reflection_;
  delete GlobalMarriageChangeRankDatasProto::default_instance_;
  delete GlobalMarriageChangeRankDatasProto_reflection_;
  delete GlobalMarriageChangeRankDataProto::default_instance_;
  delete GlobalMarriageChangeRankDataProto_reflection_;
  delete NianshouDatasProto::default_instance_;
  delete NianshouDatasProto_reflection_;
  delete NianshouDataProto::default_instance_;
  delete NianshouDataProto_reflection_;
  delete NianshouRankProto::default_instance_;
  delete NianshouRankProto_reflection_;
  delete AnniversaryRechargeFanliProto::default_instance_;
  delete AnniversaryRechargeFanliProto_reflection_;
  delete AnniversaryCakeProto::default_instance_;
  delete AnniversaryCakeProto_reflection_;
  delete AnniversaryDailyPrizeProto::default_instance_;
  delete AnniversaryDailyPrizeProto_reflection_;
  delete ComebackPrizeProto::default_instance_;
  delete ComebackPrizeProto_reflection_;
  delete AnniversaryDailyTaskProto::default_instance_;
  delete AnniversaryDailyTaskProto_reflection_;
  delete LoginPromotion2DatasProto::default_instance_;
  delete LoginPromotion2DatasProto_reflection_;
  delete LoginPromotion2DataProto::default_instance_;
  delete LoginPromotion2DataProto_reflection_;
  delete MonthlyCardTaskProto::default_instance_;
  delete MonthlyCardTaskProto_reflection_;
  delete MonthlyCardPrizeProto::default_instance_;
  delete MonthlyCardPrizeProto_reflection_;
  delete DoublePrizeProto::default_instance_;
  delete DoublePrizeProto_reflection_;
  delete SingleDoublePrizeProto::default_instance_;
  delete SingleDoublePrizeProto_reflection_;
  delete GlobalMaxFightingAmountRankDataProto::default_instance_;
  delete GlobalMaxFightingAmountRankDataProto_reflection_;
  delete ComebackProto::default_instance_;
  delete ComebackProto_reflection_;
  delete DaDiShuRankProto::default_instance_;
  delete DaDiShuRankProto_reflection_;
  delete SingleDaDiShuRankProto::default_instance_;
  delete SingleDaDiShuRankProto_reflection_;
  delete DaDiShuCreditsShopDatasProto::default_instance_;
  delete DaDiShuCreditsShopDatasProto_reflection_;
  delete DaDiShuCreditsShopDataProto::default_instance_;
  delete DaDiShuCreditsShopDataProto_reflection_;
  delete SysHongBaoDatasProto::default_instance_;
  delete SysHongBaoDatasProto_reflection_;
  delete ChouJiangFanLiProto::default_instance_;
  delete ChouJiangFanLiProto_reflection_;
}

void protobuf_AddDesc_promotion_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::app::message::protobuf_AddDesc_goods_2eproto();
  ::app::message::protobuf_AddDesc_prize_2eproto();
  ::app::message::protobuf_AddDesc_config_2eproto();
  ::app::message::protobuf_AddDesc_spritestat_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017promotion.proto\022\013app.message\032\013goods.pr"
    "oto\032\013prize.proto\032\014config.proto\032\020spritest"
    "at.proto\"h\n\022JiuWeiHuDatasProto\022\022\n\nstart_"
    "time\030\001 \001(\003\022\020\n\010end_time\030\002 \001(\003\022,\n\004data\030\003 \003"
    "(\0132\036.app.message.JiuWeiHuDataProto\"\351\002\n\021J"
    "iuWeiHuDataProto\022\n\n\002id\030\001 \001(\005\022\020\n\010recharge"
    "\030\002 \001(\005\022\021\n\tshield_id\030\003 \001(\005\022\030\n\020shield_big_"
    "level\030\004 \001(\005\022\035\n\025hero_equip_fashion_id\030\005 \003"
    "(\005\022\032\n\022mount_tong_ling_id\030\006 \001(\005\0227\n\021sprite"
    "_stat_proto\030\007 \001(\0132\034.app.message.SpriteSt"
    "atProto\022\020\n\010nickname\030\010 \001(\t\022\034\n\024shield_mons"
    "ter_data1\030\t \001(\t\022\034\n\024shield_monster_data2\030"
    "\n \001(\t\022\027\n\017fighting_amount\030\013 \001(\005\022.\n\006weapon"
    "\030\014 \001(\0132\036.app.message.GoodsWrapperProto\"~"
    "\n\026GuildHongBaoDatasProto\022\022\n\nstart_time\030\001"
    " \001(\003\022\020\n\010end_time\030\002 \001(\003\0220\n\004data\030\003 \001(\0132\".a"
    "pp.message.GuildHongBaoDataProto\022\014\n\004type"
    "\030\004 \001(\005\",\n\025GuildHongBaoDataProto\022\023\n\013max_g"
    "ive_yb\030\001 \001(\005\"\305\002\n\022TiaoZhanDatasProto\022\022\n\ns"
    "tart_time\030\001 \001(\003\022\020\n\010end_time\030\002 \001(\003\022\034\n\024fig"
    "ht_day_start_time\030\003 \001(\003\022\032\n\022fight_day_end"
    "_time\030\004 \001(\003\022;\n\017rank_data_proto\030\005 \003(\0132\".a"
    "pp.message.TiaoZhanRankDataProto\022C\n\023exch"
    "ange_data_proto\030\006 \003(\0132&.app.message.Tiao"
    "ZhanExchangeDataProto\022\031\n\021pair_timeout_ti"
    "me\030\007 \001(\005\022\025\n\rpair_yuan_bao\030\010 \003(\005\022\033\n\023shop_"
    "point_multiple\030\t \001(\005\"R\n\025TiaoZhanRankData"
    "Proto\022\021\n\tlast_rank\030\001 \001(\005\022&\n\005prize\030\002 \001(\0132"
    "\027.app.message.PrizeProto\"m\n\031TiaoZhanExch"
    "angeDataProto\022-\n\005goods\030\001 \001(\0132\036.app.messa"
    "ge.GoodsWrapperProto\022\022\n\nshop_point\030\002 \001(\005"
    "\022\r\n\005limit\030\003 \001(\005\"\236\001\n\030MoBingActivityDatasP"
    "roto\022\022\n\nstart_time\030\001 \001(\003\022\020\n\010end_time\030\002 \001"
    "(\003\022\024\n\014mo_bing_type\030\003 \001(\005\022\020\n\010recharge\030\004 \001"
    "(\005\022&\n\005prize\030\005 \001(\0132\027.app.message.PrizePro"
    "to\022\014\n\004desc\030\006 \001(\t\"\247\001\n\035GlobalRechargePrize"
    "DatasProto\022\022\n\nstart_time\030\001 \001(\003\022\020\n\010end_ti"
    "me\030\002 \001(\003\022\027\n\017recharge_amount\030\003 \001(\005\022&\n\005pri"
    "ze\030\004 \001(\0132\027.app.message.PrizeProto\022\014\n\004des"
    "c\030\005 \001(\t\022\021\n\tvip_level\030\006 \001(\005\"\244\001\n\034GlobalMar"
    "riageRankDatasProto\022\022\n\nstart_time\030\001 \001(\003\022"
    "\020\n\010end_time\030\002 \001(\003\022\022\n\npage_count\030\003 \001(\005\022\022\n"
    "\ntotal_page\030\004 \001(\005\0226\n\004data\030\005 \003(\0132(.app.me"
    "ssage.GlobalMarriageRankDataProto\"]\n\033Glo"
    "balMarriageRankDataProto\022\021\n\tlast_rank\030\001 "
    "\001(\005\022+\n\nfinalPrize\030\003 \001(\0132\027.app.message.Pr"
    "izeProto\"x\n\026UpgradeYuanbaoCutProto\022\022\n\nst"
    "art_time\030\001 \001(\003\022\020\n\010end_time\030\002 \001(\003\0228\n\005rule"
    "s\030\003 \003(\0132).app.message.UpgradeYuanbaoCutS"
    "ingleProto\"\270\003\n\034UpgradeYuanbaoCutSinglePr"
    "oto\022\027\n\017recharge_amount\030\001 \001(\005\022C\n\004type\030\002 \003"
    "(\01625.app.message.UpgradeYuanbaoCutSingle"
    "Proto.UpgradeType\022\022\n\npercentage\030\003 \003(\005\"\245\002"
    "\n\013UpgradeType\022\t\n\005MOUNT\020\001\022\013\n\007TIANJIE\020\002\022\013\n"
    "\007TIANZUI\020\003\022\007\n\003BOW\020\004\022\r\n\tSUPER_ARM\020\005\022\t\n\005DE"
    "MON\020\006\022\t\n\005CLOAK\020\007\022\t\n\005MOSHI\020\010\022\023\n\017QIAN_QIU_"
    "DA_JIE\020\t\022\025\n\021CHI_HUO_SHEN_GONG\020\n\022\013\n\007MOSHI"
    "_0\020\013\022\013\n\007MOSHI_1\020\014\022\013\n\007MOSHI_2\020\r\022\013\n\007MOSHI_"
    "3\020\016\022\014\n\010QIAN_QIU\020\017\022\n\n\006DA_JIE\020\020\022\014\n\010TIAN_XI"
    "E\020\021\022\n\n\006WU_DAO\020\022\022\n\n\006SHIELD\020\023\022\013\n\007LING_YU\020\024"
    "\022\013\n\007MO_FANG\020\025\"\374\001\n\034GlobalRechargeRankData"
    "sProto\022\022\n\nstart_time\030\001 \001(\003\022\020\n\010end_time\030\002"
    " \001(\003\022\022\n\npage_count\030\003 \001(\005\022\022\n\ntotal_page\030\004"
    " \001(\005\0226\n\004data\030\005 \003(\0132(.app.message.GlobalR"
    "echargeRankDataProto\022\036\n\026can_see_days_aft"
    "er_end\030\006 \001(\005\022\032\n\022daily_min_recharge\030\007 \001(\005"
    "\022\032\n\022final_min_recharge\030\010 \001(\005\"\230\001\n\033GlobalR"
    "echargeRankDataProto\022\021\n\tlast_rank\030\001 \001(\005\022"
    "+\n\ndailyPrize\030\002 \003(\0132\027.app.message.PrizeP"
    "roto\022+\n\nfinalPrize\030\003 \001(\0132\027.app.message.P"
    "rizeProto\022\014\n\004type\030\004 \001(\005\"\372\001\n\033GlobalConsum"
    "eRankDatasProto\022\022\n\nstart_time\030\001 \001(\003\022\020\n\010e"
    "nd_time\030\002 \001(\003\022\022\n\npage_count\030\003 \001(\005\022\022\n\ntot"
    "al_page\030\004 \001(\005\0225\n\004data\030\005 \003(\0132\'.app.messag"
    "e.GlobalConsumeRankDataProto\022\036\n\026can_see_"
    "days_after_end\030\006 \001(\005\022\032\n\022daily_min_rechar"
    "ge\030\007 \001(\005\022\032\n\022final_min_recharge\030\010 \001(\005\"\227\001\n"
    "\032GlobalConsumeRankDataProto\022\021\n\tlast_rank"
    "\030\001 \001(\005\022+\n\ndailyPrize\030\002 \003(\0132\027.app.message"
    ".PrizeProto\022+\n\nfinalPrize\030\003 \001(\0132\027.app.me"
    "ssage.PrizeProto\022\014\n\004type\030\004 \001(\005\"\343\002\n\033Globa"
    "lSelectImageDatasProto\022\022\n\nstart_time\030\001 \001"
    "(\003\022\020\n\010end_time\030\002 \001(\003\022\022\n\npage_count\030\003 \001(\005"
    "\022\022\n\ntotal_page\030\004 \001(\005\0229\n\004data\030\005 \003(\0132+.app"
    ".message.GlobalSelectImageRankDataProto\022"
    "\036\n\026can_see_days_after_end\030\006 \001(\005\022,\n\013score"
    "_prize\030\007 \001(\0132\027.app.message.PrizeProto\022\021\n"
    "\tmin_score\030\010 \001(\005\022\032\n\022reset_yuanbao_cost\030\t"
    " \001(\005\022>\n\ttask_list\030\n \003(\0132+.app.message.Gl"
    "obalSelectImageRankTaskProto\"`\n\036GlobalSe"
    "lectImageRankDataProto\022\021\n\tlast_rank\030\001 \001("
    "\005\022+\n\nfinalPrize\030\002 \001(\0132\027.app.message.Priz"
    "eProto\"v\n\036GlobalSelectImageRankTaskProto"
    "\022\020\n\010order_id\030\001 \001(\005\022\017\n\007image_a\030\002 \001(\t\022\017\n\007i"
    "mage_b\030\003 \001(\t\022\021\n\ttime_limt\030\004 \001(\005\022\r\n\005score"
    "\030\005 \001(\005\"\217\007\n$GlobalChargeFightAmountRankDa"
    "taProto\022\022\n\nstart_time\030\001 \001(\003\022\020\n\010end_time\030"
    "\002 \001(\003\022\022\n\npage_count\030\003 \001(\005\022\022\n\ntotal_page\030"
    "\004 \001(\005\022d\n\004type\030\005 \001(\0162V.app.message.Global"
    "ChargeFightAmountRankDataProto.GlobalCha"
    "rgeFightAmountRankProtoType\022\022\n\nbackgroun"
    "d\030\006 \001(\t\022\021\n\tmin_level\030\007 \001(\005\0221\n\014upgradeGoo"
    "ds\030\010 \003(\0132\033.app.message.GoodsDataProto\022B\n"
    "\006prizes\030\t \003(\01322.app.message.GlobalCharge"
    "FightAmountRankPrizeProto\"\224\004\n$GlobalChar"
    "geFightAmountRankProtoType\022\t\n\005MOUNT\020\001\022\014\n"
    "\010TIAN_JIE\020\002\022\014\n\010TIAN_ZUI\020\003\022\014\n\010ZHAN_JIA\020\004\022"
    "\r\n\tSUPER_ARM\020\005\022\t\n\005DEMON\020\006\022\t\n\005CLOAK\020\007\022\013\n\007"
    "MOSHI_0\020\010\022\013\n\007MOSHI_1\020\t\022\013\n\007MOSHI_2\020\n\022\013\n\007M"
    "OSHI_3\020\013\022\025\n\021QIAN_QIU_DA_JIE_0\020\014\022\025\n\021QIAN_"
    "QIU_DA_JIE_1\020\r\022\025\n\021CHI_HUO_SHEN_GONG\020\016\022\020\n"
    "\014SUPER_WEAPON\020\017\022\t\n\005SPELL\020\020\022\r\n\tSHOU_CANG\020"
    "\021\022\014\n\010TIAN_XIE\020\023\022\013\n\007MO_BING\020\024\022\n\n\006WU_DAO\020\025"
    "\022\n\n\006SHIELD\020\026\022\023\n\017QIAN_QIU_DA_JIE\020\027\022\014\n\010SHI"
    "ELD_1\020\030\022\014\n\010SHIELD_2\020\031\022\014\n\010SHIELD_3\020\032\022\014\n\010S"
    "HIELD_4\020\033\022\014\n\010SHIELD_5\020\034\022\014\n\010SHIELD_6\020\035\022\014\n"
    "\010SHIELD_7\020\036\022\014\n\010SHIELD_8\020\037\022\014\n\010SHIELD_9\020 \022"
    "\r\n\tSHIELD_10\020!\022\013\n\007LING_YU\020\"\022\013\n\007MO_FANG\020#"
    "\"b\n%GlobalChargeFightAmountRankPrizeProt"
    "o\022\021\n\tlast_rank\030\001 \001(\005\022&\n\005prize\030\002 \001(\0132\027.ap"
    "p.message.PrizeProto\"\236\001\n\037NewServerRechar"
    "geRankDatasProto\022\022\n\nstart_time\030\001 \001(\003\022\020\n\010"
    "end_time\030\002 \001(\003\0229\n\004data\030\005 \003(\0132+.app.messa"
    "ge.NewServerRechargeRankDataProto\022\032\n\022dai"
    "ly_min_recharge\030\007 \001(\005\"`\n\036NewServerRechar"
    "geRankDataProto\022\021\n\tlast_rank\030\001 \001(\005\022+\n\nda"
    "ilyPrize\030\002 \001(\0132\027.app.message.PrizeProto\""
    "b\n\017TuHaoDatasProto\022\022\n\nstart_time\030\001 \001(\003\022\020"
    "\n\010end_time\030\002 \001(\003\022)\n\004data\030\003 \003(\0132\033.app.mes"
    "sage.TuHaoDataProto\"\317\006\n\016TuHaoDataProto\022\014"
    "\n\004name\030\001 \001(\t\022&\n\005prize\030\002 \001(\0132\027.app.messag"
    "e.PrizeProto\022\035\n\025required_acc_recharge\030\003 "
    "\001(\005\022\034\n\024required_mount_level\030\004 \001(\005\022\037\n\027req"
    "uired_tian_zui_level\030\005 \001(\005\022\037\n\027required_t"
    "ian_jie_level\030\006 \001(\005\022\032\n\022required_bow_leve"
    "l\030\007 \001(\005\022 \n\030required_super_arm_level\030\010 \001("
    "\005\022\034\n\024required_demon_level\030\t \001(\005\022\034\n\024requi"
    "red_cloak_level\030\n \001(\005\022\032\n\022required_vip_le"
    "vel\030\013 \001(\005\022\036\n\026required_last_recharge\030\014 \001("
    "\010\022\014\n\004desc\030\r \001(\t\022#\n\033required_mo_shi_total"
    "_level\030\016 \001(\005\022,\n$required_qian_qiu_da_jie"
    "_total_level\030\017 \001(\005\022%\n\035required_mo_shi_he"
    "i_han_level\030\020 \001(\005\022%\n\035required_mo_shi_bin"
    "g_po_level\030\021 \001(\005\022$\n\034required_mo_shi_bai_"
    "lu_level\030\022 \001(\005\022%\n\035required_mo_shi_bu_tia"
    "n_level\030\023 \001(\005\022$\n\034required_qian_qiu_jian_"
    "level\030\024 \001(\005\022!\n\031required_da_jie_dao_level"
    "\030\025 \001(\005\022&\n\036required_chihuoshenggong_level"
    "\030\026 \001(\005\022&\n\036required_tianxiezhanjian_level"
    "\030\027 \001(\005\022\034\n\024required_wudao_level\030\030 \001(\005\022\037\n\027"
    "required_shield_1_level\030\031 \001(\005\"\355\001\n\025LaoBin"
    "gBackDatasProto\022\022\n\nstart_time\030\001 \001(\003\022\020\n\010e"
    "nd_time\030\002 \001(\003\022/\n\004data\030\003 \003(\0132!.app.messag"
    "e.LaoBingBackDataProto\022\021\n\tmin_level\030\004 \001("
    "\005\022\030\n\020min_offline_days\030\005 \001(\005\022\032\n\022recharge_"
    "one_prize\030\006 \001(\005\022\034\n\024online_prize_minutes\030"
    "\007 \001(\005\022\026\n\016max_prize_time\030\010 \001(\005\"f\n\024LaoBing"
    "BackDataProto\022\n\n\002id\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\022"
    "&\n\005prize\030\003 \001(\0132\027.app.message.PrizeProto\022"
    "\014\n\004desc\030\004 \001(\t\"f\n\021DingZhiDatasProto\022\022\n\nst"
    "art_time\030\001 \001(\003\022\020\n\010end_time\030\002 \001(\003\022+\n\004data"
    "\030\003 \001(\0132\035.app.message.DingZhiDataProto\"\262\002"
    "\n\020DingZhiDataProto\022\014\n\004name\030\001 \001(\t\022\014\n\004type"
    "\030\002 \001(\005\022\020\n\010yuan_bao\030\003 \001(\005\022\021\n\tmin_level\030\004 "
    "\001(\005\022\024\n\014target_level\030\005 \001(\005\0220\n\017secondary_p"
    "rize\030\006 \001(\0132\027.app.message.PrizeProto\022;\n\023f"
    "an_pai_prize_goods\030\007 \001(\0132\036.app.message.G"
    "oodsWrapperProto\022*\n\"extra_prize_required"
    "_fan_pai_times\030\010 \003(\005\022,\n\013extra_prize\030\t \003("
    "\0132\027.app.message.PrizeProto\"r\n\023RechargeRe"
    "bateProto\022\022\n\nstart_time\030\001 \001(\003\022\020\n\010end_tim"
    "e\030\002 \001(\003\0225\n\005prize\030\003 \003(\0132&.app.message.Rec"
    "hargeRebateSingleProto\"\214\001\n\031RechargeRebat"
    "eSingleProto\022\017\n\007yuanbao\030\001 \001(\005\022\r\n\005limit\030\002"
    " \001(\005\022&\n\005prize\030\004 \001(\0132\027.app.message.PrizeP"
    "roto\022\'\n\006prize2\030\005 \001(\0132\027.app.message.Prize"
    "Proto\"\243\001\n\025RechargeExchangeProto\022\022\n\nstart"
    "_time\030\001 \001(\003\022\020\n\010end_time\030\002 \001(\003\022<\n\nprize_i"
    "nfo\030\003 \003(\0132(.app.message.RechargeExchange"
    "SingleProto\022&\n\005prize\030\004 \001(\0132\027.app.message"
    ".PrizeProto\":\n\033RechargeExchangeSinglePro"
    "to\022\n\n\002id\030\001 \001(\005\022\017\n\007yuanbao\030\002 \001(\005\"\200\001\n\032Coll"
    "ectPrizePromotionProto\022\022\n\nstart_time\030\001 \001"
    "(\003\022\020\n\010end_time\030\002 \001(\003\022<\n\005prize\030\003 \003(\0132-.ap"
    "p.message.CollectPrizePromotionSinglePro"
    "to\"Y\n CollectPrizePromotionSingleProto\022\r"
    "\n\005level\030\001 \001(\005\022&\n\005prize\030\002 \001(\0132\027.app.messa"
    "ge.PrizeProto\"v\n\025UpgradePromotionProto\022\022"
    "\n\nstart_time\030\001 \001(\003\022\020\n\010end_time\030\002 \001(\003\0227\n\005"
    "prize\030\003 \003(\0132(.app.message.UpgradePromoti"
    "onSingleProto\"\240\001\n\033UpgradePromotionSingle"
    "Proto\022\r\n\005level\030\001 \001(\005\022\024\n\014global_limit\030\002 \001"
    "(\005\022&\n\005prize\030\004 \001(\0132\027.app.message.PrizePro"
    "to\0224\n\004type\030\005 \001(\0162&.app.message.UpgradePr"
    "omotionProtoType\"V\n AllServerStartRankPr"
    "omotionProto\0222\n\tpromotion\030\001 \003(\0132\037.app.me"
    "ssage.RankPromotionProto\"\347\002\n\022RankPromoti"
    "onProto\022\022\n\nstart_time\030\001 \001(\003\022\020\n\010end_time\030"
    "\002 \001(\003\022D\n\004type\030\003 \001(\01626.app.message.RankPr"
    "omotionProto.RankPromotionProtoType\022\r\n\005t"
    "itle\030\004 \001(\t\022\014\n\004name\030\005 \001(\t\022\014\n\004rule\030\006 \001(\t\0224"
    "\n\005prize\030\007 \003(\0132%.app.message.RankPromotio"
    "nSingleProto\022\024\n\014min_recharge\030\010 \001(\005\"n\n\026Ra"
    "nkPromotionProtoType\022\020\n\014FIGHT_AMOUNT\020\001\022\t"
    "\n\005MOUNT\020\002\022\014\n\010TIAN_JIE\020\003\022\014\n\010TIAN_ZUI\020\004\022\014\n"
    "\010ZHAN_JIA\020\005\022\r\n\tSUPER_ARM\020\006\"|\n\030RankPromot"
    "ionSingleProto\022-\n\005goods\030\001 \003(\0132\036.app.mess"
    "age.GoodsWrapperProto\022\r\n\005level\030\002 \001(\005\022\020\n\010"
    "min_rank\030\003 \001(\005\022\020\n\010max_rank\030\004 \001(\005\"\213\002\n\027Uni"
    "onRankPromotionProto\022\022\n\nstart_time\030\001 \001(\003"
    "\022\020\n\010end_time\030\002 \001(\003\022\r\n\005title\030\004 \001(\t\022\014\n\004nam"
    "e\030\005 \001(\t\022\014\n\004rule\030\006 \001(\t\0224\n\014leader_goods\030\007 "
    "\003(\0132\036.app.message.GoodsWrapperProto\0224\n\014w"
    "inner_goods\030\010 \003(\0132\036.app.message.GoodsWra"
    "pperProto\0223\n\013loser_goods\030\t \003(\0132\036.app.mes"
    "sage.GoodsWrapperProto\"n\n\021DailyConsumePr"
    "oto\022\022\n\nstart_time\030\001 \001(\003\022\020\n\010end_time\030\002 \001("
    "\003\0223\n\005prize\030\003 \003(\0132$.app.message.DailyCons"
    "umeSingleProto\"|\n\027DailyConsumeSingleProt"
    "o\022\017\n\007yuanbao\030\001 \001(\005\022\r\n\005limit\030\002 \001(\005\022\031\n\021req"
    "uire_vip_level\030\003 \001(\005\022&\n\005prize\030\004 \001(\0132\027.ap"
    "p.message.PrizeProto\"\355\001\n\022TaskPromotionPr"
    "oto\022\022\n\nstart_time\030\001 \001(\003\022\020\n\010end_time\030\002 \001("
    "\003\022\016\n\006points\030\003 \001(\005\022\035\n\025collected_point_pri"
    "ze\030\014 \003(\005\022\021\n\ttask_name\030\004 \003(\t\022\023\n\013goal_targ"
    "et\030\005 \003(\005\022\024\n\014goal_current\030\006 \003(\005\022+\n\ntask_p"
    "rize\030\007 \003(\0132\027.app.message.PrizeProto\022\027\n\017p"
    "rize_collected\030\010 \003(\010\"]\n\033TaskPromotionPri"
    "zeListProto\022\026\n\016required_point\030\001 \003(\005\022&\n\005p"
    "rize\030\002 \003(\0132\027.app.message.PrizeProto\"\275\002\n\033"
    "TaskPromotionRankDatasProto\022\022\n\nstart_tim"
    "e\030\001 \001(\003\022\020\n\010end_time\030\002 \001(\003\022\036\n\026can_see_day"
    "s_after_end\030\003 \001(\005\022(\n\007prize_1\030\004 \001(\0132\027.app"
    ".message.PrizeProto\022(\n\007prize_2\030\005 \001(\0132\027.a"
    "pp.message.PrizeProto\022(\n\007prize_3\030\006 \001(\0132\027"
    ".app.message.PrizeProto\022+\n\nprize_4_10\030\007 "
    "\001(\0132\027.app.message.PrizeProto\022-\n\014prize_11"
    "_100\030\010 \001(\0132\027.app.message.PrizeProto\"e\n\025W"
    "andaMovieConfigProto\022\022\n\nstart_time\030\001 \001(\003"
    "\022\020\n\010end_time\030\002 \001(\003\022&\n\005prize\030\003 \001(\0132\027.app."
    "message.PrizeProto\"v\n\034RechargeBoxRebateC"
    "onfigProto\022\022\n\nstart_time\030\001 \001(\003\022\020\n\010end_ti"
    "me\030\002 \001(\003\0220\n\004rule\030\003 \003(\0132\".app.message.Rec"
    "hargeBoxRebateRule\"\264\001\n\025RechargeBoxRebate"
    "Rule\022\032\n\022total_recharge_day\030\001 \001(\005\022\027\n\017yuan"
    "bao_per_day\030\002 \001(\005\022\014\n\004desc\030\003 \001(\t\022&\n\005prize"
    "\030\004 \001(\0132\027.app.message.PrizeProto\0220\n\017every"
    "_day_prize\030\005 \003(\0132\027.app.message.PrizeProt"
    "o\"t\n\033ConsumeBoxRebateConfigProto\022\022\n\nstar"
    "t_time\030\001 \001(\003\022\020\n\010end_time\030\002 \001(\003\022/\n\004rule\030\003"
    " \003(\0132!.app.message.ConsumeBoxRebateRule\""
    "\262\001\n\024ConsumeBoxRebateRule\022\031\n\021total_consum"
    "e_day\030\001 \001(\005\022\027\n\017yuanbao_per_day\030\002 \001(\005\022\014\n\004"
    "desc\030\003 \001(\t\022&\n\005prize\030\004 \001(\0132\027.app.message."
    "PrizeProto\0220\n\017every_day_prize\030\005 \003(\0132\027.ap"
    "p.message.PrizeProto\"\341\010\n0GlobalChargeFig"
    "htAmountChangedValueRankDataProto\022\022\n\nsta"
    "rt_time\030\001 \001(\003\022\020\n\010end_time\030\002 \001(\003\022\022\n\npage_"
    "count\030\003 \001(\005\022\022\n\ntotal_page\030\004 \001(\005\022\200\001\n\004type"
    "\030\005 \001(\0162n.app.message.GlobalChargeFightAm"
    "ountChangedValueRankDataProto.GlobalChar"
    "geFightAmountChangedValueRankProtoTypeB\002"
    "\030\001\022\022\n\nbackground\030\006 \001(\t\022+\n\ndailyPrize\030\007 \003"
    "(\0132\027.app.message.PrizeProto\022\034\n\024minDailyC"
    "hangedValue\030\010 \003(\005\022R\n\trankPrize\030\t \003(\0132\?.a"
    "pp.message.GlobalChargeFightAmountChange"
    "dValueVRankPrizeProto\022\205\001\n\rcombined_type\030"
    "\n \003(\0162n.app.message.GlobalChargeFightAmo"
    "untChangedValueRankDataProto.GlobalCharg"
    "eFightAmountChangedValueRankProtoType\"\240\004"
    "\n0GlobalChargeFightAmountChangedValueRan"
    "kProtoType\022\t\n\005MOUNT\020\001\022\014\n\010TIAN_JIE\020\002\022\014\n\010T"
    "IAN_ZUI\020\003\022\014\n\010ZHAN_JIA\020\004\022\r\n\tSUPER_ARM\020\005\022\t"
    "\n\005DEMON\020\006\022\t\n\005CLOAK\020\007\022\013\n\007MOSHI_0\020\010\022\013\n\007MOS"
    "HI_1\020\t\022\013\n\007MOSHI_2\020\n\022\013\n\007MOSHI_3\020\013\022\025\n\021QIAN"
    "_QIU_DA_JIE_0\020\014\022\025\n\021QIAN_QIU_DA_JIE_1\020\r\022\025"
    "\n\021CHI_HUO_SHEN_GONG\020\016\022\020\n\014SUPER_WEAPON\020\017\022"
    "\r\n\tSHOU_CANG\020\021\022\t\n\005MOSHI\020\022\022\014\n\010TIAN_XIE\020\023\022"
    "\013\n\007MO_BING\020\024\022\n\n\006WU_DAO\020\025\022\n\n\006SHIELD\020\026\022\023\n\017"
    "QIAN_QIU_DA_JIE\020\027\022\014\n\010SHIELD_1\020\030\022\014\n\010SHIEL"
    "D_2\020\031\022\014\n\010SHIELD_3\020\032\022\014\n\010SHIELD_4\020\033\022\014\n\010SHI"
    "ELD_5\020\034\022\014\n\010SHIELD_6\020\035\022\014\n\010SHIELD_7\020\036\022\014\n\010S"
    "HIELD_8\020\037\022\014\n\010SHIELD_9\020 \022\r\n\tSHIELD_10\020!\022\013"
    "\n\007LING_YU\020\"\022\013\n\007MO_FANG\020#\"o\n2GlobalCharge"
    "FightAmountChangedValueVRankPrizeProto\022\021"
    "\n\tlast_rank\030\001 \001(\005\022&\n\005prize\030\002 \001(\0132\027.app.m"
    "essage.PrizeProto\"\265\001\n\026YYPurpleVipConfigP"
    "roto\022/\n\004shop\030\001 \003(\0132!.app.message.YYPurpl"
    "eVipShopProto\0220\n\005nicks\030\002 \003(\0132!.app.messa"
    "ge.YYPurpleVipNickProto\0228\n\005libao\030\003 \003(\0132)"
    ".app.message.YYPurpleVipXinshoulibaoProt"
    "o\"9\n\024YYPurpleVipNickProto\022\017\n\007nick_id\030\001 \001"
    "(\005\022\020\n\010vip_type\030\002 \001(\005\"X\n\034YYPurpleVipXinsh"
    "oulibaoProto\022&\n\005prize\030\001 \001(\0132\027.app.messag"
    "e.PrizeProto\022\020\n\010vip_type\030\002 \001(\005\"\244\001\n\024YYPur"
    "pleVipShopProto\022&\n\005prize\030\001 \001(\0132\027.app.mes"
    "sage.PrizeProto\022\020\n\010vip_type\030\002 \001(\005\022\r\n\005ind"
    "ex\030\003 \001(\005\022\022\n\ntime_limit\030\004 \001(\005\022\022\n\nshow_pri"
    "ce\030\005 \001(\005\022\r\n\005price\030\006 \001(\005\022\014\n\004desc\030\007 \001(\t\"n\n"
    "\025CreditsShopDatasProto\022\022\n\nstart_time\030\001 \001"
    "(\003\022\020\n\010end_time\030\002 \001(\003\022/\n\004data\030\003 \003(\0132!.app"
    ".message.CreditsShopDataProto\"\341\001\n\024Credit"
    "sShopDataProto\022-\n\005goods\030\001 \001(\0132\036.app.mess"
    "age.GoodsWrapperProto\022\027\n\017sale_start_time"
    "\030\002 \001(\005\022\025\n\rsale_end_time\030\003 \001(\005\022\017\n\007credits"
    "\030\004 \001(\005\022\030\n\020credits_discount\030\005 \001(\005\022\024\n\014max_"
    "exchange\030\006 \001(\005\022\017\n\007yuanbao\030\007 \001(\005\022\030\n\020yuanb"
    "ao_discount\030\010 \001(\005\"j\n\023DailyShopDatasProto"
    "\022\022\n\nstart_time\030\001 \001(\003\022\020\n\010end_time\030\002 \001(\003\022-"
    "\n\004data\030\003 \003(\0132\037.app.message.DailyShopData"
    "Proto\"\367\001\n\022DailyShopDataProto\022-\n\005goods\030\001 "
    "\001(\0132\036.app.message.GoodsWrapperProto\022\021\n\td"
    "ay_count\030\002 \001(\005\022\024\n\014max_exchange\030\003 \001(\005\022=\n\n"
    "price_type\030\004 \001(\0162).app.message.DailyShop"
    "DataProto.PriceType\022\r\n\005price\030\005 \001(\005\022\026\n\016pr"
    "ice_discount\030\006 \001(\005\"#\n\tPriceType\022\t\n\005LIJIN"
    "\020\001\022\013\n\007YUANBAO\020\002\"v\n\031BuYuCreditsShopDatasP"
    "roto\022\022\n\nstart_time\030\001 \001(\003\022\020\n\010end_time\030\002 \001"
    "(\003\0223\n\004data\030\003 \003(\0132%.app.message.BuYuCredi"
    "tsShopDataProto\"\345\001\n\030BuYuCreditsShopDataP"
    "roto\022-\n\005goods\030\001 \001(\0132\036.app.message.GoodsW"
    "rapperProto\022\027\n\017sale_start_time\030\002 \001(\005\022\025\n\r"
    "sale_end_time\030\003 \001(\005\022\017\n\007credits\030\004 \001(\005\022\030\n\020"
    "credits_discount\030\005 \001(\005\022\024\n\014max_exchange\030\006"
    " \001(\005\022\017\n\007yuanbao\030\007 \001(\005\022\030\n\020yuanbao_discoun"
    "t\030\010 \001(\005\"\365\001\n%DailyFirstRechargePromotionD"
    "atasProto\022\022\n\nstart_time\030\001 \001(\003\022\020\n\010end_tim"
    "e\030\002 \001(\003\022F\n\013daily_prize\030\003 \003(\01321.app.messa"
    "ge.DailyFirstRechargePromotionDataProto\022"
    "F\n\013final_prize\030\004 \001(\01321.app.message.Daily"
    "FirstRechargePromotionDataProto\022\026\n\016promo"
    "tion_type\030\005 \001(\005\"\243\001\n$DailyFirstRechargePr"
    "omotionDataProto\022-\n\005goods\030\001 \003(\0132\036.app.me"
    "ssage.GoodsWrapperProto\022\030\n\020recharge_yuan"
    "bao\030\002 \001(\005\0222\n\ngoods_show\030\003 \003(\0132\036.app.mess"
    "age.GoodsWrapperProto\"z\n\033FireworkPromoti"
    "onDatasProto\022\022\n\nstart_time\030\001 \001(\003\022\020\n\010end_"
    "time\030\002 \001(\003\0225\n\004data\030\003 \003(\0132\'.app.message.F"
    "ireworkPromotionDataProto\"x\n\032FireworkPro"
    "motionDataProto\022-\n\005goods\030\001 \003(\0132\036.app.mes"
    "sage.GoodsWrapperProto\022\022\n\ncolor_type\030\002 \001"
    "(\005\022\027\n\017get_prize_value\030\003 \001(\005\"\230\001\n\024SecretSh"
    "opDatasProto\022\022\n\nstart_time\030\001 \001(\003\022\020\n\010end_"
    "time\030\002 \001(\003\022\024\n\014refresh_cost\030\003 \003(\005\022\024\n\014refr"
    "esh_time\030\004 \003(\003\022.\n\004data\030\005 \003(\0132 .app.messa"
    "ge.SecretShopDataProto\"\220\001\n\023SecretShopDat"
    "aProto\022-\n\005goods\030\001 \001(\0132\036.app.message.Good"
    "sWrapperProto\022\023\n\013random_type\030\002 \001(\005\022\022\n\npr"
    "ize_type\030\003 \001(\005\022\r\n\005prize\030\004 \001(\005\022\022\n\nprize_s"
    "how\030\005 \001(\005\"\242\002\n\023MonopolyConfigProto\022-\n\005cel"
    "ls\030\001 \003(\0132\036.app.message.MonopolyCellProto"
    "\0223\n\020random_dice_cost\030\002 \001(\0132\031.app.message"
    ".UpgradeProto\0229\n\026controllable_dice_cost\030"
    "\003 \001(\0132\031.app.message.UpgradeProto\022\022\n\nstar"
    "t_time\030\004 \001(\003\022\020\n\010end_time\030\005 \001(\003\022\030\n\020daily_"
    "roll_count\030\006 \001(\005\022\033\n\023first_add_once_cost\030"
    "\007 \001(\005\022\017\n\007roll_cd\030\010 \001(\005\"\322\001\n\021MonopolyCellP"
    "roto\022\n\n\002id\030\001 \001(\005\0226\n\004type\030\002 \001(\0162(.app.mes"
    "sage.MonopolyCellProto.PrizeType\022-\n\005priz"
    "e\030\003 \001(\0132\036.app.message.GoodsWrapperProto\022"
    "\r\n\005steps\030\004 \001(\005\022\014\n\004icon\030\005 \001(\t\"-\n\tPrizeTyp"
    "e\022\013\n\007NOTHING\020\001\022\t\n\005GOODS\020\002\022\010\n\004STEP\020\003\"i\n\032C"
    "ollectShenzhuangRuleProto\022\014\n\004type\030\001 \001(\005\022"
    "&\n\005prize\030\002 \001(\0132\027.app.message.PrizeProto\022"
    "\025\n\rrequire_count\030\003 \001(\005\"\267\001\n\034CollectShenzh"
    "uangConfigProto\022\022\n\nstart_time\030\001 \001(\003\022\020\n\010e"
    "nd_time\030\002 \001(\003\0225\n\rcollect_goods\030\003 \003(\0132\036.a"
    "pp.message.GoodsWrapperProto\022:\n\trule_lis"
    "t\030\004 \003(\0132\'.app.message.CollectShenzhuangR"
    "uleProto\"d\n\025FreeExchangeRuleProto\022\014\n\004typ"
    "e\030\001 \001(\005\022&\n\005prize\030\002 \001(\0132\027.app.message.Pri"
    "zeProto\022\025\n\rrequire_count\030\003 \001(\005\"\255\001\n\027FreeE"
    "xchangeConfigProto\022\022\n\nstart_time\030\001 \001(\003\022\020"
    "\n\010end_time\030\002 \001(\003\0225\n\rcollect_goods\030\003 \003(\0132"
    "\036.app.message.GoodsWrapperProto\0225\n\trule_"
    "list\030\004 \003(\0132\".app.message.FreeExchangeRul"
    "eProto\"\201\001\n\023LoveDailyPrizeProto\022\022\n\nstart_"
    "time\030\001 \001(\003\022\020\n\010end_time\030\002 \001(\003\022&\n\005prize\030\003 "
    "\001(\0132\027.app.message.PrizeProto\022\034\n\024daily_he"
    "ro_min_level\030\004 \001(\005\"\254\001\n\024LoveOnlinePrizePr"
    "oto\022\022\n\nstart_time\030\001 \001(\003\022\020\n\010end_time\030\002 \001("
    "\003\022\017\n\007minutes\030\003 \003(\005\022-\n\005prize\030\004 \003(\0132\036.app."
    "message.GoodsWrapperProto\022 \n\030daily_max_o"
    "nline_minutes\030\005 \001(\005\022\014\n\004sign\030\006 \001(\005\"\306\001\n\021Lo"
    "veExchangeProto\022\022\n\nstart_time\030\001 \001(\003\022\020\n\010e"
    "nd_time\030\002 \001(\003\022\022\n\nad_percent\030\003 \001(\005\0223\n\013poi"
    "nt_goods\030\004 \003(\0132\036.app.message.GoodsWrappe"
    "rProto\022\r\n\005point\030\005 \003(\005\0223\n\005items\030\006 \003(\0132$.a"
    "pp.message.LoveSingleExchangeProto\"\253\001\n\027L"
    "oveSingleExchangeProto\022\n\n\002id\030\001 \001(\005\022\r\n\005po"
    "int\030\002 \001(\005\022-\n\005goods\030\003 \003(\0132\036.app.message.G"
    "oodsWrapperProto\022-\n\005prize\030\004 \001(\0132\036.app.me"
    "ssage.GoodsWrapperProto\022\027\n\017daily_max_cou"
    "nt\030\005 \001(\005\"\210\002\n\"GlobalMarriageChangeRankDat"
    "asProto\022\022\n\nstart_time\030\001 \001(\003\022\020\n\010end_time\030"
    "\002 \001(\003\022\022\n\npage_count\030\003 \001(\005\022\022\n\ntotal_page\030"
    "\004 \001(\005\022<\n\004data\030\005 \003(\0132..app.message.Global"
    "MarriageChangeRankDataProto\022\014\n\004sign\030\006 \001("
    "\005\022\032\n\022daily_prize_haogan\030\007 \003(\005\022,\n\013daily_p"
    "rize\030\010 \003(\0132\027.app.message.PrizeProto\"c\n!G"
    "lobalMarriageChangeRankDataProto\022\021\n\tlast"
    "_rank\030\001 \001(\005\022+\n\nfinalPrize\030\003 \001(\0132\027.app.me"
    "ssage.PrizeProto\"\222\001\n\022NianshouDatasProto\022"
    "1\n\tbase_data\030\001 \001(\0132\036.app.message.Niansho"
    "uDataProto\0221\n\trank_data\030\002 \003(\0132\036.app.mess"
    "age.NianshouRankProto\022\026\n\016count_per_page\030"
    "\003 \001(\005\"\374\002\n\021NianshouDataProto\022\031\n\021start_dat"
    "e_millis\030\001 \001(\003\022\021\n\tkeep_days\030\002 \001(\005\022\031\n\021day"
    "_start_minutes\030\003 \003(\005\022\020\n\010scene_id\030\005 \001(\005\022@"
    "\n\030big_nianshou_prize_goods\030\006 \003(\0132\036.app.m"
    "essage.GoodsWrapperProto\022\025\n\rbianpao_good"
    "s\030\007 \001(\014\022\035\n\025big_nianshou_max_life\030\010 \001(\003\022 "
    "\n\030small_nianshou_max_count\030\t \001(\005\022\037\n\027big_"
    "nianshou_monster_id\030\n \001(\005\022!\n\031small_nians"
    "hou_monster_id\030\013 \001(\005\022\026\n\016big_nianshou_x\030\014"
    " \001(\005\022\026\n\016big_nianshou_y\030\r \001(\005\"S\n\021Nianshou"
    "RankProto\022\021\n\tlast_rank\030\001 \001(\005\022+\n\ndailyPri"
    "ze\030\002 \001(\0132\027.app.message.PrizeProto\"u\n\035Ann"
    "iversaryRechargeFanliProto\022\022\n\nstart_time"
    "\030\001 \001(\003\022\020\n\010end_time\030\002 \001(\003\022\014\n\004sign\030\005 \001(\003\022\017"
    "\n\007yuanbao\030\003 \003(\005\022\017\n\007percent\030\004 \003(\005\"x\n\024Anni"
    "versaryCakeProto\022\022\n\nstart_time\030\001 \001(\003\022\020\n\010"
    "end_time\030\002 \001(\003\022-\n\005cakes\030\003 \003(\0132\036.app.mess"
    "age.GoodsWrapperProto\022\013\n\003npc\030\004 \001(\005\"\302\001\n\032A"
    "nniversaryDailyPrizeProto\022\022\n\nstart_time\030"
    "\001 \001(\003\022\020\n\010end_time\030\002 \001(\003\022-\n\014normal_prize\030"
    "\003 \001(\0132\027.app.message.PrizeProto\022*\n\tvip_pr"
    "ize\030\004 \001(\0132\027.app.message.PrizeProto\022\025\n\rmi"
    "n_vip_level\030\005 \001(\005\022\014\n\004type\030\006 \001(\005\"\272\001\n\022Come"
    "backPrizeProto\022\022\n\nstart_time\030\001 \001(\003\022\020\n\010en"
    "d_time\030\002 \001(\003\022-\n\014normal_prize\030\003 \001(\0132\027.app"
    ".message.PrizeProto\022*\n\tvip_prize\030\004 \001(\0132\027"
    ".app.message.PrizeProto\022\025\n\rmin_vip_level"
    "\030\005 \001(\005\022\014\n\004type\030\006 \001(\005\"\274\001\n\031AnniversaryDail"
    "yTaskProto\022\022\n\nstart_time\030\001 \001(\003\022\020\n\010end_ti"
    "me\030\002 \001(\003\022,\n\013final_prize\030\003 \001(\0132\027.app.mess"
    "age.PrizeProto\022\014\n\004size\030\004 \001(\005\022\r\n\005group\030\005 "
    "\003(\005\022\024\n\014refresh_cost\030\006 \001(\005\022\030\n\020refresh_add"
    "_cost\030\007 \001(\005\"}\n\031LoginPromotion2DatasProto"
    "\022\022\n\nstart_time\030\001 \001(\003\022\020\n\010end_time\030\002 \001(\003\022:"
    "\n\013daily_prize\030\003 \003(\0132%.app.message.LoginP"
    "romotion2DataProto\"I\n\030LoginPromotion2Dat"
    "aProto\022-\n\005goods\030\001 \003(\0132\036.app.message.Good"
    "sWrapperProto\"f\n\024MonthlyCardTaskProto\022\n\n"
    "\002id\030\001 \001(\005\022\021\n\ttask_name\030\002 \001(\t\022\023\n\013goal_tar"
    "get\030\003 \001(\005\022\014\n\004desc\030\004 \001(\t\022\014\n\004type\030\005 \001(\005\"\300\001"
    "\n\025MonthlyCardPrizeProto\022\022\n\nstart_time\030\001 "
    "\001(\003\022\020\n\010end_time\030\002 \001(\003\022\016\n\006vip_lv\030\003 \003(\005\022\017\n"
    "\007mutiple\030\004 \003(\005\0223\n\013daily_prize\030\005 \003(\0132\036.ap"
    "p.message.GoodsWrapperProto\022+\n\ntask_priz"
    "e\030\006 \001(\0132\027.app.message.PrizeProto\"G\n\020Doub"
    "lePrizeProto\0223\n\006single\030\001 \003(\0132#.app.messa"
    "ge.SingleDoublePrizeProto\"\261\001\n\026SingleDoub"
    "lePrizeProto\022\022\n\nstart_time\030\001 \001(\003\022\020\n\010end_"
    "time\030\002 \001(\003\022A\n\004type\030\003 \001(\01623.app.message.S"
    "ingleDoublePrizeProto.DoublePrizeType\".\n"
    "\017DoublePrizeType\022\r\n\tZHONG_QIU\020\001\022\014\n\010GUO_Q"
    "ING\020\002\"\203\001\n$GlobalMaxFightingAmountRankDat"
    "aProto\022\022\n\nstart_time\030\001 \001(\003\022\020\n\010end_time\030\002"
    " \001(\003\022\014\n\004rank\030\003 \003(\t\022\'\n\006prizes\030\004 \003(\0132\027.app"
    ".message.PrizeProto\"]\n\rComebackProto\022\022\n\n"
    "start_time\030\001 \001(\003\022\020\n\010end_time\030\002 \001(\003\022&\n\005pr"
    "ize\030\003 \003(\0132\027.app.message.PrizeProto\"G\n\020Da"
    "DiShuRankProto\0223\n\006signle\030\003 \003(\0132#.app.mes"
    "sage.SingleDaDiShuRankProto\"\\\n\026SingleDaD"
    "iShuRankProto\022\r\n\005begin\030\001 \001(\005\022\013\n\003end\030\002 \001("
    "\005\022&\n\005prize\030\003 \001(\0132\027.app.message.PrizeProt"
    "o\"|\n\034DaDiShuCreditsShopDatasProto\022\022\n\nsta"
    "rt_time\030\001 \001(\003\022\020\n\010end_time\030\002 \001(\003\0226\n\004data\030"
    "\003 \003(\0132(.app.message.DaDiShuCreditsShopDa"
    "taProto\"\350\001\n\033DaDiShuCreditsShopDataProto\022"
    "-\n\005goods\030\001 \001(\0132\036.app.message.GoodsWrappe"
    "rProto\022\027\n\017sale_start_time\030\002 \001(\005\022\025\n\rsale_"
    "end_time\030\003 \001(\005\022\017\n\007credits\030\004 \001(\005\022\030\n\020credi"
    "ts_discount\030\005 \001(\005\022\024\n\014max_exchange\030\006 \001(\005\022"
    "\017\n\007yuanbao\030\007 \001(\005\022\030\n\020yuanbao_discount\030\010 \001"
    "(\005\"y\n\024SysHongBaoDatasProto\022\022\n\nstart_time"
    "\030\001 \001(\003\022\020\n\010end_time\030\002 \001(\003\022\024\n\014collect_time"
    "\030\004 \003(\003\022\024\n\014recycal_time\030\005 \003(\003\022\017\n\007open_lv\030"
    "\006 \001(\005\"\204\001\n\023ChouJiangFanLiProto\022\022\n\nstart_t"
    "ime\030\001 \001(\003\022\020\n\010end_time\030\002 \001(\003\022\017\n\007percent\030\003"
    " \003(\005\022\017\n\007yuanbao\030\004 \003(\005\022\014\n\004chip\030\005 \003(\005\022\027\n\017d"
    "raw_limitation\030\006 \001(\005*\237\003\n\031UpgradePromotio"
    "nProtoType\022\t\n\005LEVEL\020\001\022\t\n\005MOUNT\020\002\022\014\n\010TIAN"
    "_JIE\020\003\022\014\n\010TIAN_ZUI\020\004\022\014\n\010ZHAN_JIA\020\005\022\r\n\tSU"
    "PER_ARM\020\006\022\t\n\005DEMON\020\007\022\t\n\005CLOAK\020\010\022\013\n\007MOSHI"
    "_0\020\t\022\013\n\007MOSHI_1\020\n\022\013\n\007MOSHI_2\020\013\022\013\n\007MOSHI_"
    "3\020\014\022\t\n\005MOSHI\020\r\022\025\n\021QIAN_QIU_DA_JIE_0\020\016\022\025\n"
    "\021QIAN_QIU_DA_JIE_1\020\017\022\023\n\017QIAN_QIU_DA_JIE\020"
    "\020\022\025\n\021CHI_HUO_SHEN_GONG\020\021\022\014\n\010TIAN_XIE\020\022\022\n"
    "\n\006WU_DAO\020\023\022\n\n\006SHIELD\020\024\022\014\n\010SHIELD_1\020\025\022\014\n\010"
    "SHIELD_2\020\026\022\014\n\010SHIELD_3\020\027\022\014\n\010SHIELD_4\020\030\022\014"
    "\n\010SHIELD_5\020\031\022\013\n\007LING_YU\020\032\022\013\n\007MO_FANG\020\033B\""
    "\n\014app.protobufB\020PromotionContentH\001", 19754);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "promotion.proto", &protobuf_RegisterTypes);
  JiuWeiHuDatasProto::default_instance_ = new JiuWeiHuDatasProto();
  JiuWeiHuDataProto::default_instance_ = new JiuWeiHuDataProto();
  GuildHongBaoDatasProto::default_instance_ = new GuildHongBaoDatasProto();
  GuildHongBaoDataProto::default_instance_ = new GuildHongBaoDataProto();
  TiaoZhanDatasProto::default_instance_ = new TiaoZhanDatasProto();
  TiaoZhanRankDataProto::default_instance_ = new TiaoZhanRankDataProto();
  TiaoZhanExchangeDataProto::default_instance_ = new TiaoZhanExchangeDataProto();
  MoBingActivityDatasProto::default_instance_ = new MoBingActivityDatasProto();
  GlobalRechargePrizeDatasProto::default_instance_ = new GlobalRechargePrizeDatasProto();
  GlobalMarriageRankDatasProto::default_instance_ = new GlobalMarriageRankDatasProto();
  GlobalMarriageRankDataProto::default_instance_ = new GlobalMarriageRankDataProto();
  UpgradeYuanbaoCutProto::default_instance_ = new UpgradeYuanbaoCutProto();
  UpgradeYuanbaoCutSingleProto::default_instance_ = new UpgradeYuanbaoCutSingleProto();
  GlobalRechargeRankDatasProto::default_instance_ = new GlobalRechargeRankDatasProto();
  GlobalRechargeRankDataProto::default_instance_ = new GlobalRechargeRankDataProto();
  GlobalConsumeRankDatasProto::default_instance_ = new GlobalConsumeRankDatasProto();
  GlobalConsumeRankDataProto::default_instance_ = new GlobalConsumeRankDataProto();
  GlobalSelectImageDatasProto::default_instance_ = new GlobalSelectImageDatasProto();
  GlobalSelectImageRankDataProto::default_instance_ = new GlobalSelectImageRankDataProto();
  GlobalSelectImageRankTaskProto::default_instance_ = new GlobalSelectImageRankTaskProto();
  GlobalChargeFightAmountRankDataProto::default_instance_ = new GlobalChargeFightAmountRankDataProto();
  GlobalChargeFightAmountRankPrizeProto::default_instance_ = new GlobalChargeFightAmountRankPrizeProto();
  NewServerRechargeRankDatasProto::default_instance_ = new NewServerRechargeRankDatasProto();
  NewServerRechargeRankDataProto::default_instance_ = new NewServerRechargeRankDataProto();
  TuHaoDatasProto::default_instance_ = new TuHaoDatasProto();
  TuHaoDataProto::default_instance_ = new TuHaoDataProto();
  LaoBingBackDatasProto::default_instance_ = new LaoBingBackDatasProto();
  LaoBingBackDataProto::default_instance_ = new LaoBingBackDataProto();
  DingZhiDatasProto::default_instance_ = new DingZhiDatasProto();
  DingZhiDataProto::default_instance_ = new DingZhiDataProto();
  RechargeRebateProto::default_instance_ = new RechargeRebateProto();
  RechargeRebateSingleProto::default_instance_ = new RechargeRebateSingleProto();
  RechargeExchangeProto::default_instance_ = new RechargeExchangeProto();
  RechargeExchangeSingleProto::default_instance_ = new RechargeExchangeSingleProto();
  CollectPrizePromotionProto::default_instance_ = new CollectPrizePromotionProto();
  CollectPrizePromotionSingleProto::default_instance_ = new CollectPrizePromotionSingleProto();
  UpgradePromotionProto::default_instance_ = new UpgradePromotionProto();
  UpgradePromotionSingleProto::default_instance_ = new UpgradePromotionSingleProto();
  AllServerStartRankPromotionProto::default_instance_ = new AllServerStartRankPromotionProto();
  RankPromotionProto::default_instance_ = new RankPromotionProto();
  RankPromotionSingleProto::default_instance_ = new RankPromotionSingleProto();
  UnionRankPromotionProto::default_instance_ = new UnionRankPromotionProto();
  DailyConsumeProto::default_instance_ = new DailyConsumeProto();
  DailyConsumeSingleProto::default_instance_ = new DailyConsumeSingleProto();
  TaskPromotionProto::default_instance_ = new TaskPromotionProto();
  TaskPromotionPrizeListProto::default_instance_ = new TaskPromotionPrizeListProto();
  TaskPromotionRankDatasProto::default_instance_ = new TaskPromotionRankDatasProto();
  WandaMovieConfigProto::default_instance_ = new WandaMovieConfigProto();
  RechargeBoxRebateConfigProto::default_instance_ = new RechargeBoxRebateConfigProto();
  RechargeBoxRebateRule::default_instance_ = new RechargeBoxRebateRule();
  ConsumeBoxRebateConfigProto::default_instance_ = new ConsumeBoxRebateConfigProto();
  ConsumeBoxRebateRule::default_instance_ = new ConsumeBoxRebateRule();
  GlobalChargeFightAmountChangedValueRankDataProto::default_instance_ = new GlobalChargeFightAmountChangedValueRankDataProto();
  GlobalChargeFightAmountChangedValueVRankPrizeProto::default_instance_ = new GlobalChargeFightAmountChangedValueVRankPrizeProto();
  YYPurpleVipConfigProto::default_instance_ = new YYPurpleVipConfigProto();
  YYPurpleVipNickProto::default_instance_ = new YYPurpleVipNickProto();
  YYPurpleVipXinshoulibaoProto::default_instance_ = new YYPurpleVipXinshoulibaoProto();
  YYPurpleVipShopProto::default_instance_ = new YYPurpleVipShopProto();
  CreditsShopDatasProto::default_instance_ = new CreditsShopDatasProto();
  CreditsShopDataProto::default_instance_ = new CreditsShopDataProto();
  DailyShopDatasProto::default_instance_ = new DailyShopDatasProto();
  DailyShopDataProto::default_instance_ = new DailyShopDataProto();
  BuYuCreditsShopDatasProto::default_instance_ = new BuYuCreditsShopDatasProto();
  BuYuCreditsShopDataProto::default_instance_ = new BuYuCreditsShopDataProto();
  DailyFirstRechargePromotionDatasProto::default_instance_ = new DailyFirstRechargePromotionDatasProto();
  DailyFirstRechargePromotionDataProto::default_instance_ = new DailyFirstRechargePromotionDataProto();
  FireworkPromotionDatasProto::default_instance_ = new FireworkPromotionDatasProto();
  FireworkPromotionDataProto::default_instance_ = new FireworkPromotionDataProto();
  SecretShopDatasProto::default_instance_ = new SecretShopDatasProto();
  SecretShopDataProto::default_instance_ = new SecretShopDataProto();
  MonopolyConfigProto::default_instance_ = new MonopolyConfigProto();
  MonopolyCellProto::default_instance_ = new MonopolyCellProto();
  CollectShenzhuangRuleProto::default_instance_ = new CollectShenzhuangRuleProto();
  CollectShenzhuangConfigProto::default_instance_ = new CollectShenzhuangConfigProto();
  FreeExchangeRuleProto::default_instance_ = new FreeExchangeRuleProto();
  FreeExchangeConfigProto::default_instance_ = new FreeExchangeConfigProto();
  LoveDailyPrizeProto::default_instance_ = new LoveDailyPrizeProto();
  LoveOnlinePrizeProto::default_instance_ = new LoveOnlinePrizeProto();
  LoveExchangeProto::default_instance_ = new LoveExchangeProto();
  LoveSingleExchangeProto::default_instance_ = new LoveSingleExchangeProto();
  GlobalMarriageChangeRankDatasProto::default_instance_ = new GlobalMarriageChangeRankDatasProto();
  GlobalMarriageChangeRankDataProto::default_instance_ = new GlobalMarriageChangeRankDataProto();
  NianshouDatasProto::default_instance_ = new NianshouDatasProto();
  NianshouDataProto::default_instance_ = new NianshouDataProto();
  NianshouRankProto::default_instance_ = new NianshouRankProto();
  AnniversaryRechargeFanliProto::default_instance_ = new AnniversaryRechargeFanliProto();
  AnniversaryCakeProto::default_instance_ = new AnniversaryCakeProto();
  AnniversaryDailyPrizeProto::default_instance_ = new AnniversaryDailyPrizeProto();
  ComebackPrizeProto::default_instance_ = new ComebackPrizeProto();
  AnniversaryDailyTaskProto::default_instance_ = new AnniversaryDailyTaskProto();
  LoginPromotion2DatasProto::default_instance_ = new LoginPromotion2DatasProto();
  LoginPromotion2DataProto::default_instance_ = new LoginPromotion2DataProto();
  MonthlyCardTaskProto::default_instance_ = new MonthlyCardTaskProto();
  MonthlyCardPrizeProto::default_instance_ = new MonthlyCardPrizeProto();
  DoublePrizeProto::default_instance_ = new DoublePrizeProto();
  SingleDoublePrizeProto::default_instance_ = new SingleDoublePrizeProto();
  GlobalMaxFightingAmountRankDataProto::default_instance_ = new GlobalMaxFightingAmountRankDataProto();
  ComebackProto::default_instance_ = new ComebackProto();
  DaDiShuRankProto::default_instance_ = new DaDiShuRankProto();
  SingleDaDiShuRankProto::default_instance_ = new SingleDaDiShuRankProto();
  DaDiShuCreditsShopDatasProto::default_instance_ = new DaDiShuCreditsShopDatasProto();
  DaDiShuCreditsShopDataProto::default_instance_ = new DaDiShuCreditsShopDataProto();
  SysHongBaoDatasProto::default_instance_ = new SysHongBaoDatasProto();
  ChouJiangFanLiProto::default_instance_ = new ChouJiangFanLiProto();
  JiuWeiHuDatasProto::default_instance_->InitAsDefaultInstance();
  JiuWeiHuDataProto::default_instance_->InitAsDefaultInstance();
  GuildHongBaoDatasProto::default_instance_->InitAsDefaultInstance();
  GuildHongBaoDataProto::default_instance_->InitAsDefaultInstance();
  TiaoZhanDatasProto::default_instance_->InitAsDefaultInstance();
  TiaoZhanRankDataProto::default_instance_->InitAsDefaultInstance();
  TiaoZhanExchangeDataProto::default_instance_->InitAsDefaultInstance();
  MoBingActivityDatasProto::default_instance_->InitAsDefaultInstance();
  GlobalRechargePrizeDatasProto::default_instance_->InitAsDefaultInstance();
  GlobalMarriageRankDatasProto::default_instance_->InitAsDefaultInstance();
  GlobalMarriageRankDataProto::default_instance_->InitAsDefaultInstance();
  UpgradeYuanbaoCutProto::default_instance_->InitAsDefaultInstance();
  UpgradeYuanbaoCutSingleProto::default_instance_->InitAsDefaultInstance();
  GlobalRechargeRankDatasProto::default_instance_->InitAsDefaultInstance();
  GlobalRechargeRankDataProto::default_instance_->InitAsDefaultInstance();
  GlobalConsumeRankDatasProto::default_instance_->InitAsDefaultInstance();
  GlobalConsumeRankDataProto::default_instance_->InitAsDefaultInstance();
  GlobalSelectImageDatasProto::default_instance_->InitAsDefaultInstance();
  GlobalSelectImageRankDataProto::default_instance_->InitAsDefaultInstance();
  GlobalSelectImageRankTaskProto::default_instance_->InitAsDefaultInstance();
  GlobalChargeFightAmountRankDataProto::default_instance_->InitAsDefaultInstance();
  GlobalChargeFightAmountRankPrizeProto::default_instance_->InitAsDefaultInstance();
  NewServerRechargeRankDatasProto::default_instance_->InitAsDefaultInstance();
  NewServerRechargeRankDataProto::default_instance_->InitAsDefaultInstance();
  TuHaoDatasProto::default_instance_->InitAsDefaultInstance();
  TuHaoDataProto::default_instance_->InitAsDefaultInstance();
  LaoBingBackDatasProto::default_instance_->InitAsDefaultInstance();
  LaoBingBackDataProto::default_instance_->InitAsDefaultInstance();
  DingZhiDatasProto::default_instance_->InitAsDefaultInstance();
  DingZhiDataProto::default_instance_->InitAsDefaultInstance();
  RechargeRebateProto::default_instance_->InitAsDefaultInstance();
  RechargeRebateSingleProto::default_instance_->InitAsDefaultInstance();
  RechargeExchangeProto::default_instance_->InitAsDefaultInstance();
  RechargeExchangeSingleProto::default_instance_->InitAsDefaultInstance();
  CollectPrizePromotionProto::default_instance_->InitAsDefaultInstance();
  CollectPrizePromotionSingleProto::default_instance_->InitAsDefaultInstance();
  UpgradePromotionProto::default_instance_->InitAsDefaultInstance();
  UpgradePromotionSingleProto::default_instance_->InitAsDefaultInstance();
  AllServerStartRankPromotionProto::default_instance_->InitAsDefaultInstance();
  RankPromotionProto::default_instance_->InitAsDefaultInstance();
  RankPromotionSingleProto::default_instance_->InitAsDefaultInstance();
  UnionRankPromotionProto::default_instance_->InitAsDefaultInstance();
  DailyConsumeProto::default_instance_->InitAsDefaultInstance();
  DailyConsumeSingleProto::default_instance_->InitAsDefaultInstance();
  TaskPromotionProto::default_instance_->InitAsDefaultInstance();
  TaskPromotionPrizeListProto::default_instance_->InitAsDefaultInstance();
  TaskPromotionRankDatasProto::default_instance_->InitAsDefaultInstance();
  WandaMovieConfigProto::default_instance_->InitAsDefaultInstance();
  RechargeBoxRebateConfigProto::default_instance_->InitAsDefaultInstance();
  RechargeBoxRebateRule::default_instance_->InitAsDefaultInstance();
  ConsumeBoxRebateConfigProto::default_instance_->InitAsDefaultInstance();
  ConsumeBoxRebateRule::default_instance_->InitAsDefaultInstance();
  GlobalChargeFightAmountChangedValueRankDataProto::default_instance_->InitAsDefaultInstance();
  GlobalChargeFightAmountChangedValueVRankPrizeProto::default_instance_->InitAsDefaultInstance();
  YYPurpleVipConfigProto::default_instance_->InitAsDefaultInstance();
  YYPurpleVipNickProto::default_instance_->InitAsDefaultInstance();
  YYPurpleVipXinshoulibaoProto::default_instance_->InitAsDefaultInstance();
  YYPurpleVipShopProto::default_instance_->InitAsDefaultInstance();
  CreditsShopDatasProto::default_instance_->InitAsDefaultInstance();
  CreditsShopDataProto::default_instance_->InitAsDefaultInstance();
  DailyShopDatasProto::default_instance_->InitAsDefaultInstance();
  DailyShopDataProto::default_instance_->InitAsDefaultInstance();
  BuYuCreditsShopDatasProto::default_instance_->InitAsDefaultInstance();
  BuYuCreditsShopDataProto::default_instance_->InitAsDefaultInstance();
  DailyFirstRechargePromotionDatasProto::default_instance_->InitAsDefaultInstance();
  DailyFirstRechargePromotionDataProto::default_instance_->InitAsDefaultInstance();
  FireworkPromotionDatasProto::default_instance_->InitAsDefaultInstance();
  FireworkPromotionDataProto::default_instance_->InitAsDefaultInstance();
  SecretShopDatasProto::default_instance_->InitAsDefaultInstance();
  SecretShopDataProto::default_instance_->InitAsDefaultInstance();
  MonopolyConfigProto::default_instance_->InitAsDefaultInstance();
  MonopolyCellProto::default_instance_->InitAsDefaultInstance();
  CollectShenzhuangRuleProto::default_instance_->InitAsDefaultInstance();
  CollectShenzhuangConfigProto::default_instance_->InitAsDefaultInstance();
  FreeExchangeRuleProto::default_instance_->InitAsDefaultInstance();
  FreeExchangeConfigProto::default_instance_->InitAsDefaultInstance();
  LoveDailyPrizeProto::default_instance_->InitAsDefaultInstance();
  LoveOnlinePrizeProto::default_instance_->InitAsDefaultInstance();
  LoveExchangeProto::default_instance_->InitAsDefaultInstance();
  LoveSingleExchangeProto::default_instance_->InitAsDefaultInstance();
  GlobalMarriageChangeRankDatasProto::default_instance_->InitAsDefaultInstance();
  GlobalMarriageChangeRankDataProto::default_instance_->InitAsDefaultInstance();
  NianshouDatasProto::default_instance_->InitAsDefaultInstance();
  NianshouDataProto::default_instance_->InitAsDefaultInstance();
  NianshouRankProto::default_instance_->InitAsDefaultInstance();
  AnniversaryRechargeFanliProto::default_instance_->InitAsDefaultInstance();
  AnniversaryCakeProto::default_instance_->InitAsDefaultInstance();
  AnniversaryDailyPrizeProto::default_instance_->InitAsDefaultInstance();
  ComebackPrizeProto::default_instance_->InitAsDefaultInstance();
  AnniversaryDailyTaskProto::default_instance_->InitAsDefaultInstance();
  LoginPromotion2DatasProto::default_instance_->InitAsDefaultInstance();
  LoginPromotion2DataProto::default_instance_->InitAsDefaultInstance();
  MonthlyCardTaskProto::default_instance_->InitAsDefaultInstance();
  MonthlyCardPrizeProto::default_instance_->InitAsDefaultInstance();
  DoublePrizeProto::default_instance_->InitAsDefaultInstance();
  SingleDoublePrizeProto::default_instance_->InitAsDefaultInstance();
  GlobalMaxFightingAmountRankDataProto::default_instance_->InitAsDefaultInstance();
  ComebackProto::default_instance_->InitAsDefaultInstance();
  DaDiShuRankProto::default_instance_->InitAsDefaultInstance();
  SingleDaDiShuRankProto::default_instance_->InitAsDefaultInstance();
  DaDiShuCreditsShopDatasProto::default_instance_->InitAsDefaultInstance();
  DaDiShuCreditsShopDataProto::default_instance_->InitAsDefaultInstance();
  SysHongBaoDatasProto::default_instance_->InitAsDefaultInstance();
  ChouJiangFanLiProto::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_promotion_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_promotion_2eproto {
  StaticDescriptorInitializer_promotion_2eproto() {
    protobuf_AddDesc_promotion_2eproto();
  }
} static_descriptor_initializer_promotion_2eproto_;
const ::google::protobuf::EnumDescriptor* UpgradePromotionProtoType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpgradePromotionProtoType_descriptor_;
}
bool UpgradePromotionProtoType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int JiuWeiHuDatasProto::kStartTimeFieldNumber;
const int JiuWeiHuDatasProto::kEndTimeFieldNumber;
const int JiuWeiHuDatasProto::kDataFieldNumber;
#endif  // !_MSC_VER

JiuWeiHuDatasProto::JiuWeiHuDatasProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void JiuWeiHuDatasProto::InitAsDefaultInstance() {
}

JiuWeiHuDatasProto::JiuWeiHuDatasProto(const JiuWeiHuDatasProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void JiuWeiHuDatasProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

JiuWeiHuDatasProto::~JiuWeiHuDatasProto() {
  SharedDtor();
}

void JiuWeiHuDatasProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void JiuWeiHuDatasProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JiuWeiHuDatasProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JiuWeiHuDatasProto_descriptor_;
}

const JiuWeiHuDatasProto& JiuWeiHuDatasProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

JiuWeiHuDatasProto* JiuWeiHuDatasProto::default_instance_ = NULL;

JiuWeiHuDatasProto* JiuWeiHuDatasProto::New() const {
  return new JiuWeiHuDatasProto;
}

void JiuWeiHuDatasProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool JiuWeiHuDatasProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_data;
        break;
      }

      // repeated .app.message.JiuWeiHuDataProto data = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void JiuWeiHuDatasProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // repeated .app.message.JiuWeiHuDataProto data = 3;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* JiuWeiHuDatasProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // repeated .app.message.JiuWeiHuDataProto data = 3;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int JiuWeiHuDatasProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

  }
  // repeated .app.message.JiuWeiHuDataProto data = 3;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JiuWeiHuDatasProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const JiuWeiHuDatasProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const JiuWeiHuDatasProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void JiuWeiHuDatasProto::MergeFrom(const JiuWeiHuDatasProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void JiuWeiHuDatasProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JiuWeiHuDatasProto::CopyFrom(const JiuWeiHuDatasProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JiuWeiHuDatasProto::IsInitialized() const {

  return true;
}

void JiuWeiHuDatasProto::Swap(JiuWeiHuDatasProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata JiuWeiHuDatasProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JiuWeiHuDatasProto_descriptor_;
  metadata.reflection = JiuWeiHuDatasProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int JiuWeiHuDataProto::kIdFieldNumber;
const int JiuWeiHuDataProto::kRechargeFieldNumber;
const int JiuWeiHuDataProto::kShieldIdFieldNumber;
const int JiuWeiHuDataProto::kShieldBigLevelFieldNumber;
const int JiuWeiHuDataProto::kHeroEquipFashionIdFieldNumber;
const int JiuWeiHuDataProto::kMountTongLingIdFieldNumber;
const int JiuWeiHuDataProto::kSpriteStatProtoFieldNumber;
const int JiuWeiHuDataProto::kNicknameFieldNumber;
const int JiuWeiHuDataProto::kShieldMonsterData1FieldNumber;
const int JiuWeiHuDataProto::kShieldMonsterData2FieldNumber;
const int JiuWeiHuDataProto::kFightingAmountFieldNumber;
const int JiuWeiHuDataProto::kWeaponFieldNumber;
#endif  // !_MSC_VER

JiuWeiHuDataProto::JiuWeiHuDataProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void JiuWeiHuDataProto::InitAsDefaultInstance() {
  sprite_stat_proto_ = const_cast< ::app::message::SpriteStatProto*>(&::app::message::SpriteStatProto::default_instance());
  weapon_ = const_cast< ::app::message::GoodsWrapperProto*>(&::app::message::GoodsWrapperProto::default_instance());
}

JiuWeiHuDataProto::JiuWeiHuDataProto(const JiuWeiHuDataProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void JiuWeiHuDataProto::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  recharge_ = 0;
  shield_id_ = 0;
  shield_big_level_ = 0;
  mount_tong_ling_id_ = 0;
  sprite_stat_proto_ = NULL;
  nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  shield_monster_data1_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  shield_monster_data2_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  fighting_amount_ = 0;
  weapon_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

JiuWeiHuDataProto::~JiuWeiHuDataProto() {
  SharedDtor();
}

void JiuWeiHuDataProto::SharedDtor() {
  if (nickname_ != &::google::protobuf::internal::kEmptyString) {
    delete nickname_;
  }
  if (shield_monster_data1_ != &::google::protobuf::internal::kEmptyString) {
    delete shield_monster_data1_;
  }
  if (shield_monster_data2_ != &::google::protobuf::internal::kEmptyString) {
    delete shield_monster_data2_;
  }
  if (this != default_instance_) {
    delete sprite_stat_proto_;
    delete weapon_;
  }
}

void JiuWeiHuDataProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JiuWeiHuDataProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JiuWeiHuDataProto_descriptor_;
}

const JiuWeiHuDataProto& JiuWeiHuDataProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

JiuWeiHuDataProto* JiuWeiHuDataProto::default_instance_ = NULL;

JiuWeiHuDataProto* JiuWeiHuDataProto::New() const {
  return new JiuWeiHuDataProto;
}

void JiuWeiHuDataProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    recharge_ = 0;
    shield_id_ = 0;
    shield_big_level_ = 0;
    mount_tong_ling_id_ = 0;
    if (has_sprite_stat_proto()) {
      if (sprite_stat_proto_ != NULL) sprite_stat_proto_->::app::message::SpriteStatProto::Clear();
    }
    if (has_nickname()) {
      if (nickname_ != &::google::protobuf::internal::kEmptyString) {
        nickname_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (has_shield_monster_data1()) {
      if (shield_monster_data1_ != &::google::protobuf::internal::kEmptyString) {
        shield_monster_data1_->clear();
      }
    }
    if (has_shield_monster_data2()) {
      if (shield_monster_data2_ != &::google::protobuf::internal::kEmptyString) {
        shield_monster_data2_->clear();
      }
    }
    fighting_amount_ = 0;
    if (has_weapon()) {
      if (weapon_ != NULL) weapon_->::app::message::GoodsWrapperProto::Clear();
    }
  }
  hero_equip_fashion_id_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool JiuWeiHuDataProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_recharge;
        break;
      }

      // optional int32 recharge = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_recharge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &recharge_)));
          set_has_recharge();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_shield_id;
        break;
      }

      // optional int32 shield_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_shield_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shield_id_)));
          set_has_shield_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_shield_big_level;
        break;
      }

      // optional int32 shield_big_level = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_shield_big_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shield_big_level_)));
          set_has_shield_big_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_hero_equip_fashion_id;
        break;
      }

      // repeated int32 hero_equip_fashion_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_hero_equip_fashion_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_hero_equip_fashion_id())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_hero_equip_fashion_id())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_hero_equip_fashion_id;
        if (input->ExpectTag(48)) goto parse_mount_tong_ling_id;
        break;
      }

      // optional int32 mount_tong_ling_id = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mount_tong_ling_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mount_tong_ling_id_)));
          set_has_mount_tong_ling_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_sprite_stat_proto;
        break;
      }

      // optional .app.message.SpriteStatProto sprite_stat_proto = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sprite_stat_proto:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sprite_stat_proto()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_nickname;
        break;
      }

      // optional string nickname = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_nickname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_shield_monster_data1;
        break;
      }

      // optional string shield_monster_data1 = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_shield_monster_data1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shield_monster_data1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->shield_monster_data1().data(), this->shield_monster_data1().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_shield_monster_data2;
        break;
      }

      // optional string shield_monster_data2 = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_shield_monster_data2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shield_monster_data2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->shield_monster_data2().data(), this->shield_monster_data2().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_fighting_amount;
        break;
      }

      // optional int32 fighting_amount = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fighting_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fighting_amount_)));
          set_has_fighting_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_weapon;
        break;
      }

      // optional .app.message.GoodsWrapperProto weapon = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_weapon:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_weapon()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void JiuWeiHuDataProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 recharge = 2;
  if (has_recharge()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->recharge(), output);
  }

  // optional int32 shield_id = 3;
  if (has_shield_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->shield_id(), output);
  }

  // optional int32 shield_big_level = 4;
  if (has_shield_big_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->shield_big_level(), output);
  }

  // repeated int32 hero_equip_fashion_id = 5;
  for (int i = 0; i < this->hero_equip_fashion_id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->hero_equip_fashion_id(i), output);
  }

  // optional int32 mount_tong_ling_id = 6;
  if (has_mount_tong_ling_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->mount_tong_ling_id(), output);
  }

  // optional .app.message.SpriteStatProto sprite_stat_proto = 7;
  if (has_sprite_stat_proto()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->sprite_stat_proto(), output);
  }

  // optional string nickname = 8;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->nickname(), output);
  }

  // optional string shield_monster_data1 = 9;
  if (has_shield_monster_data1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->shield_monster_data1().data(), this->shield_monster_data1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      9, this->shield_monster_data1(), output);
  }

  // optional string shield_monster_data2 = 10;
  if (has_shield_monster_data2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->shield_monster_data2().data(), this->shield_monster_data2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->shield_monster_data2(), output);
  }

  // optional int32 fighting_amount = 11;
  if (has_fighting_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->fighting_amount(), output);
  }

  // optional .app.message.GoodsWrapperProto weapon = 12;
  if (has_weapon()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->weapon(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* JiuWeiHuDataProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 recharge = 2;
  if (has_recharge()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->recharge(), target);
  }

  // optional int32 shield_id = 3;
  if (has_shield_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->shield_id(), target);
  }

  // optional int32 shield_big_level = 4;
  if (has_shield_big_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->shield_big_level(), target);
  }

  // repeated int32 hero_equip_fashion_id = 5;
  for (int i = 0; i < this->hero_equip_fashion_id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->hero_equip_fashion_id(i), target);
  }

  // optional int32 mount_tong_ling_id = 6;
  if (has_mount_tong_ling_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->mount_tong_ling_id(), target);
  }

  // optional .app.message.SpriteStatProto sprite_stat_proto = 7;
  if (has_sprite_stat_proto()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->sprite_stat_proto(), target);
  }

  // optional string nickname = 8;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->nickname(), target);
  }

  // optional string shield_monster_data1 = 9;
  if (has_shield_monster_data1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->shield_monster_data1().data(), this->shield_monster_data1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->shield_monster_data1(), target);
  }

  // optional string shield_monster_data2 = 10;
  if (has_shield_monster_data2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->shield_monster_data2().data(), this->shield_monster_data2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->shield_monster_data2(), target);
  }

  // optional int32 fighting_amount = 11;
  if (has_fighting_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->fighting_amount(), target);
  }

  // optional .app.message.GoodsWrapperProto weapon = 12;
  if (has_weapon()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->weapon(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int JiuWeiHuDataProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 recharge = 2;
    if (has_recharge()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->recharge());
    }

    // optional int32 shield_id = 3;
    if (has_shield_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->shield_id());
    }

    // optional int32 shield_big_level = 4;
    if (has_shield_big_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->shield_big_level());
    }

    // optional int32 mount_tong_ling_id = 6;
    if (has_mount_tong_ling_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mount_tong_ling_id());
    }

    // optional .app.message.SpriteStatProto sprite_stat_proto = 7;
    if (has_sprite_stat_proto()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sprite_stat_proto());
    }

    // optional string nickname = 8;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string shield_monster_data1 = 9;
    if (has_shield_monster_data1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->shield_monster_data1());
    }

    // optional string shield_monster_data2 = 10;
    if (has_shield_monster_data2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->shield_monster_data2());
    }

    // optional int32 fighting_amount = 11;
    if (has_fighting_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fighting_amount());
    }

    // optional .app.message.GoodsWrapperProto weapon = 12;
    if (has_weapon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->weapon());
    }

  }
  // repeated int32 hero_equip_fashion_id = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->hero_equip_fashion_id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->hero_equip_fashion_id(i));
    }
    total_size += 1 * this->hero_equip_fashion_id_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JiuWeiHuDataProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const JiuWeiHuDataProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const JiuWeiHuDataProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void JiuWeiHuDataProto::MergeFrom(const JiuWeiHuDataProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  hero_equip_fashion_id_.MergeFrom(from.hero_equip_fashion_id_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_recharge()) {
      set_recharge(from.recharge());
    }
    if (from.has_shield_id()) {
      set_shield_id(from.shield_id());
    }
    if (from.has_shield_big_level()) {
      set_shield_big_level(from.shield_big_level());
    }
    if (from.has_mount_tong_ling_id()) {
      set_mount_tong_ling_id(from.mount_tong_ling_id());
    }
    if (from.has_sprite_stat_proto()) {
      mutable_sprite_stat_proto()->::app::message::SpriteStatProto::MergeFrom(from.sprite_stat_proto());
    }
    if (from.has_nickname()) {
      set_nickname(from.nickname());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_shield_monster_data1()) {
      set_shield_monster_data1(from.shield_monster_data1());
    }
    if (from.has_shield_monster_data2()) {
      set_shield_monster_data2(from.shield_monster_data2());
    }
    if (from.has_fighting_amount()) {
      set_fighting_amount(from.fighting_amount());
    }
    if (from.has_weapon()) {
      mutable_weapon()->::app::message::GoodsWrapperProto::MergeFrom(from.weapon());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void JiuWeiHuDataProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JiuWeiHuDataProto::CopyFrom(const JiuWeiHuDataProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JiuWeiHuDataProto::IsInitialized() const {

  return true;
}

void JiuWeiHuDataProto::Swap(JiuWeiHuDataProto* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(recharge_, other->recharge_);
    std::swap(shield_id_, other->shield_id_);
    std::swap(shield_big_level_, other->shield_big_level_);
    hero_equip_fashion_id_.Swap(&other->hero_equip_fashion_id_);
    std::swap(mount_tong_ling_id_, other->mount_tong_ling_id_);
    std::swap(sprite_stat_proto_, other->sprite_stat_proto_);
    std::swap(nickname_, other->nickname_);
    std::swap(shield_monster_data1_, other->shield_monster_data1_);
    std::swap(shield_monster_data2_, other->shield_monster_data2_);
    std::swap(fighting_amount_, other->fighting_amount_);
    std::swap(weapon_, other->weapon_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata JiuWeiHuDataProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JiuWeiHuDataProto_descriptor_;
  metadata.reflection = JiuWeiHuDataProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GuildHongBaoDatasProto::kStartTimeFieldNumber;
const int GuildHongBaoDatasProto::kEndTimeFieldNumber;
const int GuildHongBaoDatasProto::kDataFieldNumber;
const int GuildHongBaoDatasProto::kTypeFieldNumber;
#endif  // !_MSC_VER

GuildHongBaoDatasProto::GuildHongBaoDatasProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GuildHongBaoDatasProto::InitAsDefaultInstance() {
  data_ = const_cast< ::app::message::GuildHongBaoDataProto*>(&::app::message::GuildHongBaoDataProto::default_instance());
}

GuildHongBaoDatasProto::GuildHongBaoDatasProto(const GuildHongBaoDatasProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GuildHongBaoDatasProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  data_ = NULL;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GuildHongBaoDatasProto::~GuildHongBaoDatasProto() {
  SharedDtor();
}

void GuildHongBaoDatasProto::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void GuildHongBaoDatasProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildHongBaoDatasProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GuildHongBaoDatasProto_descriptor_;
}

const GuildHongBaoDatasProto& GuildHongBaoDatasProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

GuildHongBaoDatasProto* GuildHongBaoDatasProto::default_instance_ = NULL;

GuildHongBaoDatasProto* GuildHongBaoDatasProto::New() const {
  return new GuildHongBaoDatasProto;
}

void GuildHongBaoDatasProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    if (has_data()) {
      if (data_ != NULL) data_->::app::message::GuildHongBaoDataProto::Clear();
    }
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GuildHongBaoDatasProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_data;
        break;
      }

      // optional .app.message.GuildHongBaoDataProto data = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_type;
        break;
      }

      // optional int32 type = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GuildHongBaoDatasProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // optional .app.message.GuildHongBaoDataProto data = 3;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->data(), output);
  }

  // optional int32 type = 4;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GuildHongBaoDatasProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // optional .app.message.GuildHongBaoDataProto data = 3;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->data(), target);
  }

  // optional int32 type = 4;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GuildHongBaoDatasProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional .app.message.GuildHongBaoDataProto data = 3;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

    // optional int32 type = 4;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildHongBaoDatasProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GuildHongBaoDatasProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GuildHongBaoDatasProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GuildHongBaoDatasProto::MergeFrom(const GuildHongBaoDatasProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_data()) {
      mutable_data()->::app::message::GuildHongBaoDataProto::MergeFrom(from.data());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GuildHongBaoDatasProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildHongBaoDatasProto::CopyFrom(const GuildHongBaoDatasProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildHongBaoDatasProto::IsInitialized() const {

  return true;
}

void GuildHongBaoDatasProto::Swap(GuildHongBaoDatasProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    std::swap(data_, other->data_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GuildHongBaoDatasProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GuildHongBaoDatasProto_descriptor_;
  metadata.reflection = GuildHongBaoDatasProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GuildHongBaoDataProto::kMaxGiveYbFieldNumber;
#endif  // !_MSC_VER

GuildHongBaoDataProto::GuildHongBaoDataProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GuildHongBaoDataProto::InitAsDefaultInstance() {
}

GuildHongBaoDataProto::GuildHongBaoDataProto(const GuildHongBaoDataProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GuildHongBaoDataProto::SharedCtor() {
  _cached_size_ = 0;
  max_give_yb_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GuildHongBaoDataProto::~GuildHongBaoDataProto() {
  SharedDtor();
}

void GuildHongBaoDataProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GuildHongBaoDataProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GuildHongBaoDataProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GuildHongBaoDataProto_descriptor_;
}

const GuildHongBaoDataProto& GuildHongBaoDataProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

GuildHongBaoDataProto* GuildHongBaoDataProto::default_instance_ = NULL;

GuildHongBaoDataProto* GuildHongBaoDataProto::New() const {
  return new GuildHongBaoDataProto;
}

void GuildHongBaoDataProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    max_give_yb_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GuildHongBaoDataProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 max_give_yb = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_give_yb_)));
          set_has_max_give_yb();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GuildHongBaoDataProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 max_give_yb = 1;
  if (has_max_give_yb()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->max_give_yb(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GuildHongBaoDataProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 max_give_yb = 1;
  if (has_max_give_yb()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->max_give_yb(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GuildHongBaoDataProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 max_give_yb = 1;
    if (has_max_give_yb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_give_yb());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GuildHongBaoDataProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GuildHongBaoDataProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GuildHongBaoDataProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GuildHongBaoDataProto::MergeFrom(const GuildHongBaoDataProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_max_give_yb()) {
      set_max_give_yb(from.max_give_yb());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GuildHongBaoDataProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuildHongBaoDataProto::CopyFrom(const GuildHongBaoDataProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuildHongBaoDataProto::IsInitialized() const {

  return true;
}

void GuildHongBaoDataProto::Swap(GuildHongBaoDataProto* other) {
  if (other != this) {
    std::swap(max_give_yb_, other->max_give_yb_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GuildHongBaoDataProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GuildHongBaoDataProto_descriptor_;
  metadata.reflection = GuildHongBaoDataProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TiaoZhanDatasProto::kStartTimeFieldNumber;
const int TiaoZhanDatasProto::kEndTimeFieldNumber;
const int TiaoZhanDatasProto::kFightDayStartTimeFieldNumber;
const int TiaoZhanDatasProto::kFightDayEndTimeFieldNumber;
const int TiaoZhanDatasProto::kRankDataProtoFieldNumber;
const int TiaoZhanDatasProto::kExchangeDataProtoFieldNumber;
const int TiaoZhanDatasProto::kPairTimeoutTimeFieldNumber;
const int TiaoZhanDatasProto::kPairYuanBaoFieldNumber;
const int TiaoZhanDatasProto::kShopPointMultipleFieldNumber;
#endif  // !_MSC_VER

TiaoZhanDatasProto::TiaoZhanDatasProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TiaoZhanDatasProto::InitAsDefaultInstance() {
}

TiaoZhanDatasProto::TiaoZhanDatasProto(const TiaoZhanDatasProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TiaoZhanDatasProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  fight_day_start_time_ = GOOGLE_LONGLONG(0);
  fight_day_end_time_ = GOOGLE_LONGLONG(0);
  pair_timeout_time_ = 0;
  shop_point_multiple_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TiaoZhanDatasProto::~TiaoZhanDatasProto() {
  SharedDtor();
}

void TiaoZhanDatasProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TiaoZhanDatasProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TiaoZhanDatasProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TiaoZhanDatasProto_descriptor_;
}

const TiaoZhanDatasProto& TiaoZhanDatasProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

TiaoZhanDatasProto* TiaoZhanDatasProto::default_instance_ = NULL;

TiaoZhanDatasProto* TiaoZhanDatasProto::New() const {
  return new TiaoZhanDatasProto;
}

void TiaoZhanDatasProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    fight_day_start_time_ = GOOGLE_LONGLONG(0);
    fight_day_end_time_ = GOOGLE_LONGLONG(0);
    pair_timeout_time_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    shop_point_multiple_ = 0;
  }
  rank_data_proto_.Clear();
  exchange_data_proto_.Clear();
  pair_yuan_bao_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TiaoZhanDatasProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_fight_day_start_time;
        break;
      }

      // optional int64 fight_day_start_time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fight_day_start_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &fight_day_start_time_)));
          set_has_fight_day_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_fight_day_end_time;
        break;
      }

      // optional int64 fight_day_end_time = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_fight_day_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &fight_day_end_time_)));
          set_has_fight_day_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_rank_data_proto;
        break;
      }

      // repeated .app.message.TiaoZhanRankDataProto rank_data_proto = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rank_data_proto:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rank_data_proto()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_rank_data_proto;
        if (input->ExpectTag(50)) goto parse_exchange_data_proto;
        break;
      }

      // repeated .app.message.TiaoZhanExchangeDataProto exchange_data_proto = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_exchange_data_proto:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_exchange_data_proto()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_exchange_data_proto;
        if (input->ExpectTag(56)) goto parse_pair_timeout_time;
        break;
      }

      // optional int32 pair_timeout_time = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pair_timeout_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pair_timeout_time_)));
          set_has_pair_timeout_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_pair_yuan_bao;
        break;
      }

      // repeated int32 pair_yuan_bao = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_pair_yuan_bao:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 64, input, this->mutable_pair_yuan_bao())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_pair_yuan_bao())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_pair_yuan_bao;
        if (input->ExpectTag(72)) goto parse_shop_point_multiple;
        break;
      }

      // optional int32 shop_point_multiple = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_shop_point_multiple:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shop_point_multiple_)));
          set_has_shop_point_multiple();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TiaoZhanDatasProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // optional int64 fight_day_start_time = 3;
  if (has_fight_day_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->fight_day_start_time(), output);
  }

  // optional int64 fight_day_end_time = 4;
  if (has_fight_day_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->fight_day_end_time(), output);
  }

  // repeated .app.message.TiaoZhanRankDataProto rank_data_proto = 5;
  for (int i = 0; i < this->rank_data_proto_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->rank_data_proto(i), output);
  }

  // repeated .app.message.TiaoZhanExchangeDataProto exchange_data_proto = 6;
  for (int i = 0; i < this->exchange_data_proto_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->exchange_data_proto(i), output);
  }

  // optional int32 pair_timeout_time = 7;
  if (has_pair_timeout_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->pair_timeout_time(), output);
  }

  // repeated int32 pair_yuan_bao = 8;
  for (int i = 0; i < this->pair_yuan_bao_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      8, this->pair_yuan_bao(i), output);
  }

  // optional int32 shop_point_multiple = 9;
  if (has_shop_point_multiple()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->shop_point_multiple(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TiaoZhanDatasProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // optional int64 fight_day_start_time = 3;
  if (has_fight_day_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->fight_day_start_time(), target);
  }

  // optional int64 fight_day_end_time = 4;
  if (has_fight_day_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->fight_day_end_time(), target);
  }

  // repeated .app.message.TiaoZhanRankDataProto rank_data_proto = 5;
  for (int i = 0; i < this->rank_data_proto_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->rank_data_proto(i), target);
  }

  // repeated .app.message.TiaoZhanExchangeDataProto exchange_data_proto = 6;
  for (int i = 0; i < this->exchange_data_proto_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->exchange_data_proto(i), target);
  }

  // optional int32 pair_timeout_time = 7;
  if (has_pair_timeout_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->pair_timeout_time(), target);
  }

  // repeated int32 pair_yuan_bao = 8;
  for (int i = 0; i < this->pair_yuan_bao_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(8, this->pair_yuan_bao(i), target);
  }

  // optional int32 shop_point_multiple = 9;
  if (has_shop_point_multiple()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->shop_point_multiple(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TiaoZhanDatasProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional int64 fight_day_start_time = 3;
    if (has_fight_day_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->fight_day_start_time());
    }

    // optional int64 fight_day_end_time = 4;
    if (has_fight_day_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->fight_day_end_time());
    }

    // optional int32 pair_timeout_time = 7;
    if (has_pair_timeout_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->pair_timeout_time());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 shop_point_multiple = 9;
    if (has_shop_point_multiple()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->shop_point_multiple());
    }

  }
  // repeated .app.message.TiaoZhanRankDataProto rank_data_proto = 5;
  total_size += 1 * this->rank_data_proto_size();
  for (int i = 0; i < this->rank_data_proto_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rank_data_proto(i));
  }

  // repeated .app.message.TiaoZhanExchangeDataProto exchange_data_proto = 6;
  total_size += 1 * this->exchange_data_proto_size();
  for (int i = 0; i < this->exchange_data_proto_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->exchange_data_proto(i));
  }

  // repeated int32 pair_yuan_bao = 8;
  {
    int data_size = 0;
    for (int i = 0; i < this->pair_yuan_bao_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->pair_yuan_bao(i));
    }
    total_size += 1 * this->pair_yuan_bao_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TiaoZhanDatasProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TiaoZhanDatasProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TiaoZhanDatasProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TiaoZhanDatasProto::MergeFrom(const TiaoZhanDatasProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  rank_data_proto_.MergeFrom(from.rank_data_proto_);
  exchange_data_proto_.MergeFrom(from.exchange_data_proto_);
  pair_yuan_bao_.MergeFrom(from.pair_yuan_bao_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_fight_day_start_time()) {
      set_fight_day_start_time(from.fight_day_start_time());
    }
    if (from.has_fight_day_end_time()) {
      set_fight_day_end_time(from.fight_day_end_time());
    }
    if (from.has_pair_timeout_time()) {
      set_pair_timeout_time(from.pair_timeout_time());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_shop_point_multiple()) {
      set_shop_point_multiple(from.shop_point_multiple());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TiaoZhanDatasProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TiaoZhanDatasProto::CopyFrom(const TiaoZhanDatasProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TiaoZhanDatasProto::IsInitialized() const {

  return true;
}

void TiaoZhanDatasProto::Swap(TiaoZhanDatasProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    std::swap(fight_day_start_time_, other->fight_day_start_time_);
    std::swap(fight_day_end_time_, other->fight_day_end_time_);
    rank_data_proto_.Swap(&other->rank_data_proto_);
    exchange_data_proto_.Swap(&other->exchange_data_proto_);
    std::swap(pair_timeout_time_, other->pair_timeout_time_);
    pair_yuan_bao_.Swap(&other->pair_yuan_bao_);
    std::swap(shop_point_multiple_, other->shop_point_multiple_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TiaoZhanDatasProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TiaoZhanDatasProto_descriptor_;
  metadata.reflection = TiaoZhanDatasProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TiaoZhanRankDataProto::kLastRankFieldNumber;
const int TiaoZhanRankDataProto::kPrizeFieldNumber;
#endif  // !_MSC_VER

TiaoZhanRankDataProto::TiaoZhanRankDataProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TiaoZhanRankDataProto::InitAsDefaultInstance() {
  prize_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
}

TiaoZhanRankDataProto::TiaoZhanRankDataProto(const TiaoZhanRankDataProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TiaoZhanRankDataProto::SharedCtor() {
  _cached_size_ = 0;
  last_rank_ = 0;
  prize_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TiaoZhanRankDataProto::~TiaoZhanRankDataProto() {
  SharedDtor();
}

void TiaoZhanRankDataProto::SharedDtor() {
  if (this != default_instance_) {
    delete prize_;
  }
}

void TiaoZhanRankDataProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TiaoZhanRankDataProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TiaoZhanRankDataProto_descriptor_;
}

const TiaoZhanRankDataProto& TiaoZhanRankDataProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

TiaoZhanRankDataProto* TiaoZhanRankDataProto::default_instance_ = NULL;

TiaoZhanRankDataProto* TiaoZhanRankDataProto::New() const {
  return new TiaoZhanRankDataProto;
}

void TiaoZhanRankDataProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    last_rank_ = 0;
    if (has_prize()) {
      if (prize_ != NULL) prize_->::app::message::PrizeProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TiaoZhanRankDataProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 last_rank = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_rank_)));
          set_has_last_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_prize;
        break;
      }

      // optional .app.message.PrizeProto prize = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TiaoZhanRankDataProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 last_rank = 1;
  if (has_last_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->last_rank(), output);
  }

  // optional .app.message.PrizeProto prize = 2;
  if (has_prize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->prize(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TiaoZhanRankDataProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 last_rank = 1;
  if (has_last_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->last_rank(), target);
  }

  // optional .app.message.PrizeProto prize = 2;
  if (has_prize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->prize(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TiaoZhanRankDataProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 last_rank = 1;
    if (has_last_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->last_rank());
    }

    // optional .app.message.PrizeProto prize = 2;
    if (has_prize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prize());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TiaoZhanRankDataProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TiaoZhanRankDataProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TiaoZhanRankDataProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TiaoZhanRankDataProto::MergeFrom(const TiaoZhanRankDataProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_last_rank()) {
      set_last_rank(from.last_rank());
    }
    if (from.has_prize()) {
      mutable_prize()->::app::message::PrizeProto::MergeFrom(from.prize());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TiaoZhanRankDataProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TiaoZhanRankDataProto::CopyFrom(const TiaoZhanRankDataProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TiaoZhanRankDataProto::IsInitialized() const {

  return true;
}

void TiaoZhanRankDataProto::Swap(TiaoZhanRankDataProto* other) {
  if (other != this) {
    std::swap(last_rank_, other->last_rank_);
    std::swap(prize_, other->prize_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TiaoZhanRankDataProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TiaoZhanRankDataProto_descriptor_;
  metadata.reflection = TiaoZhanRankDataProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TiaoZhanExchangeDataProto::kGoodsFieldNumber;
const int TiaoZhanExchangeDataProto::kShopPointFieldNumber;
const int TiaoZhanExchangeDataProto::kLimitFieldNumber;
#endif  // !_MSC_VER

TiaoZhanExchangeDataProto::TiaoZhanExchangeDataProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TiaoZhanExchangeDataProto::InitAsDefaultInstance() {
  goods_ = const_cast< ::app::message::GoodsWrapperProto*>(&::app::message::GoodsWrapperProto::default_instance());
}

TiaoZhanExchangeDataProto::TiaoZhanExchangeDataProto(const TiaoZhanExchangeDataProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TiaoZhanExchangeDataProto::SharedCtor() {
  _cached_size_ = 0;
  goods_ = NULL;
  shop_point_ = 0;
  limit_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TiaoZhanExchangeDataProto::~TiaoZhanExchangeDataProto() {
  SharedDtor();
}

void TiaoZhanExchangeDataProto::SharedDtor() {
  if (this != default_instance_) {
    delete goods_;
  }
}

void TiaoZhanExchangeDataProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TiaoZhanExchangeDataProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TiaoZhanExchangeDataProto_descriptor_;
}

const TiaoZhanExchangeDataProto& TiaoZhanExchangeDataProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

TiaoZhanExchangeDataProto* TiaoZhanExchangeDataProto::default_instance_ = NULL;

TiaoZhanExchangeDataProto* TiaoZhanExchangeDataProto::New() const {
  return new TiaoZhanExchangeDataProto;
}

void TiaoZhanExchangeDataProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_goods()) {
      if (goods_ != NULL) goods_->::app::message::GoodsWrapperProto::Clear();
    }
    shop_point_ = 0;
    limit_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TiaoZhanExchangeDataProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .app.message.GoodsWrapperProto goods = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_goods()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_shop_point;
        break;
      }

      // optional int32 shop_point = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_shop_point:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shop_point_)));
          set_has_shop_point();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_limit;
        break;
      }

      // optional int32 limit = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &limit_)));
          set_has_limit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TiaoZhanExchangeDataProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .app.message.GoodsWrapperProto goods = 1;
  if (has_goods()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->goods(), output);
  }

  // optional int32 shop_point = 2;
  if (has_shop_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->shop_point(), output);
  }

  // optional int32 limit = 3;
  if (has_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->limit(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TiaoZhanExchangeDataProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .app.message.GoodsWrapperProto goods = 1;
  if (has_goods()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->goods(), target);
  }

  // optional int32 shop_point = 2;
  if (has_shop_point()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->shop_point(), target);
  }

  // optional int32 limit = 3;
  if (has_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->limit(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TiaoZhanExchangeDataProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .app.message.GoodsWrapperProto goods = 1;
    if (has_goods()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->goods());
    }

    // optional int32 shop_point = 2;
    if (has_shop_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->shop_point());
    }

    // optional int32 limit = 3;
    if (has_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->limit());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TiaoZhanExchangeDataProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TiaoZhanExchangeDataProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TiaoZhanExchangeDataProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TiaoZhanExchangeDataProto::MergeFrom(const TiaoZhanExchangeDataProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_goods()) {
      mutable_goods()->::app::message::GoodsWrapperProto::MergeFrom(from.goods());
    }
    if (from.has_shop_point()) {
      set_shop_point(from.shop_point());
    }
    if (from.has_limit()) {
      set_limit(from.limit());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TiaoZhanExchangeDataProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TiaoZhanExchangeDataProto::CopyFrom(const TiaoZhanExchangeDataProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TiaoZhanExchangeDataProto::IsInitialized() const {

  return true;
}

void TiaoZhanExchangeDataProto::Swap(TiaoZhanExchangeDataProto* other) {
  if (other != this) {
    std::swap(goods_, other->goods_);
    std::swap(shop_point_, other->shop_point_);
    std::swap(limit_, other->limit_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TiaoZhanExchangeDataProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TiaoZhanExchangeDataProto_descriptor_;
  metadata.reflection = TiaoZhanExchangeDataProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MoBingActivityDatasProto::kStartTimeFieldNumber;
const int MoBingActivityDatasProto::kEndTimeFieldNumber;
const int MoBingActivityDatasProto::kMoBingTypeFieldNumber;
const int MoBingActivityDatasProto::kRechargeFieldNumber;
const int MoBingActivityDatasProto::kPrizeFieldNumber;
const int MoBingActivityDatasProto::kDescFieldNumber;
#endif  // !_MSC_VER

MoBingActivityDatasProto::MoBingActivityDatasProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MoBingActivityDatasProto::InitAsDefaultInstance() {
  prize_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
}

MoBingActivityDatasProto::MoBingActivityDatasProto(const MoBingActivityDatasProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MoBingActivityDatasProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  mo_bing_type_ = 0;
  recharge_ = 0;
  prize_ = NULL;
  desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MoBingActivityDatasProto::~MoBingActivityDatasProto() {
  SharedDtor();
}

void MoBingActivityDatasProto::SharedDtor() {
  if (desc_ != &::google::protobuf::internal::kEmptyString) {
    delete desc_;
  }
  if (this != default_instance_) {
    delete prize_;
  }
}

void MoBingActivityDatasProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MoBingActivityDatasProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MoBingActivityDatasProto_descriptor_;
}

const MoBingActivityDatasProto& MoBingActivityDatasProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

MoBingActivityDatasProto* MoBingActivityDatasProto::default_instance_ = NULL;

MoBingActivityDatasProto* MoBingActivityDatasProto::New() const {
  return new MoBingActivityDatasProto;
}

void MoBingActivityDatasProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    mo_bing_type_ = 0;
    recharge_ = 0;
    if (has_prize()) {
      if (prize_ != NULL) prize_->::app::message::PrizeProto::Clear();
    }
    if (has_desc()) {
      if (desc_ != &::google::protobuf::internal::kEmptyString) {
        desc_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MoBingActivityDatasProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_mo_bing_type;
        break;
      }

      // optional int32 mo_bing_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mo_bing_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mo_bing_type_)));
          set_has_mo_bing_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_recharge;
        break;
      }

      // optional int32 recharge = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_recharge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &recharge_)));
          set_has_recharge();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_prize;
        break;
      }

      // optional .app.message.PrizeProto prize = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_desc;
        break;
      }

      // optional string desc = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_desc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->desc().data(), this->desc().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MoBingActivityDatasProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // optional int32 mo_bing_type = 3;
  if (has_mo_bing_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mo_bing_type(), output);
  }

  // optional int32 recharge = 4;
  if (has_recharge()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->recharge(), output);
  }

  // optional .app.message.PrizeProto prize = 5;
  if (has_prize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->prize(), output);
  }

  // optional string desc = 6;
  if (has_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->desc(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MoBingActivityDatasProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // optional int32 mo_bing_type = 3;
  if (has_mo_bing_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mo_bing_type(), target);
  }

  // optional int32 recharge = 4;
  if (has_recharge()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->recharge(), target);
  }

  // optional .app.message.PrizeProto prize = 5;
  if (has_prize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->prize(), target);
  }

  // optional string desc = 6;
  if (has_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->desc(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MoBingActivityDatasProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional int32 mo_bing_type = 3;
    if (has_mo_bing_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mo_bing_type());
    }

    // optional int32 recharge = 4;
    if (has_recharge()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->recharge());
    }

    // optional .app.message.PrizeProto prize = 5;
    if (has_prize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prize());
    }

    // optional string desc = 6;
    if (has_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->desc());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MoBingActivityDatasProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MoBingActivityDatasProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MoBingActivityDatasProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MoBingActivityDatasProto::MergeFrom(const MoBingActivityDatasProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_mo_bing_type()) {
      set_mo_bing_type(from.mo_bing_type());
    }
    if (from.has_recharge()) {
      set_recharge(from.recharge());
    }
    if (from.has_prize()) {
      mutable_prize()->::app::message::PrizeProto::MergeFrom(from.prize());
    }
    if (from.has_desc()) {
      set_desc(from.desc());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MoBingActivityDatasProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoBingActivityDatasProto::CopyFrom(const MoBingActivityDatasProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoBingActivityDatasProto::IsInitialized() const {

  return true;
}

void MoBingActivityDatasProto::Swap(MoBingActivityDatasProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    std::swap(mo_bing_type_, other->mo_bing_type_);
    std::swap(recharge_, other->recharge_);
    std::swap(prize_, other->prize_);
    std::swap(desc_, other->desc_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MoBingActivityDatasProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MoBingActivityDatasProto_descriptor_;
  metadata.reflection = MoBingActivityDatasProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GlobalRechargePrizeDatasProto::kStartTimeFieldNumber;
const int GlobalRechargePrizeDatasProto::kEndTimeFieldNumber;
const int GlobalRechargePrizeDatasProto::kRechargeAmountFieldNumber;
const int GlobalRechargePrizeDatasProto::kPrizeFieldNumber;
const int GlobalRechargePrizeDatasProto::kDescFieldNumber;
const int GlobalRechargePrizeDatasProto::kVipLevelFieldNumber;
#endif  // !_MSC_VER

GlobalRechargePrizeDatasProto::GlobalRechargePrizeDatasProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GlobalRechargePrizeDatasProto::InitAsDefaultInstance() {
  prize_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
}

GlobalRechargePrizeDatasProto::GlobalRechargePrizeDatasProto(const GlobalRechargePrizeDatasProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GlobalRechargePrizeDatasProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  recharge_amount_ = 0;
  prize_ = NULL;
  desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  vip_level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GlobalRechargePrizeDatasProto::~GlobalRechargePrizeDatasProto() {
  SharedDtor();
}

void GlobalRechargePrizeDatasProto::SharedDtor() {
  if (desc_ != &::google::protobuf::internal::kEmptyString) {
    delete desc_;
  }
  if (this != default_instance_) {
    delete prize_;
  }
}

void GlobalRechargePrizeDatasProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GlobalRechargePrizeDatasProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GlobalRechargePrizeDatasProto_descriptor_;
}

const GlobalRechargePrizeDatasProto& GlobalRechargePrizeDatasProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

GlobalRechargePrizeDatasProto* GlobalRechargePrizeDatasProto::default_instance_ = NULL;

GlobalRechargePrizeDatasProto* GlobalRechargePrizeDatasProto::New() const {
  return new GlobalRechargePrizeDatasProto;
}

void GlobalRechargePrizeDatasProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    recharge_amount_ = 0;
    if (has_prize()) {
      if (prize_ != NULL) prize_->::app::message::PrizeProto::Clear();
    }
    if (has_desc()) {
      if (desc_ != &::google::protobuf::internal::kEmptyString) {
        desc_->clear();
      }
    }
    vip_level_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GlobalRechargePrizeDatasProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_recharge_amount;
        break;
      }

      // optional int32 recharge_amount = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_recharge_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &recharge_amount_)));
          set_has_recharge_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_prize;
        break;
      }

      // optional .app.message.PrizeProto prize = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_desc;
        break;
      }

      // optional string desc = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_desc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->desc().data(), this->desc().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_vip_level;
        break;
      }

      // optional int32 vip_level = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vip_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_level_)));
          set_has_vip_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GlobalRechargePrizeDatasProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // optional int32 recharge_amount = 3;
  if (has_recharge_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->recharge_amount(), output);
  }

  // optional .app.message.PrizeProto prize = 4;
  if (has_prize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->prize(), output);
  }

  // optional string desc = 5;
  if (has_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->desc(), output);
  }

  // optional int32 vip_level = 6;
  if (has_vip_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->vip_level(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GlobalRechargePrizeDatasProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // optional int32 recharge_amount = 3;
  if (has_recharge_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->recharge_amount(), target);
  }

  // optional .app.message.PrizeProto prize = 4;
  if (has_prize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->prize(), target);
  }

  // optional string desc = 5;
  if (has_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->desc(), target);
  }

  // optional int32 vip_level = 6;
  if (has_vip_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->vip_level(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GlobalRechargePrizeDatasProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional int32 recharge_amount = 3;
    if (has_recharge_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->recharge_amount());
    }

    // optional .app.message.PrizeProto prize = 4;
    if (has_prize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prize());
    }

    // optional string desc = 5;
    if (has_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->desc());
    }

    // optional int32 vip_level = 6;
    if (has_vip_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip_level());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GlobalRechargePrizeDatasProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GlobalRechargePrizeDatasProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GlobalRechargePrizeDatasProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GlobalRechargePrizeDatasProto::MergeFrom(const GlobalRechargePrizeDatasProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_recharge_amount()) {
      set_recharge_amount(from.recharge_amount());
    }
    if (from.has_prize()) {
      mutable_prize()->::app::message::PrizeProto::MergeFrom(from.prize());
    }
    if (from.has_desc()) {
      set_desc(from.desc());
    }
    if (from.has_vip_level()) {
      set_vip_level(from.vip_level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GlobalRechargePrizeDatasProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalRechargePrizeDatasProto::CopyFrom(const GlobalRechargePrizeDatasProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalRechargePrizeDatasProto::IsInitialized() const {

  return true;
}

void GlobalRechargePrizeDatasProto::Swap(GlobalRechargePrizeDatasProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    std::swap(recharge_amount_, other->recharge_amount_);
    std::swap(prize_, other->prize_);
    std::swap(desc_, other->desc_);
    std::swap(vip_level_, other->vip_level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GlobalRechargePrizeDatasProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GlobalRechargePrizeDatasProto_descriptor_;
  metadata.reflection = GlobalRechargePrizeDatasProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GlobalMarriageRankDatasProto::kStartTimeFieldNumber;
const int GlobalMarriageRankDatasProto::kEndTimeFieldNumber;
const int GlobalMarriageRankDatasProto::kPageCountFieldNumber;
const int GlobalMarriageRankDatasProto::kTotalPageFieldNumber;
const int GlobalMarriageRankDatasProto::kDataFieldNumber;
#endif  // !_MSC_VER

GlobalMarriageRankDatasProto::GlobalMarriageRankDatasProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GlobalMarriageRankDatasProto::InitAsDefaultInstance() {
}

GlobalMarriageRankDatasProto::GlobalMarriageRankDatasProto(const GlobalMarriageRankDatasProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GlobalMarriageRankDatasProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  page_count_ = 0;
  total_page_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GlobalMarriageRankDatasProto::~GlobalMarriageRankDatasProto() {
  SharedDtor();
}

void GlobalMarriageRankDatasProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GlobalMarriageRankDatasProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GlobalMarriageRankDatasProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GlobalMarriageRankDatasProto_descriptor_;
}

const GlobalMarriageRankDatasProto& GlobalMarriageRankDatasProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

GlobalMarriageRankDatasProto* GlobalMarriageRankDatasProto::default_instance_ = NULL;

GlobalMarriageRankDatasProto* GlobalMarriageRankDatasProto::New() const {
  return new GlobalMarriageRankDatasProto;
}

void GlobalMarriageRankDatasProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    page_count_ = 0;
    total_page_ = 0;
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GlobalMarriageRankDatasProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_page_count;
        break;
      }

      // optional int32 page_count = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_page_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_count_)));
          set_has_page_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_total_page;
        break;
      }

      // optional int32 total_page = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_page_)));
          set_has_total_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_data;
        break;
      }

      // repeated .app.message.GlobalMarriageRankDataProto data = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GlobalMarriageRankDatasProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // optional int32 page_count = 3;
  if (has_page_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_count(), output);
  }

  // optional int32 total_page = 4;
  if (has_total_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->total_page(), output);
  }

  // repeated .app.message.GlobalMarriageRankDataProto data = 5;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GlobalMarriageRankDatasProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // optional int32 page_count = 3;
  if (has_page_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_count(), target);
  }

  // optional int32 total_page = 4;
  if (has_total_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->total_page(), target);
  }

  // repeated .app.message.GlobalMarriageRankDataProto data = 5;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GlobalMarriageRankDatasProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional int32 page_count = 3;
    if (has_page_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page_count());
    }

    // optional int32 total_page = 4;
    if (has_total_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_page());
    }

  }
  // repeated .app.message.GlobalMarriageRankDataProto data = 5;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GlobalMarriageRankDatasProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GlobalMarriageRankDatasProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GlobalMarriageRankDatasProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GlobalMarriageRankDatasProto::MergeFrom(const GlobalMarriageRankDatasProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_page_count()) {
      set_page_count(from.page_count());
    }
    if (from.has_total_page()) {
      set_total_page(from.total_page());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GlobalMarriageRankDatasProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalMarriageRankDatasProto::CopyFrom(const GlobalMarriageRankDatasProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalMarriageRankDatasProto::IsInitialized() const {

  return true;
}

void GlobalMarriageRankDatasProto::Swap(GlobalMarriageRankDatasProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    std::swap(page_count_, other->page_count_);
    std::swap(total_page_, other->total_page_);
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GlobalMarriageRankDatasProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GlobalMarriageRankDatasProto_descriptor_;
  metadata.reflection = GlobalMarriageRankDatasProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GlobalMarriageRankDataProto::kLastRankFieldNumber;
const int GlobalMarriageRankDataProto::kFinalPrizeFieldNumber;
#endif  // !_MSC_VER

GlobalMarriageRankDataProto::GlobalMarriageRankDataProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GlobalMarriageRankDataProto::InitAsDefaultInstance() {
  finalprize_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
}

GlobalMarriageRankDataProto::GlobalMarriageRankDataProto(const GlobalMarriageRankDataProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GlobalMarriageRankDataProto::SharedCtor() {
  _cached_size_ = 0;
  last_rank_ = 0;
  finalprize_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GlobalMarriageRankDataProto::~GlobalMarriageRankDataProto() {
  SharedDtor();
}

void GlobalMarriageRankDataProto::SharedDtor() {
  if (this != default_instance_) {
    delete finalprize_;
  }
}

void GlobalMarriageRankDataProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GlobalMarriageRankDataProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GlobalMarriageRankDataProto_descriptor_;
}

const GlobalMarriageRankDataProto& GlobalMarriageRankDataProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

GlobalMarriageRankDataProto* GlobalMarriageRankDataProto::default_instance_ = NULL;

GlobalMarriageRankDataProto* GlobalMarriageRankDataProto::New() const {
  return new GlobalMarriageRankDataProto;
}

void GlobalMarriageRankDataProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    last_rank_ = 0;
    if (has_finalprize()) {
      if (finalprize_ != NULL) finalprize_->::app::message::PrizeProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GlobalMarriageRankDataProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 last_rank = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_rank_)));
          set_has_last_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_finalPrize;
        break;
      }

      // optional .app.message.PrizeProto finalPrize = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_finalPrize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_finalprize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GlobalMarriageRankDataProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 last_rank = 1;
  if (has_last_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->last_rank(), output);
  }

  // optional .app.message.PrizeProto finalPrize = 3;
  if (has_finalprize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->finalprize(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GlobalMarriageRankDataProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 last_rank = 1;
  if (has_last_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->last_rank(), target);
  }

  // optional .app.message.PrizeProto finalPrize = 3;
  if (has_finalprize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->finalprize(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GlobalMarriageRankDataProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 last_rank = 1;
    if (has_last_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->last_rank());
    }

    // optional .app.message.PrizeProto finalPrize = 3;
    if (has_finalprize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->finalprize());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GlobalMarriageRankDataProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GlobalMarriageRankDataProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GlobalMarriageRankDataProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GlobalMarriageRankDataProto::MergeFrom(const GlobalMarriageRankDataProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_last_rank()) {
      set_last_rank(from.last_rank());
    }
    if (from.has_finalprize()) {
      mutable_finalprize()->::app::message::PrizeProto::MergeFrom(from.finalprize());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GlobalMarriageRankDataProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalMarriageRankDataProto::CopyFrom(const GlobalMarriageRankDataProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalMarriageRankDataProto::IsInitialized() const {

  return true;
}

void GlobalMarriageRankDataProto::Swap(GlobalMarriageRankDataProto* other) {
  if (other != this) {
    std::swap(last_rank_, other->last_rank_);
    std::swap(finalprize_, other->finalprize_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GlobalMarriageRankDataProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GlobalMarriageRankDataProto_descriptor_;
  metadata.reflection = GlobalMarriageRankDataProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpgradeYuanbaoCutProto::kStartTimeFieldNumber;
const int UpgradeYuanbaoCutProto::kEndTimeFieldNumber;
const int UpgradeYuanbaoCutProto::kRulesFieldNumber;
#endif  // !_MSC_VER

UpgradeYuanbaoCutProto::UpgradeYuanbaoCutProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UpgradeYuanbaoCutProto::InitAsDefaultInstance() {
}

UpgradeYuanbaoCutProto::UpgradeYuanbaoCutProto(const UpgradeYuanbaoCutProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UpgradeYuanbaoCutProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpgradeYuanbaoCutProto::~UpgradeYuanbaoCutProto() {
  SharedDtor();
}

void UpgradeYuanbaoCutProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UpgradeYuanbaoCutProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpgradeYuanbaoCutProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpgradeYuanbaoCutProto_descriptor_;
}

const UpgradeYuanbaoCutProto& UpgradeYuanbaoCutProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

UpgradeYuanbaoCutProto* UpgradeYuanbaoCutProto::default_instance_ = NULL;

UpgradeYuanbaoCutProto* UpgradeYuanbaoCutProto::New() const {
  return new UpgradeYuanbaoCutProto;
}

void UpgradeYuanbaoCutProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
  }
  rules_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpgradeYuanbaoCutProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_rules;
        break;
      }

      // repeated .app.message.UpgradeYuanbaoCutSingleProto rules = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rules:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rules()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_rules;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UpgradeYuanbaoCutProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // repeated .app.message.UpgradeYuanbaoCutSingleProto rules = 3;
  for (int i = 0; i < this->rules_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->rules(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UpgradeYuanbaoCutProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // repeated .app.message.UpgradeYuanbaoCutSingleProto rules = 3;
  for (int i = 0; i < this->rules_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->rules(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UpgradeYuanbaoCutProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

  }
  // repeated .app.message.UpgradeYuanbaoCutSingleProto rules = 3;
  total_size += 1 * this->rules_size();
  for (int i = 0; i < this->rules_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rules(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpgradeYuanbaoCutProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpgradeYuanbaoCutProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpgradeYuanbaoCutProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpgradeYuanbaoCutProto::MergeFrom(const UpgradeYuanbaoCutProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  rules_.MergeFrom(from.rules_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpgradeYuanbaoCutProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpgradeYuanbaoCutProto::CopyFrom(const UpgradeYuanbaoCutProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpgradeYuanbaoCutProto::IsInitialized() const {

  return true;
}

void UpgradeYuanbaoCutProto::Swap(UpgradeYuanbaoCutProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    rules_.Swap(&other->rules_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UpgradeYuanbaoCutProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpgradeYuanbaoCutProto_descriptor_;
  metadata.reflection = UpgradeYuanbaoCutProto_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* UpgradeYuanbaoCutSingleProto_UpgradeType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpgradeYuanbaoCutSingleProto_UpgradeType_descriptor_;
}
bool UpgradeYuanbaoCutSingleProto_UpgradeType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const UpgradeYuanbaoCutSingleProto_UpgradeType UpgradeYuanbaoCutSingleProto::MOUNT;
const UpgradeYuanbaoCutSingleProto_UpgradeType UpgradeYuanbaoCutSingleProto::TIANJIE;
const UpgradeYuanbaoCutSingleProto_UpgradeType UpgradeYuanbaoCutSingleProto::TIANZUI;
const UpgradeYuanbaoCutSingleProto_UpgradeType UpgradeYuanbaoCutSingleProto::BOW;
const UpgradeYuanbaoCutSingleProto_UpgradeType UpgradeYuanbaoCutSingleProto::SUPER_ARM;
const UpgradeYuanbaoCutSingleProto_UpgradeType UpgradeYuanbaoCutSingleProto::DEMON;
const UpgradeYuanbaoCutSingleProto_UpgradeType UpgradeYuanbaoCutSingleProto::CLOAK;
const UpgradeYuanbaoCutSingleProto_UpgradeType UpgradeYuanbaoCutSingleProto::MOSHI;
const UpgradeYuanbaoCutSingleProto_UpgradeType UpgradeYuanbaoCutSingleProto::QIAN_QIU_DA_JIE;
const UpgradeYuanbaoCutSingleProto_UpgradeType UpgradeYuanbaoCutSingleProto::CHI_HUO_SHEN_GONG;
const UpgradeYuanbaoCutSingleProto_UpgradeType UpgradeYuanbaoCutSingleProto::MOSHI_0;
const UpgradeYuanbaoCutSingleProto_UpgradeType UpgradeYuanbaoCutSingleProto::MOSHI_1;
const UpgradeYuanbaoCutSingleProto_UpgradeType UpgradeYuanbaoCutSingleProto::MOSHI_2;
const UpgradeYuanbaoCutSingleProto_UpgradeType UpgradeYuanbaoCutSingleProto::MOSHI_3;
const UpgradeYuanbaoCutSingleProto_UpgradeType UpgradeYuanbaoCutSingleProto::QIAN_QIU;
const UpgradeYuanbaoCutSingleProto_UpgradeType UpgradeYuanbaoCutSingleProto::DA_JIE;
const UpgradeYuanbaoCutSingleProto_UpgradeType UpgradeYuanbaoCutSingleProto::TIAN_XIE;
const UpgradeYuanbaoCutSingleProto_UpgradeType UpgradeYuanbaoCutSingleProto::WU_DAO;
const UpgradeYuanbaoCutSingleProto_UpgradeType UpgradeYuanbaoCutSingleProto::SHIELD;
const UpgradeYuanbaoCutSingleProto_UpgradeType UpgradeYuanbaoCutSingleProto::LING_YU;
const UpgradeYuanbaoCutSingleProto_UpgradeType UpgradeYuanbaoCutSingleProto::MO_FANG;
const UpgradeYuanbaoCutSingleProto_UpgradeType UpgradeYuanbaoCutSingleProto::UpgradeType_MIN;
const UpgradeYuanbaoCutSingleProto_UpgradeType UpgradeYuanbaoCutSingleProto::UpgradeType_MAX;
const int UpgradeYuanbaoCutSingleProto::UpgradeType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int UpgradeYuanbaoCutSingleProto::kRechargeAmountFieldNumber;
const int UpgradeYuanbaoCutSingleProto::kTypeFieldNumber;
const int UpgradeYuanbaoCutSingleProto::kPercentageFieldNumber;
#endif  // !_MSC_VER

UpgradeYuanbaoCutSingleProto::UpgradeYuanbaoCutSingleProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UpgradeYuanbaoCutSingleProto::InitAsDefaultInstance() {
}

UpgradeYuanbaoCutSingleProto::UpgradeYuanbaoCutSingleProto(const UpgradeYuanbaoCutSingleProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UpgradeYuanbaoCutSingleProto::SharedCtor() {
  _cached_size_ = 0;
  recharge_amount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpgradeYuanbaoCutSingleProto::~UpgradeYuanbaoCutSingleProto() {
  SharedDtor();
}

void UpgradeYuanbaoCutSingleProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UpgradeYuanbaoCutSingleProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpgradeYuanbaoCutSingleProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpgradeYuanbaoCutSingleProto_descriptor_;
}

const UpgradeYuanbaoCutSingleProto& UpgradeYuanbaoCutSingleProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

UpgradeYuanbaoCutSingleProto* UpgradeYuanbaoCutSingleProto::default_instance_ = NULL;

UpgradeYuanbaoCutSingleProto* UpgradeYuanbaoCutSingleProto::New() const {
  return new UpgradeYuanbaoCutSingleProto;
}

void UpgradeYuanbaoCutSingleProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    recharge_amount_ = 0;
  }
  type_.Clear();
  percentage_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpgradeYuanbaoCutSingleProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 recharge_amount = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &recharge_amount_)));
          set_has_recharge_amount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // repeated .app.message.UpgradeYuanbaoCutSingleProto.UpgradeType type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::app::message::UpgradeYuanbaoCutSingleProto_UpgradeType_IsValid(value)) {
            add_type(static_cast< ::app::message::UpgradeYuanbaoCutSingleProto_UpgradeType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline(
                 input,
                 &::app::message::UpgradeYuanbaoCutSingleProto_UpgradeType_IsValid,
                 this->mutable_type())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        if (input->ExpectTag(24)) goto parse_percentage;
        break;
      }

      // repeated int32 percentage = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_percentage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_percentage())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_percentage())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_percentage;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UpgradeYuanbaoCutSingleProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 recharge_amount = 1;
  if (has_recharge_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->recharge_amount(), output);
  }

  // repeated .app.message.UpgradeYuanbaoCutSingleProto.UpgradeType type = 2;
  for (int i = 0; i < this->type_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(i), output);
  }

  // repeated int32 percentage = 3;
  for (int i = 0; i < this->percentage_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->percentage(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UpgradeYuanbaoCutSingleProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 recharge_amount = 1;
  if (has_recharge_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->recharge_amount(), target);
  }

  // repeated .app.message.UpgradeYuanbaoCutSingleProto.UpgradeType type = 2;
  for (int i = 0; i < this->type_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(i), target);
  }

  // repeated int32 percentage = 3;
  for (int i = 0; i < this->percentage_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->percentage(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UpgradeYuanbaoCutSingleProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 recharge_amount = 1;
    if (has_recharge_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->recharge_amount());
    }

  }
  // repeated .app.message.UpgradeYuanbaoCutSingleProto.UpgradeType type = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->type_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->type(i));
    }
    total_size += 1 * this->type_size() + data_size;
  }

  // repeated int32 percentage = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->percentage_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->percentage(i));
    }
    total_size += 1 * this->percentage_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpgradeYuanbaoCutSingleProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpgradeYuanbaoCutSingleProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpgradeYuanbaoCutSingleProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpgradeYuanbaoCutSingleProto::MergeFrom(const UpgradeYuanbaoCutSingleProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  type_.MergeFrom(from.type_);
  percentage_.MergeFrom(from.percentage_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_recharge_amount()) {
      set_recharge_amount(from.recharge_amount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpgradeYuanbaoCutSingleProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpgradeYuanbaoCutSingleProto::CopyFrom(const UpgradeYuanbaoCutSingleProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpgradeYuanbaoCutSingleProto::IsInitialized() const {

  return true;
}

void UpgradeYuanbaoCutSingleProto::Swap(UpgradeYuanbaoCutSingleProto* other) {
  if (other != this) {
    std::swap(recharge_amount_, other->recharge_amount_);
    type_.Swap(&other->type_);
    percentage_.Swap(&other->percentage_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UpgradeYuanbaoCutSingleProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpgradeYuanbaoCutSingleProto_descriptor_;
  metadata.reflection = UpgradeYuanbaoCutSingleProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GlobalRechargeRankDatasProto::kStartTimeFieldNumber;
const int GlobalRechargeRankDatasProto::kEndTimeFieldNumber;
const int GlobalRechargeRankDatasProto::kPageCountFieldNumber;
const int GlobalRechargeRankDatasProto::kTotalPageFieldNumber;
const int GlobalRechargeRankDatasProto::kDataFieldNumber;
const int GlobalRechargeRankDatasProto::kCanSeeDaysAfterEndFieldNumber;
const int GlobalRechargeRankDatasProto::kDailyMinRechargeFieldNumber;
const int GlobalRechargeRankDatasProto::kFinalMinRechargeFieldNumber;
#endif  // !_MSC_VER

GlobalRechargeRankDatasProto::GlobalRechargeRankDatasProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GlobalRechargeRankDatasProto::InitAsDefaultInstance() {
}

GlobalRechargeRankDatasProto::GlobalRechargeRankDatasProto(const GlobalRechargeRankDatasProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GlobalRechargeRankDatasProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  page_count_ = 0;
  total_page_ = 0;
  can_see_days_after_end_ = 0;
  daily_min_recharge_ = 0;
  final_min_recharge_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GlobalRechargeRankDatasProto::~GlobalRechargeRankDatasProto() {
  SharedDtor();
}

void GlobalRechargeRankDatasProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GlobalRechargeRankDatasProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GlobalRechargeRankDatasProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GlobalRechargeRankDatasProto_descriptor_;
}

const GlobalRechargeRankDatasProto& GlobalRechargeRankDatasProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

GlobalRechargeRankDatasProto* GlobalRechargeRankDatasProto::default_instance_ = NULL;

GlobalRechargeRankDatasProto* GlobalRechargeRankDatasProto::New() const {
  return new GlobalRechargeRankDatasProto;
}

void GlobalRechargeRankDatasProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    page_count_ = 0;
    total_page_ = 0;
    can_see_days_after_end_ = 0;
    daily_min_recharge_ = 0;
    final_min_recharge_ = 0;
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GlobalRechargeRankDatasProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_page_count;
        break;
      }

      // optional int32 page_count = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_page_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_count_)));
          set_has_page_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_total_page;
        break;
      }

      // optional int32 total_page = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_page_)));
          set_has_total_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_data;
        break;
      }

      // repeated .app.message.GlobalRechargeRankDataProto data = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_data;
        if (input->ExpectTag(48)) goto parse_can_see_days_after_end;
        break;
      }

      // optional int32 can_see_days_after_end = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_can_see_days_after_end:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &can_see_days_after_end_)));
          set_has_can_see_days_after_end();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_daily_min_recharge;
        break;
      }

      // optional int32 daily_min_recharge = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_daily_min_recharge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &daily_min_recharge_)));
          set_has_daily_min_recharge();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_final_min_recharge;
        break;
      }

      // optional int32 final_min_recharge = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_final_min_recharge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &final_min_recharge_)));
          set_has_final_min_recharge();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GlobalRechargeRankDatasProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // optional int32 page_count = 3;
  if (has_page_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_count(), output);
  }

  // optional int32 total_page = 4;
  if (has_total_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->total_page(), output);
  }

  // repeated .app.message.GlobalRechargeRankDataProto data = 5;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->data(i), output);
  }

  // optional int32 can_see_days_after_end = 6;
  if (has_can_see_days_after_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->can_see_days_after_end(), output);
  }

  // optional int32 daily_min_recharge = 7;
  if (has_daily_min_recharge()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->daily_min_recharge(), output);
  }

  // optional int32 final_min_recharge = 8;
  if (has_final_min_recharge()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->final_min_recharge(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GlobalRechargeRankDatasProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // optional int32 page_count = 3;
  if (has_page_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_count(), target);
  }

  // optional int32 total_page = 4;
  if (has_total_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->total_page(), target);
  }

  // repeated .app.message.GlobalRechargeRankDataProto data = 5;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->data(i), target);
  }

  // optional int32 can_see_days_after_end = 6;
  if (has_can_see_days_after_end()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->can_see_days_after_end(), target);
  }

  // optional int32 daily_min_recharge = 7;
  if (has_daily_min_recharge()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->daily_min_recharge(), target);
  }

  // optional int32 final_min_recharge = 8;
  if (has_final_min_recharge()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->final_min_recharge(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GlobalRechargeRankDatasProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional int32 page_count = 3;
    if (has_page_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page_count());
    }

    // optional int32 total_page = 4;
    if (has_total_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_page());
    }

    // optional int32 can_see_days_after_end = 6;
    if (has_can_see_days_after_end()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->can_see_days_after_end());
    }

    // optional int32 daily_min_recharge = 7;
    if (has_daily_min_recharge()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->daily_min_recharge());
    }

    // optional int32 final_min_recharge = 8;
    if (has_final_min_recharge()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->final_min_recharge());
    }

  }
  // repeated .app.message.GlobalRechargeRankDataProto data = 5;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GlobalRechargeRankDatasProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GlobalRechargeRankDatasProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GlobalRechargeRankDatasProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GlobalRechargeRankDatasProto::MergeFrom(const GlobalRechargeRankDatasProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_page_count()) {
      set_page_count(from.page_count());
    }
    if (from.has_total_page()) {
      set_total_page(from.total_page());
    }
    if (from.has_can_see_days_after_end()) {
      set_can_see_days_after_end(from.can_see_days_after_end());
    }
    if (from.has_daily_min_recharge()) {
      set_daily_min_recharge(from.daily_min_recharge());
    }
    if (from.has_final_min_recharge()) {
      set_final_min_recharge(from.final_min_recharge());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GlobalRechargeRankDatasProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalRechargeRankDatasProto::CopyFrom(const GlobalRechargeRankDatasProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalRechargeRankDatasProto::IsInitialized() const {

  return true;
}

void GlobalRechargeRankDatasProto::Swap(GlobalRechargeRankDatasProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    std::swap(page_count_, other->page_count_);
    std::swap(total_page_, other->total_page_);
    data_.Swap(&other->data_);
    std::swap(can_see_days_after_end_, other->can_see_days_after_end_);
    std::swap(daily_min_recharge_, other->daily_min_recharge_);
    std::swap(final_min_recharge_, other->final_min_recharge_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GlobalRechargeRankDatasProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GlobalRechargeRankDatasProto_descriptor_;
  metadata.reflection = GlobalRechargeRankDatasProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GlobalRechargeRankDataProto::kLastRankFieldNumber;
const int GlobalRechargeRankDataProto::kDailyPrizeFieldNumber;
const int GlobalRechargeRankDataProto::kFinalPrizeFieldNumber;
const int GlobalRechargeRankDataProto::kTypeFieldNumber;
#endif  // !_MSC_VER

GlobalRechargeRankDataProto::GlobalRechargeRankDataProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GlobalRechargeRankDataProto::InitAsDefaultInstance() {
  finalprize_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
}

GlobalRechargeRankDataProto::GlobalRechargeRankDataProto(const GlobalRechargeRankDataProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GlobalRechargeRankDataProto::SharedCtor() {
  _cached_size_ = 0;
  last_rank_ = 0;
  finalprize_ = NULL;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GlobalRechargeRankDataProto::~GlobalRechargeRankDataProto() {
  SharedDtor();
}

void GlobalRechargeRankDataProto::SharedDtor() {
  if (this != default_instance_) {
    delete finalprize_;
  }
}

void GlobalRechargeRankDataProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GlobalRechargeRankDataProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GlobalRechargeRankDataProto_descriptor_;
}

const GlobalRechargeRankDataProto& GlobalRechargeRankDataProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

GlobalRechargeRankDataProto* GlobalRechargeRankDataProto::default_instance_ = NULL;

GlobalRechargeRankDataProto* GlobalRechargeRankDataProto::New() const {
  return new GlobalRechargeRankDataProto;
}

void GlobalRechargeRankDataProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    last_rank_ = 0;
    if (has_finalprize()) {
      if (finalprize_ != NULL) finalprize_->::app::message::PrizeProto::Clear();
    }
    type_ = 0;
  }
  dailyprize_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GlobalRechargeRankDataProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 last_rank = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_rank_)));
          set_has_last_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_dailyPrize;
        break;
      }

      // repeated .app.message.PrizeProto dailyPrize = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_dailyPrize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dailyprize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_dailyPrize;
        if (input->ExpectTag(26)) goto parse_finalPrize;
        break;
      }

      // optional .app.message.PrizeProto finalPrize = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_finalPrize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_finalprize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_type;
        break;
      }

      // optional int32 type = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GlobalRechargeRankDataProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 last_rank = 1;
  if (has_last_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->last_rank(), output);
  }

  // repeated .app.message.PrizeProto dailyPrize = 2;
  for (int i = 0; i < this->dailyprize_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->dailyprize(i), output);
  }

  // optional .app.message.PrizeProto finalPrize = 3;
  if (has_finalprize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->finalprize(), output);
  }

  // optional int32 type = 4;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GlobalRechargeRankDataProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 last_rank = 1;
  if (has_last_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->last_rank(), target);
  }

  // repeated .app.message.PrizeProto dailyPrize = 2;
  for (int i = 0; i < this->dailyprize_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->dailyprize(i), target);
  }

  // optional .app.message.PrizeProto finalPrize = 3;
  if (has_finalprize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->finalprize(), target);
  }

  // optional int32 type = 4;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GlobalRechargeRankDataProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 last_rank = 1;
    if (has_last_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->last_rank());
    }

    // optional .app.message.PrizeProto finalPrize = 3;
    if (has_finalprize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->finalprize());
    }

    // optional int32 type = 4;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

  }
  // repeated .app.message.PrizeProto dailyPrize = 2;
  total_size += 1 * this->dailyprize_size();
  for (int i = 0; i < this->dailyprize_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dailyprize(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GlobalRechargeRankDataProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GlobalRechargeRankDataProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GlobalRechargeRankDataProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GlobalRechargeRankDataProto::MergeFrom(const GlobalRechargeRankDataProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  dailyprize_.MergeFrom(from.dailyprize_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_last_rank()) {
      set_last_rank(from.last_rank());
    }
    if (from.has_finalprize()) {
      mutable_finalprize()->::app::message::PrizeProto::MergeFrom(from.finalprize());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GlobalRechargeRankDataProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalRechargeRankDataProto::CopyFrom(const GlobalRechargeRankDataProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalRechargeRankDataProto::IsInitialized() const {

  return true;
}

void GlobalRechargeRankDataProto::Swap(GlobalRechargeRankDataProto* other) {
  if (other != this) {
    std::swap(last_rank_, other->last_rank_);
    dailyprize_.Swap(&other->dailyprize_);
    std::swap(finalprize_, other->finalprize_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GlobalRechargeRankDataProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GlobalRechargeRankDataProto_descriptor_;
  metadata.reflection = GlobalRechargeRankDataProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GlobalConsumeRankDatasProto::kStartTimeFieldNumber;
const int GlobalConsumeRankDatasProto::kEndTimeFieldNumber;
const int GlobalConsumeRankDatasProto::kPageCountFieldNumber;
const int GlobalConsumeRankDatasProto::kTotalPageFieldNumber;
const int GlobalConsumeRankDatasProto::kDataFieldNumber;
const int GlobalConsumeRankDatasProto::kCanSeeDaysAfterEndFieldNumber;
const int GlobalConsumeRankDatasProto::kDailyMinRechargeFieldNumber;
const int GlobalConsumeRankDatasProto::kFinalMinRechargeFieldNumber;
#endif  // !_MSC_VER

GlobalConsumeRankDatasProto::GlobalConsumeRankDatasProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GlobalConsumeRankDatasProto::InitAsDefaultInstance() {
}

GlobalConsumeRankDatasProto::GlobalConsumeRankDatasProto(const GlobalConsumeRankDatasProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GlobalConsumeRankDatasProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  page_count_ = 0;
  total_page_ = 0;
  can_see_days_after_end_ = 0;
  daily_min_recharge_ = 0;
  final_min_recharge_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GlobalConsumeRankDatasProto::~GlobalConsumeRankDatasProto() {
  SharedDtor();
}

void GlobalConsumeRankDatasProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GlobalConsumeRankDatasProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GlobalConsumeRankDatasProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GlobalConsumeRankDatasProto_descriptor_;
}

const GlobalConsumeRankDatasProto& GlobalConsumeRankDatasProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

GlobalConsumeRankDatasProto* GlobalConsumeRankDatasProto::default_instance_ = NULL;

GlobalConsumeRankDatasProto* GlobalConsumeRankDatasProto::New() const {
  return new GlobalConsumeRankDatasProto;
}

void GlobalConsumeRankDatasProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    page_count_ = 0;
    total_page_ = 0;
    can_see_days_after_end_ = 0;
    daily_min_recharge_ = 0;
    final_min_recharge_ = 0;
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GlobalConsumeRankDatasProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_page_count;
        break;
      }

      // optional int32 page_count = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_page_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_count_)));
          set_has_page_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_total_page;
        break;
      }

      // optional int32 total_page = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_page_)));
          set_has_total_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_data;
        break;
      }

      // repeated .app.message.GlobalConsumeRankDataProto data = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_data;
        if (input->ExpectTag(48)) goto parse_can_see_days_after_end;
        break;
      }

      // optional int32 can_see_days_after_end = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_can_see_days_after_end:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &can_see_days_after_end_)));
          set_has_can_see_days_after_end();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_daily_min_recharge;
        break;
      }

      // optional int32 daily_min_recharge = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_daily_min_recharge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &daily_min_recharge_)));
          set_has_daily_min_recharge();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_final_min_recharge;
        break;
      }

      // optional int32 final_min_recharge = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_final_min_recharge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &final_min_recharge_)));
          set_has_final_min_recharge();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GlobalConsumeRankDatasProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // optional int32 page_count = 3;
  if (has_page_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_count(), output);
  }

  // optional int32 total_page = 4;
  if (has_total_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->total_page(), output);
  }

  // repeated .app.message.GlobalConsumeRankDataProto data = 5;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->data(i), output);
  }

  // optional int32 can_see_days_after_end = 6;
  if (has_can_see_days_after_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->can_see_days_after_end(), output);
  }

  // optional int32 daily_min_recharge = 7;
  if (has_daily_min_recharge()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->daily_min_recharge(), output);
  }

  // optional int32 final_min_recharge = 8;
  if (has_final_min_recharge()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->final_min_recharge(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GlobalConsumeRankDatasProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // optional int32 page_count = 3;
  if (has_page_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_count(), target);
  }

  // optional int32 total_page = 4;
  if (has_total_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->total_page(), target);
  }

  // repeated .app.message.GlobalConsumeRankDataProto data = 5;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->data(i), target);
  }

  // optional int32 can_see_days_after_end = 6;
  if (has_can_see_days_after_end()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->can_see_days_after_end(), target);
  }

  // optional int32 daily_min_recharge = 7;
  if (has_daily_min_recharge()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->daily_min_recharge(), target);
  }

  // optional int32 final_min_recharge = 8;
  if (has_final_min_recharge()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->final_min_recharge(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GlobalConsumeRankDatasProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional int32 page_count = 3;
    if (has_page_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page_count());
    }

    // optional int32 total_page = 4;
    if (has_total_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_page());
    }

    // optional int32 can_see_days_after_end = 6;
    if (has_can_see_days_after_end()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->can_see_days_after_end());
    }

    // optional int32 daily_min_recharge = 7;
    if (has_daily_min_recharge()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->daily_min_recharge());
    }

    // optional int32 final_min_recharge = 8;
    if (has_final_min_recharge()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->final_min_recharge());
    }

  }
  // repeated .app.message.GlobalConsumeRankDataProto data = 5;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GlobalConsumeRankDatasProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GlobalConsumeRankDatasProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GlobalConsumeRankDatasProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GlobalConsumeRankDatasProto::MergeFrom(const GlobalConsumeRankDatasProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_page_count()) {
      set_page_count(from.page_count());
    }
    if (from.has_total_page()) {
      set_total_page(from.total_page());
    }
    if (from.has_can_see_days_after_end()) {
      set_can_see_days_after_end(from.can_see_days_after_end());
    }
    if (from.has_daily_min_recharge()) {
      set_daily_min_recharge(from.daily_min_recharge());
    }
    if (from.has_final_min_recharge()) {
      set_final_min_recharge(from.final_min_recharge());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GlobalConsumeRankDatasProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalConsumeRankDatasProto::CopyFrom(const GlobalConsumeRankDatasProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalConsumeRankDatasProto::IsInitialized() const {

  return true;
}

void GlobalConsumeRankDatasProto::Swap(GlobalConsumeRankDatasProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    std::swap(page_count_, other->page_count_);
    std::swap(total_page_, other->total_page_);
    data_.Swap(&other->data_);
    std::swap(can_see_days_after_end_, other->can_see_days_after_end_);
    std::swap(daily_min_recharge_, other->daily_min_recharge_);
    std::swap(final_min_recharge_, other->final_min_recharge_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GlobalConsumeRankDatasProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GlobalConsumeRankDatasProto_descriptor_;
  metadata.reflection = GlobalConsumeRankDatasProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GlobalConsumeRankDataProto::kLastRankFieldNumber;
const int GlobalConsumeRankDataProto::kDailyPrizeFieldNumber;
const int GlobalConsumeRankDataProto::kFinalPrizeFieldNumber;
const int GlobalConsumeRankDataProto::kTypeFieldNumber;
#endif  // !_MSC_VER

GlobalConsumeRankDataProto::GlobalConsumeRankDataProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GlobalConsumeRankDataProto::InitAsDefaultInstance() {
  finalprize_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
}

GlobalConsumeRankDataProto::GlobalConsumeRankDataProto(const GlobalConsumeRankDataProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GlobalConsumeRankDataProto::SharedCtor() {
  _cached_size_ = 0;
  last_rank_ = 0;
  finalprize_ = NULL;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GlobalConsumeRankDataProto::~GlobalConsumeRankDataProto() {
  SharedDtor();
}

void GlobalConsumeRankDataProto::SharedDtor() {
  if (this != default_instance_) {
    delete finalprize_;
  }
}

void GlobalConsumeRankDataProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GlobalConsumeRankDataProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GlobalConsumeRankDataProto_descriptor_;
}

const GlobalConsumeRankDataProto& GlobalConsumeRankDataProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

GlobalConsumeRankDataProto* GlobalConsumeRankDataProto::default_instance_ = NULL;

GlobalConsumeRankDataProto* GlobalConsumeRankDataProto::New() const {
  return new GlobalConsumeRankDataProto;
}

void GlobalConsumeRankDataProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    last_rank_ = 0;
    if (has_finalprize()) {
      if (finalprize_ != NULL) finalprize_->::app::message::PrizeProto::Clear();
    }
    type_ = 0;
  }
  dailyprize_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GlobalConsumeRankDataProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 last_rank = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_rank_)));
          set_has_last_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_dailyPrize;
        break;
      }

      // repeated .app.message.PrizeProto dailyPrize = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_dailyPrize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dailyprize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_dailyPrize;
        if (input->ExpectTag(26)) goto parse_finalPrize;
        break;
      }

      // optional .app.message.PrizeProto finalPrize = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_finalPrize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_finalprize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_type;
        break;
      }

      // optional int32 type = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GlobalConsumeRankDataProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 last_rank = 1;
  if (has_last_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->last_rank(), output);
  }

  // repeated .app.message.PrizeProto dailyPrize = 2;
  for (int i = 0; i < this->dailyprize_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->dailyprize(i), output);
  }

  // optional .app.message.PrizeProto finalPrize = 3;
  if (has_finalprize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->finalprize(), output);
  }

  // optional int32 type = 4;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GlobalConsumeRankDataProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 last_rank = 1;
  if (has_last_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->last_rank(), target);
  }

  // repeated .app.message.PrizeProto dailyPrize = 2;
  for (int i = 0; i < this->dailyprize_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->dailyprize(i), target);
  }

  // optional .app.message.PrizeProto finalPrize = 3;
  if (has_finalprize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->finalprize(), target);
  }

  // optional int32 type = 4;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GlobalConsumeRankDataProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 last_rank = 1;
    if (has_last_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->last_rank());
    }

    // optional .app.message.PrizeProto finalPrize = 3;
    if (has_finalprize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->finalprize());
    }

    // optional int32 type = 4;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

  }
  // repeated .app.message.PrizeProto dailyPrize = 2;
  total_size += 1 * this->dailyprize_size();
  for (int i = 0; i < this->dailyprize_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dailyprize(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GlobalConsumeRankDataProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GlobalConsumeRankDataProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GlobalConsumeRankDataProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GlobalConsumeRankDataProto::MergeFrom(const GlobalConsumeRankDataProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  dailyprize_.MergeFrom(from.dailyprize_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_last_rank()) {
      set_last_rank(from.last_rank());
    }
    if (from.has_finalprize()) {
      mutable_finalprize()->::app::message::PrizeProto::MergeFrom(from.finalprize());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GlobalConsumeRankDataProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalConsumeRankDataProto::CopyFrom(const GlobalConsumeRankDataProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalConsumeRankDataProto::IsInitialized() const {

  return true;
}

void GlobalConsumeRankDataProto::Swap(GlobalConsumeRankDataProto* other) {
  if (other != this) {
    std::swap(last_rank_, other->last_rank_);
    dailyprize_.Swap(&other->dailyprize_);
    std::swap(finalprize_, other->finalprize_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GlobalConsumeRankDataProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GlobalConsumeRankDataProto_descriptor_;
  metadata.reflection = GlobalConsumeRankDataProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GlobalSelectImageDatasProto::kStartTimeFieldNumber;
const int GlobalSelectImageDatasProto::kEndTimeFieldNumber;
const int GlobalSelectImageDatasProto::kPageCountFieldNumber;
const int GlobalSelectImageDatasProto::kTotalPageFieldNumber;
const int GlobalSelectImageDatasProto::kDataFieldNumber;
const int GlobalSelectImageDatasProto::kCanSeeDaysAfterEndFieldNumber;
const int GlobalSelectImageDatasProto::kScorePrizeFieldNumber;
const int GlobalSelectImageDatasProto::kMinScoreFieldNumber;
const int GlobalSelectImageDatasProto::kResetYuanbaoCostFieldNumber;
const int GlobalSelectImageDatasProto::kTaskListFieldNumber;
#endif  // !_MSC_VER

GlobalSelectImageDatasProto::GlobalSelectImageDatasProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GlobalSelectImageDatasProto::InitAsDefaultInstance() {
  score_prize_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
}

GlobalSelectImageDatasProto::GlobalSelectImageDatasProto(const GlobalSelectImageDatasProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GlobalSelectImageDatasProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  page_count_ = 0;
  total_page_ = 0;
  can_see_days_after_end_ = 0;
  score_prize_ = NULL;
  min_score_ = 0;
  reset_yuanbao_cost_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GlobalSelectImageDatasProto::~GlobalSelectImageDatasProto() {
  SharedDtor();
}

void GlobalSelectImageDatasProto::SharedDtor() {
  if (this != default_instance_) {
    delete score_prize_;
  }
}

void GlobalSelectImageDatasProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GlobalSelectImageDatasProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GlobalSelectImageDatasProto_descriptor_;
}

const GlobalSelectImageDatasProto& GlobalSelectImageDatasProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

GlobalSelectImageDatasProto* GlobalSelectImageDatasProto::default_instance_ = NULL;

GlobalSelectImageDatasProto* GlobalSelectImageDatasProto::New() const {
  return new GlobalSelectImageDatasProto;
}

void GlobalSelectImageDatasProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    page_count_ = 0;
    total_page_ = 0;
    can_see_days_after_end_ = 0;
    if (has_score_prize()) {
      if (score_prize_ != NULL) score_prize_->::app::message::PrizeProto::Clear();
    }
    min_score_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    reset_yuanbao_cost_ = 0;
  }
  data_.Clear();
  task_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GlobalSelectImageDatasProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_page_count;
        break;
      }

      // optional int32 page_count = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_page_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_count_)));
          set_has_page_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_total_page;
        break;
      }

      // optional int32 total_page = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_page_)));
          set_has_total_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_data;
        break;
      }

      // repeated .app.message.GlobalSelectImageRankDataProto data = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_data;
        if (input->ExpectTag(48)) goto parse_can_see_days_after_end;
        break;
      }

      // optional int32 can_see_days_after_end = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_can_see_days_after_end:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &can_see_days_after_end_)));
          set_has_can_see_days_after_end();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_score_prize;
        break;
      }

      // optional .app.message.PrizeProto score_prize = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_score_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_score_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_min_score;
        break;
      }

      // optional int32 min_score = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_min_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &min_score_)));
          set_has_min_score();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_reset_yuanbao_cost;
        break;
      }

      // optional int32 reset_yuanbao_cost = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_reset_yuanbao_cost:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reset_yuanbao_cost_)));
          set_has_reset_yuanbao_cost();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_task_list;
        break;
      }

      // repeated .app.message.GlobalSelectImageRankTaskProto task_list = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_task_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_task_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_task_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GlobalSelectImageDatasProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // optional int32 page_count = 3;
  if (has_page_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_count(), output);
  }

  // optional int32 total_page = 4;
  if (has_total_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->total_page(), output);
  }

  // repeated .app.message.GlobalSelectImageRankDataProto data = 5;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->data(i), output);
  }

  // optional int32 can_see_days_after_end = 6;
  if (has_can_see_days_after_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->can_see_days_after_end(), output);
  }

  // optional .app.message.PrizeProto score_prize = 7;
  if (has_score_prize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->score_prize(), output);
  }

  // optional int32 min_score = 8;
  if (has_min_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->min_score(), output);
  }

  // optional int32 reset_yuanbao_cost = 9;
  if (has_reset_yuanbao_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->reset_yuanbao_cost(), output);
  }

  // repeated .app.message.GlobalSelectImageRankTaskProto task_list = 10;
  for (int i = 0; i < this->task_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->task_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GlobalSelectImageDatasProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // optional int32 page_count = 3;
  if (has_page_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_count(), target);
  }

  // optional int32 total_page = 4;
  if (has_total_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->total_page(), target);
  }

  // repeated .app.message.GlobalSelectImageRankDataProto data = 5;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->data(i), target);
  }

  // optional int32 can_see_days_after_end = 6;
  if (has_can_see_days_after_end()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->can_see_days_after_end(), target);
  }

  // optional .app.message.PrizeProto score_prize = 7;
  if (has_score_prize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->score_prize(), target);
  }

  // optional int32 min_score = 8;
  if (has_min_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->min_score(), target);
  }

  // optional int32 reset_yuanbao_cost = 9;
  if (has_reset_yuanbao_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->reset_yuanbao_cost(), target);
  }

  // repeated .app.message.GlobalSelectImageRankTaskProto task_list = 10;
  for (int i = 0; i < this->task_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->task_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GlobalSelectImageDatasProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional int32 page_count = 3;
    if (has_page_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page_count());
    }

    // optional int32 total_page = 4;
    if (has_total_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_page());
    }

    // optional int32 can_see_days_after_end = 6;
    if (has_can_see_days_after_end()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->can_see_days_after_end());
    }

    // optional .app.message.PrizeProto score_prize = 7;
    if (has_score_prize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->score_prize());
    }

    // optional int32 min_score = 8;
    if (has_min_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->min_score());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 reset_yuanbao_cost = 9;
    if (has_reset_yuanbao_cost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reset_yuanbao_cost());
    }

  }
  // repeated .app.message.GlobalSelectImageRankDataProto data = 5;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  // repeated .app.message.GlobalSelectImageRankTaskProto task_list = 10;
  total_size += 1 * this->task_list_size();
  for (int i = 0; i < this->task_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->task_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GlobalSelectImageDatasProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GlobalSelectImageDatasProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GlobalSelectImageDatasProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GlobalSelectImageDatasProto::MergeFrom(const GlobalSelectImageDatasProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  task_list_.MergeFrom(from.task_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_page_count()) {
      set_page_count(from.page_count());
    }
    if (from.has_total_page()) {
      set_total_page(from.total_page());
    }
    if (from.has_can_see_days_after_end()) {
      set_can_see_days_after_end(from.can_see_days_after_end());
    }
    if (from.has_score_prize()) {
      mutable_score_prize()->::app::message::PrizeProto::MergeFrom(from.score_prize());
    }
    if (from.has_min_score()) {
      set_min_score(from.min_score());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_reset_yuanbao_cost()) {
      set_reset_yuanbao_cost(from.reset_yuanbao_cost());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GlobalSelectImageDatasProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalSelectImageDatasProto::CopyFrom(const GlobalSelectImageDatasProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalSelectImageDatasProto::IsInitialized() const {

  return true;
}

void GlobalSelectImageDatasProto::Swap(GlobalSelectImageDatasProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    std::swap(page_count_, other->page_count_);
    std::swap(total_page_, other->total_page_);
    data_.Swap(&other->data_);
    std::swap(can_see_days_after_end_, other->can_see_days_after_end_);
    std::swap(score_prize_, other->score_prize_);
    std::swap(min_score_, other->min_score_);
    std::swap(reset_yuanbao_cost_, other->reset_yuanbao_cost_);
    task_list_.Swap(&other->task_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GlobalSelectImageDatasProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GlobalSelectImageDatasProto_descriptor_;
  metadata.reflection = GlobalSelectImageDatasProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GlobalSelectImageRankDataProto::kLastRankFieldNumber;
const int GlobalSelectImageRankDataProto::kFinalPrizeFieldNumber;
#endif  // !_MSC_VER

GlobalSelectImageRankDataProto::GlobalSelectImageRankDataProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GlobalSelectImageRankDataProto::InitAsDefaultInstance() {
  finalprize_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
}

GlobalSelectImageRankDataProto::GlobalSelectImageRankDataProto(const GlobalSelectImageRankDataProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GlobalSelectImageRankDataProto::SharedCtor() {
  _cached_size_ = 0;
  last_rank_ = 0;
  finalprize_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GlobalSelectImageRankDataProto::~GlobalSelectImageRankDataProto() {
  SharedDtor();
}

void GlobalSelectImageRankDataProto::SharedDtor() {
  if (this != default_instance_) {
    delete finalprize_;
  }
}

void GlobalSelectImageRankDataProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GlobalSelectImageRankDataProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GlobalSelectImageRankDataProto_descriptor_;
}

const GlobalSelectImageRankDataProto& GlobalSelectImageRankDataProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

GlobalSelectImageRankDataProto* GlobalSelectImageRankDataProto::default_instance_ = NULL;

GlobalSelectImageRankDataProto* GlobalSelectImageRankDataProto::New() const {
  return new GlobalSelectImageRankDataProto;
}

void GlobalSelectImageRankDataProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    last_rank_ = 0;
    if (has_finalprize()) {
      if (finalprize_ != NULL) finalprize_->::app::message::PrizeProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GlobalSelectImageRankDataProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 last_rank = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_rank_)));
          set_has_last_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_finalPrize;
        break;
      }

      // optional .app.message.PrizeProto finalPrize = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_finalPrize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_finalprize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GlobalSelectImageRankDataProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 last_rank = 1;
  if (has_last_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->last_rank(), output);
  }

  // optional .app.message.PrizeProto finalPrize = 2;
  if (has_finalprize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->finalprize(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GlobalSelectImageRankDataProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 last_rank = 1;
  if (has_last_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->last_rank(), target);
  }

  // optional .app.message.PrizeProto finalPrize = 2;
  if (has_finalprize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->finalprize(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GlobalSelectImageRankDataProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 last_rank = 1;
    if (has_last_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->last_rank());
    }

    // optional .app.message.PrizeProto finalPrize = 2;
    if (has_finalprize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->finalprize());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GlobalSelectImageRankDataProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GlobalSelectImageRankDataProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GlobalSelectImageRankDataProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GlobalSelectImageRankDataProto::MergeFrom(const GlobalSelectImageRankDataProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_last_rank()) {
      set_last_rank(from.last_rank());
    }
    if (from.has_finalprize()) {
      mutable_finalprize()->::app::message::PrizeProto::MergeFrom(from.finalprize());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GlobalSelectImageRankDataProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalSelectImageRankDataProto::CopyFrom(const GlobalSelectImageRankDataProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalSelectImageRankDataProto::IsInitialized() const {

  return true;
}

void GlobalSelectImageRankDataProto::Swap(GlobalSelectImageRankDataProto* other) {
  if (other != this) {
    std::swap(last_rank_, other->last_rank_);
    std::swap(finalprize_, other->finalprize_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GlobalSelectImageRankDataProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GlobalSelectImageRankDataProto_descriptor_;
  metadata.reflection = GlobalSelectImageRankDataProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GlobalSelectImageRankTaskProto::kOrderIdFieldNumber;
const int GlobalSelectImageRankTaskProto::kImageAFieldNumber;
const int GlobalSelectImageRankTaskProto::kImageBFieldNumber;
const int GlobalSelectImageRankTaskProto::kTimeLimtFieldNumber;
const int GlobalSelectImageRankTaskProto::kScoreFieldNumber;
#endif  // !_MSC_VER

GlobalSelectImageRankTaskProto::GlobalSelectImageRankTaskProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GlobalSelectImageRankTaskProto::InitAsDefaultInstance() {
}

GlobalSelectImageRankTaskProto::GlobalSelectImageRankTaskProto(const GlobalSelectImageRankTaskProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GlobalSelectImageRankTaskProto::SharedCtor() {
  _cached_size_ = 0;
  order_id_ = 0;
  image_a_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  image_b_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  time_limt_ = 0;
  score_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GlobalSelectImageRankTaskProto::~GlobalSelectImageRankTaskProto() {
  SharedDtor();
}

void GlobalSelectImageRankTaskProto::SharedDtor() {
  if (image_a_ != &::google::protobuf::internal::kEmptyString) {
    delete image_a_;
  }
  if (image_b_ != &::google::protobuf::internal::kEmptyString) {
    delete image_b_;
  }
  if (this != default_instance_) {
  }
}

void GlobalSelectImageRankTaskProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GlobalSelectImageRankTaskProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GlobalSelectImageRankTaskProto_descriptor_;
}

const GlobalSelectImageRankTaskProto& GlobalSelectImageRankTaskProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

GlobalSelectImageRankTaskProto* GlobalSelectImageRankTaskProto::default_instance_ = NULL;

GlobalSelectImageRankTaskProto* GlobalSelectImageRankTaskProto::New() const {
  return new GlobalSelectImageRankTaskProto;
}

void GlobalSelectImageRankTaskProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    order_id_ = 0;
    if (has_image_a()) {
      if (image_a_ != &::google::protobuf::internal::kEmptyString) {
        image_a_->clear();
      }
    }
    if (has_image_b()) {
      if (image_b_ != &::google::protobuf::internal::kEmptyString) {
        image_b_->clear();
      }
    }
    time_limt_ = 0;
    score_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GlobalSelectImageRankTaskProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 order_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &order_id_)));
          set_has_order_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_image_a;
        break;
      }

      // optional string image_a = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_image_a:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image_a()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->image_a().data(), this->image_a().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_image_b;
        break;
      }

      // optional string image_b = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_image_b:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image_b()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->image_b().data(), this->image_b().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_time_limt;
        break;
      }

      // optional int32 time_limt = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_time_limt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_limt_)));
          set_has_time_limt();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_score;
        break;
      }

      // optional int32 score = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_score:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &score_)));
          set_has_score();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GlobalSelectImageRankTaskProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 order_id = 1;
  if (has_order_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->order_id(), output);
  }

  // optional string image_a = 2;
  if (has_image_a()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->image_a().data(), this->image_a().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->image_a(), output);
  }

  // optional string image_b = 3;
  if (has_image_b()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->image_b().data(), this->image_b().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->image_b(), output);
  }

  // optional int32 time_limt = 4;
  if (has_time_limt()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->time_limt(), output);
  }

  // optional int32 score = 5;
  if (has_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->score(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GlobalSelectImageRankTaskProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 order_id = 1;
  if (has_order_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->order_id(), target);
  }

  // optional string image_a = 2;
  if (has_image_a()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->image_a().data(), this->image_a().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->image_a(), target);
  }

  // optional string image_b = 3;
  if (has_image_b()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->image_b().data(), this->image_b().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->image_b(), target);
  }

  // optional int32 time_limt = 4;
  if (has_time_limt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->time_limt(), target);
  }

  // optional int32 score = 5;
  if (has_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->score(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GlobalSelectImageRankTaskProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 order_id = 1;
    if (has_order_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->order_id());
    }

    // optional string image_a = 2;
    if (has_image_a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->image_a());
    }

    // optional string image_b = 3;
    if (has_image_b()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->image_b());
    }

    // optional int32 time_limt = 4;
    if (has_time_limt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->time_limt());
    }

    // optional int32 score = 5;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->score());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GlobalSelectImageRankTaskProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GlobalSelectImageRankTaskProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GlobalSelectImageRankTaskProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GlobalSelectImageRankTaskProto::MergeFrom(const GlobalSelectImageRankTaskProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_order_id()) {
      set_order_id(from.order_id());
    }
    if (from.has_image_a()) {
      set_image_a(from.image_a());
    }
    if (from.has_image_b()) {
      set_image_b(from.image_b());
    }
    if (from.has_time_limt()) {
      set_time_limt(from.time_limt());
    }
    if (from.has_score()) {
      set_score(from.score());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GlobalSelectImageRankTaskProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalSelectImageRankTaskProto::CopyFrom(const GlobalSelectImageRankTaskProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalSelectImageRankTaskProto::IsInitialized() const {

  return true;
}

void GlobalSelectImageRankTaskProto::Swap(GlobalSelectImageRankTaskProto* other) {
  if (other != this) {
    std::swap(order_id_, other->order_id_);
    std::swap(image_a_, other->image_a_);
    std::swap(image_b_, other->image_b_);
    std::swap(time_limt_, other->time_limt_);
    std::swap(score_, other->score_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GlobalSelectImageRankTaskProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GlobalSelectImageRankTaskProto_descriptor_;
  metadata.reflection = GlobalSelectImageRankTaskProto_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType_descriptor_;
}
bool GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType GlobalChargeFightAmountRankDataProto::MOUNT;
const GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType GlobalChargeFightAmountRankDataProto::TIAN_JIE;
const GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType GlobalChargeFightAmountRankDataProto::TIAN_ZUI;
const GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType GlobalChargeFightAmountRankDataProto::ZHAN_JIA;
const GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType GlobalChargeFightAmountRankDataProto::SUPER_ARM;
const GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType GlobalChargeFightAmountRankDataProto::DEMON;
const GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType GlobalChargeFightAmountRankDataProto::CLOAK;
const GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType GlobalChargeFightAmountRankDataProto::MOSHI_0;
const GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType GlobalChargeFightAmountRankDataProto::MOSHI_1;
const GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType GlobalChargeFightAmountRankDataProto::MOSHI_2;
const GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType GlobalChargeFightAmountRankDataProto::MOSHI_3;
const GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType GlobalChargeFightAmountRankDataProto::QIAN_QIU_DA_JIE_0;
const GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType GlobalChargeFightAmountRankDataProto::QIAN_QIU_DA_JIE_1;
const GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType GlobalChargeFightAmountRankDataProto::CHI_HUO_SHEN_GONG;
const GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType GlobalChargeFightAmountRankDataProto::SUPER_WEAPON;
const GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType GlobalChargeFightAmountRankDataProto::SPELL;
const GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType GlobalChargeFightAmountRankDataProto::SHOU_CANG;
const GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType GlobalChargeFightAmountRankDataProto::TIAN_XIE;
const GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType GlobalChargeFightAmountRankDataProto::MO_BING;
const GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType GlobalChargeFightAmountRankDataProto::WU_DAO;
const GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType GlobalChargeFightAmountRankDataProto::SHIELD;
const GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType GlobalChargeFightAmountRankDataProto::QIAN_QIU_DA_JIE;
const GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType GlobalChargeFightAmountRankDataProto::SHIELD_1;
const GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType GlobalChargeFightAmountRankDataProto::SHIELD_2;
const GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType GlobalChargeFightAmountRankDataProto::SHIELD_3;
const GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType GlobalChargeFightAmountRankDataProto::SHIELD_4;
const GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType GlobalChargeFightAmountRankDataProto::SHIELD_5;
const GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType GlobalChargeFightAmountRankDataProto::SHIELD_6;
const GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType GlobalChargeFightAmountRankDataProto::SHIELD_7;
const GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType GlobalChargeFightAmountRankDataProto::SHIELD_8;
const GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType GlobalChargeFightAmountRankDataProto::SHIELD_9;
const GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType GlobalChargeFightAmountRankDataProto::SHIELD_10;
const GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType GlobalChargeFightAmountRankDataProto::LING_YU;
const GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType GlobalChargeFightAmountRankDataProto::MO_FANG;
const GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType GlobalChargeFightAmountRankDataProto::GlobalChargeFightAmountRankProtoType_MIN;
const GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType GlobalChargeFightAmountRankDataProto::GlobalChargeFightAmountRankProtoType_MAX;
const int GlobalChargeFightAmountRankDataProto::GlobalChargeFightAmountRankProtoType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int GlobalChargeFightAmountRankDataProto::kStartTimeFieldNumber;
const int GlobalChargeFightAmountRankDataProto::kEndTimeFieldNumber;
const int GlobalChargeFightAmountRankDataProto::kPageCountFieldNumber;
const int GlobalChargeFightAmountRankDataProto::kTotalPageFieldNumber;
const int GlobalChargeFightAmountRankDataProto::kTypeFieldNumber;
const int GlobalChargeFightAmountRankDataProto::kBackgroundFieldNumber;
const int GlobalChargeFightAmountRankDataProto::kMinLevelFieldNumber;
const int GlobalChargeFightAmountRankDataProto::kUpgradeGoodsFieldNumber;
const int GlobalChargeFightAmountRankDataProto::kPrizesFieldNumber;
#endif  // !_MSC_VER

GlobalChargeFightAmountRankDataProto::GlobalChargeFightAmountRankDataProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GlobalChargeFightAmountRankDataProto::InitAsDefaultInstance() {
}

GlobalChargeFightAmountRankDataProto::GlobalChargeFightAmountRankDataProto(const GlobalChargeFightAmountRankDataProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GlobalChargeFightAmountRankDataProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  page_count_ = 0;
  total_page_ = 0;
  type_ = 1;
  background_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  min_level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GlobalChargeFightAmountRankDataProto::~GlobalChargeFightAmountRankDataProto() {
  SharedDtor();
}

void GlobalChargeFightAmountRankDataProto::SharedDtor() {
  if (background_ != &::google::protobuf::internal::kEmptyString) {
    delete background_;
  }
  if (this != default_instance_) {
  }
}

void GlobalChargeFightAmountRankDataProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GlobalChargeFightAmountRankDataProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GlobalChargeFightAmountRankDataProto_descriptor_;
}

const GlobalChargeFightAmountRankDataProto& GlobalChargeFightAmountRankDataProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

GlobalChargeFightAmountRankDataProto* GlobalChargeFightAmountRankDataProto::default_instance_ = NULL;

GlobalChargeFightAmountRankDataProto* GlobalChargeFightAmountRankDataProto::New() const {
  return new GlobalChargeFightAmountRankDataProto;
}

void GlobalChargeFightAmountRankDataProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    page_count_ = 0;
    total_page_ = 0;
    type_ = 1;
    if (has_background()) {
      if (background_ != &::google::protobuf::internal::kEmptyString) {
        background_->clear();
      }
    }
    min_level_ = 0;
  }
  upgradegoods_.Clear();
  prizes_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GlobalChargeFightAmountRankDataProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_page_count;
        break;
      }

      // optional int32 page_count = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_page_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_count_)));
          set_has_page_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_total_page;
        break;
      }

      // optional int32 total_page = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_page_)));
          set_has_total_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_type;
        break;
      }

      // optional .app.message.GlobalChargeFightAmountRankDataProto.GlobalChargeFightAmountRankProtoType type = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::app::message::GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType_IsValid(value)) {
            set_type(static_cast< ::app::message::GlobalChargeFightAmountRankDataProto_GlobalChargeFightAmountRankProtoType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_background;
        break;
      }

      // optional string background = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_background:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_background()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->background().data(), this->background().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_min_level;
        break;
      }

      // optional int32 min_level = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_min_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &min_level_)));
          set_has_min_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_upgradeGoods;
        break;
      }

      // repeated .app.message.GoodsDataProto upgradeGoods = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_upgradeGoods:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_upgradegoods()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_upgradeGoods;
        if (input->ExpectTag(74)) goto parse_prizes;
        break;
      }

      // repeated .app.message.GlobalChargeFightAmountRankPrizeProto prizes = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prizes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_prizes()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_prizes;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GlobalChargeFightAmountRankDataProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // optional int32 page_count = 3;
  if (has_page_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_count(), output);
  }

  // optional int32 total_page = 4;
  if (has_total_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->total_page(), output);
  }

  // optional .app.message.GlobalChargeFightAmountRankDataProto.GlobalChargeFightAmountRankProtoType type = 5;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->type(), output);
  }

  // optional string background = 6;
  if (has_background()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->background().data(), this->background().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->background(), output);
  }

  // optional int32 min_level = 7;
  if (has_min_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->min_level(), output);
  }

  // repeated .app.message.GoodsDataProto upgradeGoods = 8;
  for (int i = 0; i < this->upgradegoods_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->upgradegoods(i), output);
  }

  // repeated .app.message.GlobalChargeFightAmountRankPrizeProto prizes = 9;
  for (int i = 0; i < this->prizes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->prizes(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GlobalChargeFightAmountRankDataProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // optional int32 page_count = 3;
  if (has_page_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_count(), target);
  }

  // optional int32 total_page = 4;
  if (has_total_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->total_page(), target);
  }

  // optional .app.message.GlobalChargeFightAmountRankDataProto.GlobalChargeFightAmountRankProtoType type = 5;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->type(), target);
  }

  // optional string background = 6;
  if (has_background()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->background().data(), this->background().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->background(), target);
  }

  // optional int32 min_level = 7;
  if (has_min_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->min_level(), target);
  }

  // repeated .app.message.GoodsDataProto upgradeGoods = 8;
  for (int i = 0; i < this->upgradegoods_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->upgradegoods(i), target);
  }

  // repeated .app.message.GlobalChargeFightAmountRankPrizeProto prizes = 9;
  for (int i = 0; i < this->prizes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->prizes(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GlobalChargeFightAmountRankDataProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional int32 page_count = 3;
    if (has_page_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page_count());
    }

    // optional int32 total_page = 4;
    if (has_total_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_page());
    }

    // optional .app.message.GlobalChargeFightAmountRankDataProto.GlobalChargeFightAmountRankProtoType type = 5;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional string background = 6;
    if (has_background()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->background());
    }

    // optional int32 min_level = 7;
    if (has_min_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->min_level());
    }

  }
  // repeated .app.message.GoodsDataProto upgradeGoods = 8;
  total_size += 1 * this->upgradegoods_size();
  for (int i = 0; i < this->upgradegoods_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->upgradegoods(i));
  }

  // repeated .app.message.GlobalChargeFightAmountRankPrizeProto prizes = 9;
  total_size += 1 * this->prizes_size();
  for (int i = 0; i < this->prizes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->prizes(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GlobalChargeFightAmountRankDataProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GlobalChargeFightAmountRankDataProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GlobalChargeFightAmountRankDataProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GlobalChargeFightAmountRankDataProto::MergeFrom(const GlobalChargeFightAmountRankDataProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  upgradegoods_.MergeFrom(from.upgradegoods_);
  prizes_.MergeFrom(from.prizes_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_page_count()) {
      set_page_count(from.page_count());
    }
    if (from.has_total_page()) {
      set_total_page(from.total_page());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_background()) {
      set_background(from.background());
    }
    if (from.has_min_level()) {
      set_min_level(from.min_level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GlobalChargeFightAmountRankDataProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalChargeFightAmountRankDataProto::CopyFrom(const GlobalChargeFightAmountRankDataProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalChargeFightAmountRankDataProto::IsInitialized() const {

  return true;
}

void GlobalChargeFightAmountRankDataProto::Swap(GlobalChargeFightAmountRankDataProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    std::swap(page_count_, other->page_count_);
    std::swap(total_page_, other->total_page_);
    std::swap(type_, other->type_);
    std::swap(background_, other->background_);
    std::swap(min_level_, other->min_level_);
    upgradegoods_.Swap(&other->upgradegoods_);
    prizes_.Swap(&other->prizes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GlobalChargeFightAmountRankDataProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GlobalChargeFightAmountRankDataProto_descriptor_;
  metadata.reflection = GlobalChargeFightAmountRankDataProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GlobalChargeFightAmountRankPrizeProto::kLastRankFieldNumber;
const int GlobalChargeFightAmountRankPrizeProto::kPrizeFieldNumber;
#endif  // !_MSC_VER

GlobalChargeFightAmountRankPrizeProto::GlobalChargeFightAmountRankPrizeProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GlobalChargeFightAmountRankPrizeProto::InitAsDefaultInstance() {
  prize_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
}

GlobalChargeFightAmountRankPrizeProto::GlobalChargeFightAmountRankPrizeProto(const GlobalChargeFightAmountRankPrizeProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GlobalChargeFightAmountRankPrizeProto::SharedCtor() {
  _cached_size_ = 0;
  last_rank_ = 0;
  prize_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GlobalChargeFightAmountRankPrizeProto::~GlobalChargeFightAmountRankPrizeProto() {
  SharedDtor();
}

void GlobalChargeFightAmountRankPrizeProto::SharedDtor() {
  if (this != default_instance_) {
    delete prize_;
  }
}

void GlobalChargeFightAmountRankPrizeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GlobalChargeFightAmountRankPrizeProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GlobalChargeFightAmountRankPrizeProto_descriptor_;
}

const GlobalChargeFightAmountRankPrizeProto& GlobalChargeFightAmountRankPrizeProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

GlobalChargeFightAmountRankPrizeProto* GlobalChargeFightAmountRankPrizeProto::default_instance_ = NULL;

GlobalChargeFightAmountRankPrizeProto* GlobalChargeFightAmountRankPrizeProto::New() const {
  return new GlobalChargeFightAmountRankPrizeProto;
}

void GlobalChargeFightAmountRankPrizeProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    last_rank_ = 0;
    if (has_prize()) {
      if (prize_ != NULL) prize_->::app::message::PrizeProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GlobalChargeFightAmountRankPrizeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 last_rank = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_rank_)));
          set_has_last_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_prize;
        break;
      }

      // optional .app.message.PrizeProto prize = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GlobalChargeFightAmountRankPrizeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 last_rank = 1;
  if (has_last_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->last_rank(), output);
  }

  // optional .app.message.PrizeProto prize = 2;
  if (has_prize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->prize(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GlobalChargeFightAmountRankPrizeProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 last_rank = 1;
  if (has_last_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->last_rank(), target);
  }

  // optional .app.message.PrizeProto prize = 2;
  if (has_prize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->prize(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GlobalChargeFightAmountRankPrizeProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 last_rank = 1;
    if (has_last_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->last_rank());
    }

    // optional .app.message.PrizeProto prize = 2;
    if (has_prize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prize());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GlobalChargeFightAmountRankPrizeProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GlobalChargeFightAmountRankPrizeProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GlobalChargeFightAmountRankPrizeProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GlobalChargeFightAmountRankPrizeProto::MergeFrom(const GlobalChargeFightAmountRankPrizeProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_last_rank()) {
      set_last_rank(from.last_rank());
    }
    if (from.has_prize()) {
      mutable_prize()->::app::message::PrizeProto::MergeFrom(from.prize());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GlobalChargeFightAmountRankPrizeProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalChargeFightAmountRankPrizeProto::CopyFrom(const GlobalChargeFightAmountRankPrizeProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalChargeFightAmountRankPrizeProto::IsInitialized() const {

  return true;
}

void GlobalChargeFightAmountRankPrizeProto::Swap(GlobalChargeFightAmountRankPrizeProto* other) {
  if (other != this) {
    std::swap(last_rank_, other->last_rank_);
    std::swap(prize_, other->prize_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GlobalChargeFightAmountRankPrizeProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GlobalChargeFightAmountRankPrizeProto_descriptor_;
  metadata.reflection = GlobalChargeFightAmountRankPrizeProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NewServerRechargeRankDatasProto::kStartTimeFieldNumber;
const int NewServerRechargeRankDatasProto::kEndTimeFieldNumber;
const int NewServerRechargeRankDatasProto::kDataFieldNumber;
const int NewServerRechargeRankDatasProto::kDailyMinRechargeFieldNumber;
#endif  // !_MSC_VER

NewServerRechargeRankDatasProto::NewServerRechargeRankDatasProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NewServerRechargeRankDatasProto::InitAsDefaultInstance() {
}

NewServerRechargeRankDatasProto::NewServerRechargeRankDatasProto(const NewServerRechargeRankDatasProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NewServerRechargeRankDatasProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  daily_min_recharge_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NewServerRechargeRankDatasProto::~NewServerRechargeRankDatasProto() {
  SharedDtor();
}

void NewServerRechargeRankDatasProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NewServerRechargeRankDatasProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewServerRechargeRankDatasProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NewServerRechargeRankDatasProto_descriptor_;
}

const NewServerRechargeRankDatasProto& NewServerRechargeRankDatasProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

NewServerRechargeRankDatasProto* NewServerRechargeRankDatasProto::default_instance_ = NULL;

NewServerRechargeRankDatasProto* NewServerRechargeRankDatasProto::New() const {
  return new NewServerRechargeRankDatasProto;
}

void NewServerRechargeRankDatasProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    daily_min_recharge_ = 0;
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NewServerRechargeRankDatasProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_data;
        break;
      }

      // repeated .app.message.NewServerRechargeRankDataProto data = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_data;
        if (input->ExpectTag(56)) goto parse_daily_min_recharge;
        break;
      }

      // optional int32 daily_min_recharge = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_daily_min_recharge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &daily_min_recharge_)));
          set_has_daily_min_recharge();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void NewServerRechargeRankDatasProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // repeated .app.message.NewServerRechargeRankDataProto data = 5;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->data(i), output);
  }

  // optional int32 daily_min_recharge = 7;
  if (has_daily_min_recharge()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->daily_min_recharge(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NewServerRechargeRankDatasProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // repeated .app.message.NewServerRechargeRankDataProto data = 5;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->data(i), target);
  }

  // optional int32 daily_min_recharge = 7;
  if (has_daily_min_recharge()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->daily_min_recharge(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NewServerRechargeRankDatasProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional int32 daily_min_recharge = 7;
    if (has_daily_min_recharge()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->daily_min_recharge());
    }

  }
  // repeated .app.message.NewServerRechargeRankDataProto data = 5;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewServerRechargeRankDatasProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NewServerRechargeRankDatasProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NewServerRechargeRankDatasProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NewServerRechargeRankDatasProto::MergeFrom(const NewServerRechargeRankDatasProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_daily_min_recharge()) {
      set_daily_min_recharge(from.daily_min_recharge());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NewServerRechargeRankDatasProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewServerRechargeRankDatasProto::CopyFrom(const NewServerRechargeRankDatasProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewServerRechargeRankDatasProto::IsInitialized() const {

  return true;
}

void NewServerRechargeRankDatasProto::Swap(NewServerRechargeRankDatasProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    data_.Swap(&other->data_);
    std::swap(daily_min_recharge_, other->daily_min_recharge_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NewServerRechargeRankDatasProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NewServerRechargeRankDatasProto_descriptor_;
  metadata.reflection = NewServerRechargeRankDatasProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NewServerRechargeRankDataProto::kLastRankFieldNumber;
const int NewServerRechargeRankDataProto::kDailyPrizeFieldNumber;
#endif  // !_MSC_VER

NewServerRechargeRankDataProto::NewServerRechargeRankDataProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NewServerRechargeRankDataProto::InitAsDefaultInstance() {
  dailyprize_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
}

NewServerRechargeRankDataProto::NewServerRechargeRankDataProto(const NewServerRechargeRankDataProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NewServerRechargeRankDataProto::SharedCtor() {
  _cached_size_ = 0;
  last_rank_ = 0;
  dailyprize_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NewServerRechargeRankDataProto::~NewServerRechargeRankDataProto() {
  SharedDtor();
}

void NewServerRechargeRankDataProto::SharedDtor() {
  if (this != default_instance_) {
    delete dailyprize_;
  }
}

void NewServerRechargeRankDataProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewServerRechargeRankDataProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NewServerRechargeRankDataProto_descriptor_;
}

const NewServerRechargeRankDataProto& NewServerRechargeRankDataProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

NewServerRechargeRankDataProto* NewServerRechargeRankDataProto::default_instance_ = NULL;

NewServerRechargeRankDataProto* NewServerRechargeRankDataProto::New() const {
  return new NewServerRechargeRankDataProto;
}

void NewServerRechargeRankDataProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    last_rank_ = 0;
    if (has_dailyprize()) {
      if (dailyprize_ != NULL) dailyprize_->::app::message::PrizeProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NewServerRechargeRankDataProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 last_rank = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_rank_)));
          set_has_last_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_dailyPrize;
        break;
      }

      // optional .app.message.PrizeProto dailyPrize = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_dailyPrize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dailyprize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void NewServerRechargeRankDataProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 last_rank = 1;
  if (has_last_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->last_rank(), output);
  }

  // optional .app.message.PrizeProto dailyPrize = 2;
  if (has_dailyprize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->dailyprize(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NewServerRechargeRankDataProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 last_rank = 1;
  if (has_last_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->last_rank(), target);
  }

  // optional .app.message.PrizeProto dailyPrize = 2;
  if (has_dailyprize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->dailyprize(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NewServerRechargeRankDataProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 last_rank = 1;
    if (has_last_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->last_rank());
    }

    // optional .app.message.PrizeProto dailyPrize = 2;
    if (has_dailyprize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dailyprize());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewServerRechargeRankDataProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NewServerRechargeRankDataProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NewServerRechargeRankDataProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NewServerRechargeRankDataProto::MergeFrom(const NewServerRechargeRankDataProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_last_rank()) {
      set_last_rank(from.last_rank());
    }
    if (from.has_dailyprize()) {
      mutable_dailyprize()->::app::message::PrizeProto::MergeFrom(from.dailyprize());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NewServerRechargeRankDataProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewServerRechargeRankDataProto::CopyFrom(const NewServerRechargeRankDataProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewServerRechargeRankDataProto::IsInitialized() const {

  return true;
}

void NewServerRechargeRankDataProto::Swap(NewServerRechargeRankDataProto* other) {
  if (other != this) {
    std::swap(last_rank_, other->last_rank_);
    std::swap(dailyprize_, other->dailyprize_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NewServerRechargeRankDataProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NewServerRechargeRankDataProto_descriptor_;
  metadata.reflection = NewServerRechargeRankDataProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TuHaoDatasProto::kStartTimeFieldNumber;
const int TuHaoDatasProto::kEndTimeFieldNumber;
const int TuHaoDatasProto::kDataFieldNumber;
#endif  // !_MSC_VER

TuHaoDatasProto::TuHaoDatasProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TuHaoDatasProto::InitAsDefaultInstance() {
}

TuHaoDatasProto::TuHaoDatasProto(const TuHaoDatasProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TuHaoDatasProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TuHaoDatasProto::~TuHaoDatasProto() {
  SharedDtor();
}

void TuHaoDatasProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TuHaoDatasProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TuHaoDatasProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TuHaoDatasProto_descriptor_;
}

const TuHaoDatasProto& TuHaoDatasProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

TuHaoDatasProto* TuHaoDatasProto::default_instance_ = NULL;

TuHaoDatasProto* TuHaoDatasProto::New() const {
  return new TuHaoDatasProto;
}

void TuHaoDatasProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TuHaoDatasProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_data;
        break;
      }

      // repeated .app.message.TuHaoDataProto data = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TuHaoDatasProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // repeated .app.message.TuHaoDataProto data = 3;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TuHaoDatasProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // repeated .app.message.TuHaoDataProto data = 3;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TuHaoDatasProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

  }
  // repeated .app.message.TuHaoDataProto data = 3;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TuHaoDatasProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TuHaoDatasProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TuHaoDatasProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TuHaoDatasProto::MergeFrom(const TuHaoDatasProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TuHaoDatasProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TuHaoDatasProto::CopyFrom(const TuHaoDatasProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TuHaoDatasProto::IsInitialized() const {

  return true;
}

void TuHaoDatasProto::Swap(TuHaoDatasProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TuHaoDatasProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TuHaoDatasProto_descriptor_;
  metadata.reflection = TuHaoDatasProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TuHaoDataProto::kNameFieldNumber;
const int TuHaoDataProto::kPrizeFieldNumber;
const int TuHaoDataProto::kRequiredAccRechargeFieldNumber;
const int TuHaoDataProto::kRequiredMountLevelFieldNumber;
const int TuHaoDataProto::kRequiredTianZuiLevelFieldNumber;
const int TuHaoDataProto::kRequiredTianJieLevelFieldNumber;
const int TuHaoDataProto::kRequiredBowLevelFieldNumber;
const int TuHaoDataProto::kRequiredSuperArmLevelFieldNumber;
const int TuHaoDataProto::kRequiredDemonLevelFieldNumber;
const int TuHaoDataProto::kRequiredCloakLevelFieldNumber;
const int TuHaoDataProto::kRequiredVipLevelFieldNumber;
const int TuHaoDataProto::kRequiredLastRechargeFieldNumber;
const int TuHaoDataProto::kDescFieldNumber;
const int TuHaoDataProto::kRequiredMoShiTotalLevelFieldNumber;
const int TuHaoDataProto::kRequiredQianQiuDaJieTotalLevelFieldNumber;
const int TuHaoDataProto::kRequiredMoShiHeiHanLevelFieldNumber;
const int TuHaoDataProto::kRequiredMoShiBingPoLevelFieldNumber;
const int TuHaoDataProto::kRequiredMoShiBaiLuLevelFieldNumber;
const int TuHaoDataProto::kRequiredMoShiBuTianLevelFieldNumber;
const int TuHaoDataProto::kRequiredQianQiuJianLevelFieldNumber;
const int TuHaoDataProto::kRequiredDaJieDaoLevelFieldNumber;
const int TuHaoDataProto::kRequiredChihuoshenggongLevelFieldNumber;
const int TuHaoDataProto::kRequiredTianxiezhanjianLevelFieldNumber;
const int TuHaoDataProto::kRequiredWudaoLevelFieldNumber;
const int TuHaoDataProto::kRequiredShield1LevelFieldNumber;
#endif  // !_MSC_VER

TuHaoDataProto::TuHaoDataProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TuHaoDataProto::InitAsDefaultInstance() {
  prize_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
}

TuHaoDataProto::TuHaoDataProto(const TuHaoDataProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TuHaoDataProto::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  prize_ = NULL;
  required_acc_recharge_ = 0;
  required_mount_level_ = 0;
  required_tian_zui_level_ = 0;
  required_tian_jie_level_ = 0;
  required_bow_level_ = 0;
  required_super_arm_level_ = 0;
  required_demon_level_ = 0;
  required_cloak_level_ = 0;
  required_vip_level_ = 0;
  required_last_recharge_ = false;
  desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  required_mo_shi_total_level_ = 0;
  required_qian_qiu_da_jie_total_level_ = 0;
  required_mo_shi_hei_han_level_ = 0;
  required_mo_shi_bing_po_level_ = 0;
  required_mo_shi_bai_lu_level_ = 0;
  required_mo_shi_bu_tian_level_ = 0;
  required_qian_qiu_jian_level_ = 0;
  required_da_jie_dao_level_ = 0;
  required_chihuoshenggong_level_ = 0;
  required_tianxiezhanjian_level_ = 0;
  required_wudao_level_ = 0;
  required_shield_1_level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TuHaoDataProto::~TuHaoDataProto() {
  SharedDtor();
}

void TuHaoDataProto::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (desc_ != &::google::protobuf::internal::kEmptyString) {
    delete desc_;
  }
  if (this != default_instance_) {
    delete prize_;
  }
}

void TuHaoDataProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TuHaoDataProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TuHaoDataProto_descriptor_;
}

const TuHaoDataProto& TuHaoDataProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

TuHaoDataProto* TuHaoDataProto::default_instance_ = NULL;

TuHaoDataProto* TuHaoDataProto::New() const {
  return new TuHaoDataProto;
}

void TuHaoDataProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_prize()) {
      if (prize_ != NULL) prize_->::app::message::PrizeProto::Clear();
    }
    required_acc_recharge_ = 0;
    required_mount_level_ = 0;
    required_tian_zui_level_ = 0;
    required_tian_jie_level_ = 0;
    required_bow_level_ = 0;
    required_super_arm_level_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    required_demon_level_ = 0;
    required_cloak_level_ = 0;
    required_vip_level_ = 0;
    required_last_recharge_ = false;
    if (has_desc()) {
      if (desc_ != &::google::protobuf::internal::kEmptyString) {
        desc_->clear();
      }
    }
    required_mo_shi_total_level_ = 0;
    required_qian_qiu_da_jie_total_level_ = 0;
    required_mo_shi_hei_han_level_ = 0;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    required_mo_shi_bing_po_level_ = 0;
    required_mo_shi_bai_lu_level_ = 0;
    required_mo_shi_bu_tian_level_ = 0;
    required_qian_qiu_jian_level_ = 0;
    required_da_jie_dao_level_ = 0;
    required_chihuoshenggong_level_ = 0;
    required_tianxiezhanjian_level_ = 0;
    required_wudao_level_ = 0;
  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    required_shield_1_level_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TuHaoDataProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_prize;
        break;
      }

      // optional .app.message.PrizeProto prize = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_required_acc_recharge;
        break;
      }

      // optional int32 required_acc_recharge = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_required_acc_recharge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &required_acc_recharge_)));
          set_has_required_acc_recharge();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_required_mount_level;
        break;
      }

      // optional int32 required_mount_level = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_required_mount_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &required_mount_level_)));
          set_has_required_mount_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_required_tian_zui_level;
        break;
      }

      // optional int32 required_tian_zui_level = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_required_tian_zui_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &required_tian_zui_level_)));
          set_has_required_tian_zui_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_required_tian_jie_level;
        break;
      }

      // optional int32 required_tian_jie_level = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_required_tian_jie_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &required_tian_jie_level_)));
          set_has_required_tian_jie_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_required_bow_level;
        break;
      }

      // optional int32 required_bow_level = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_required_bow_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &required_bow_level_)));
          set_has_required_bow_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_required_super_arm_level;
        break;
      }

      // optional int32 required_super_arm_level = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_required_super_arm_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &required_super_arm_level_)));
          set_has_required_super_arm_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_required_demon_level;
        break;
      }

      // optional int32 required_demon_level = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_required_demon_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &required_demon_level_)));
          set_has_required_demon_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_required_cloak_level;
        break;
      }

      // optional int32 required_cloak_level = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_required_cloak_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &required_cloak_level_)));
          set_has_required_cloak_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_required_vip_level;
        break;
      }

      // optional int32 required_vip_level = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_required_vip_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &required_vip_level_)));
          set_has_required_vip_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_required_last_recharge;
        break;
      }

      // optional bool required_last_recharge = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_required_last_recharge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &required_last_recharge_)));
          set_has_required_last_recharge();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_desc;
        break;
      }

      // optional string desc = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_desc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->desc().data(), this->desc().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_required_mo_shi_total_level;
        break;
      }

      // optional int32 required_mo_shi_total_level = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_required_mo_shi_total_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &required_mo_shi_total_level_)));
          set_has_required_mo_shi_total_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse_required_qian_qiu_da_jie_total_level;
        break;
      }

      // optional int32 required_qian_qiu_da_jie_total_level = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_required_qian_qiu_da_jie_total_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &required_qian_qiu_da_jie_total_level_)));
          set_has_required_qian_qiu_da_jie_total_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse_required_mo_shi_hei_han_level;
        break;
      }

      // optional int32 required_mo_shi_hei_han_level = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_required_mo_shi_hei_han_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &required_mo_shi_hei_han_level_)));
          set_has_required_mo_shi_hei_han_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(136)) goto parse_required_mo_shi_bing_po_level;
        break;
      }

      // optional int32 required_mo_shi_bing_po_level = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_required_mo_shi_bing_po_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &required_mo_shi_bing_po_level_)));
          set_has_required_mo_shi_bing_po_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(144)) goto parse_required_mo_shi_bai_lu_level;
        break;
      }

      // optional int32 required_mo_shi_bai_lu_level = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_required_mo_shi_bai_lu_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &required_mo_shi_bai_lu_level_)));
          set_has_required_mo_shi_bai_lu_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(152)) goto parse_required_mo_shi_bu_tian_level;
        break;
      }

      // optional int32 required_mo_shi_bu_tian_level = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_required_mo_shi_bu_tian_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &required_mo_shi_bu_tian_level_)));
          set_has_required_mo_shi_bu_tian_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(160)) goto parse_required_qian_qiu_jian_level;
        break;
      }

      // optional int32 required_qian_qiu_jian_level = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_required_qian_qiu_jian_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &required_qian_qiu_jian_level_)));
          set_has_required_qian_qiu_jian_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(168)) goto parse_required_da_jie_dao_level;
        break;
      }

      // optional int32 required_da_jie_dao_level = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_required_da_jie_dao_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &required_da_jie_dao_level_)));
          set_has_required_da_jie_dao_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(176)) goto parse_required_chihuoshenggong_level;
        break;
      }

      // optional int32 required_chihuoshenggong_level = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_required_chihuoshenggong_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &required_chihuoshenggong_level_)));
          set_has_required_chihuoshenggong_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(184)) goto parse_required_tianxiezhanjian_level;
        break;
      }

      // optional int32 required_tianxiezhanjian_level = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_required_tianxiezhanjian_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &required_tianxiezhanjian_level_)));
          set_has_required_tianxiezhanjian_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(192)) goto parse_required_wudao_level;
        break;
      }

      // optional int32 required_wudao_level = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_required_wudao_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &required_wudao_level_)));
          set_has_required_wudao_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(200)) goto parse_required_shield_1_level;
        break;
      }

      // optional int32 required_shield_1_level = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_required_shield_1_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &required_shield_1_level_)));
          set_has_required_shield_1_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TuHaoDataProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  // optional .app.message.PrizeProto prize = 2;
  if (has_prize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->prize(), output);
  }

  // optional int32 required_acc_recharge = 3;
  if (has_required_acc_recharge()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->required_acc_recharge(), output);
  }

  // optional int32 required_mount_level = 4;
  if (has_required_mount_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->required_mount_level(), output);
  }

  // optional int32 required_tian_zui_level = 5;
  if (has_required_tian_zui_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->required_tian_zui_level(), output);
  }

  // optional int32 required_tian_jie_level = 6;
  if (has_required_tian_jie_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->required_tian_jie_level(), output);
  }

  // optional int32 required_bow_level = 7;
  if (has_required_bow_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->required_bow_level(), output);
  }

  // optional int32 required_super_arm_level = 8;
  if (has_required_super_arm_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->required_super_arm_level(), output);
  }

  // optional int32 required_demon_level = 9;
  if (has_required_demon_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->required_demon_level(), output);
  }

  // optional int32 required_cloak_level = 10;
  if (has_required_cloak_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->required_cloak_level(), output);
  }

  // optional int32 required_vip_level = 11;
  if (has_required_vip_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->required_vip_level(), output);
  }

  // optional bool required_last_recharge = 12;
  if (has_required_last_recharge()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->required_last_recharge(), output);
  }

  // optional string desc = 13;
  if (has_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      13, this->desc(), output);
  }

  // optional int32 required_mo_shi_total_level = 14;
  if (has_required_mo_shi_total_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->required_mo_shi_total_level(), output);
  }

  // optional int32 required_qian_qiu_da_jie_total_level = 15;
  if (has_required_qian_qiu_da_jie_total_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->required_qian_qiu_da_jie_total_level(), output);
  }

  // optional int32 required_mo_shi_hei_han_level = 16;
  if (has_required_mo_shi_hei_han_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->required_mo_shi_hei_han_level(), output);
  }

  // optional int32 required_mo_shi_bing_po_level = 17;
  if (has_required_mo_shi_bing_po_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->required_mo_shi_bing_po_level(), output);
  }

  // optional int32 required_mo_shi_bai_lu_level = 18;
  if (has_required_mo_shi_bai_lu_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->required_mo_shi_bai_lu_level(), output);
  }

  // optional int32 required_mo_shi_bu_tian_level = 19;
  if (has_required_mo_shi_bu_tian_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(19, this->required_mo_shi_bu_tian_level(), output);
  }

  // optional int32 required_qian_qiu_jian_level = 20;
  if (has_required_qian_qiu_jian_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->required_qian_qiu_jian_level(), output);
  }

  // optional int32 required_da_jie_dao_level = 21;
  if (has_required_da_jie_dao_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(21, this->required_da_jie_dao_level(), output);
  }

  // optional int32 required_chihuoshenggong_level = 22;
  if (has_required_chihuoshenggong_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->required_chihuoshenggong_level(), output);
  }

  // optional int32 required_tianxiezhanjian_level = 23;
  if (has_required_tianxiezhanjian_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(23, this->required_tianxiezhanjian_level(), output);
  }

  // optional int32 required_wudao_level = 24;
  if (has_required_wudao_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->required_wudao_level(), output);
  }

  // optional int32 required_shield_1_level = 25;
  if (has_required_shield_1_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->required_shield_1_level(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TuHaoDataProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .app.message.PrizeProto prize = 2;
  if (has_prize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->prize(), target);
  }

  // optional int32 required_acc_recharge = 3;
  if (has_required_acc_recharge()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->required_acc_recharge(), target);
  }

  // optional int32 required_mount_level = 4;
  if (has_required_mount_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->required_mount_level(), target);
  }

  // optional int32 required_tian_zui_level = 5;
  if (has_required_tian_zui_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->required_tian_zui_level(), target);
  }

  // optional int32 required_tian_jie_level = 6;
  if (has_required_tian_jie_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->required_tian_jie_level(), target);
  }

  // optional int32 required_bow_level = 7;
  if (has_required_bow_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->required_bow_level(), target);
  }

  // optional int32 required_super_arm_level = 8;
  if (has_required_super_arm_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->required_super_arm_level(), target);
  }

  // optional int32 required_demon_level = 9;
  if (has_required_demon_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->required_demon_level(), target);
  }

  // optional int32 required_cloak_level = 10;
  if (has_required_cloak_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->required_cloak_level(), target);
  }

  // optional int32 required_vip_level = 11;
  if (has_required_vip_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->required_vip_level(), target);
  }

  // optional bool required_last_recharge = 12;
  if (has_required_last_recharge()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->required_last_recharge(), target);
  }

  // optional string desc = 13;
  if (has_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->desc(), target);
  }

  // optional int32 required_mo_shi_total_level = 14;
  if (has_required_mo_shi_total_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->required_mo_shi_total_level(), target);
  }

  // optional int32 required_qian_qiu_da_jie_total_level = 15;
  if (has_required_qian_qiu_da_jie_total_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->required_qian_qiu_da_jie_total_level(), target);
  }

  // optional int32 required_mo_shi_hei_han_level = 16;
  if (has_required_mo_shi_hei_han_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->required_mo_shi_hei_han_level(), target);
  }

  // optional int32 required_mo_shi_bing_po_level = 17;
  if (has_required_mo_shi_bing_po_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->required_mo_shi_bing_po_level(), target);
  }

  // optional int32 required_mo_shi_bai_lu_level = 18;
  if (has_required_mo_shi_bai_lu_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->required_mo_shi_bai_lu_level(), target);
  }

  // optional int32 required_mo_shi_bu_tian_level = 19;
  if (has_required_mo_shi_bu_tian_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(19, this->required_mo_shi_bu_tian_level(), target);
  }

  // optional int32 required_qian_qiu_jian_level = 20;
  if (has_required_qian_qiu_jian_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->required_qian_qiu_jian_level(), target);
  }

  // optional int32 required_da_jie_dao_level = 21;
  if (has_required_da_jie_dao_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(21, this->required_da_jie_dao_level(), target);
  }

  // optional int32 required_chihuoshenggong_level = 22;
  if (has_required_chihuoshenggong_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->required_chihuoshenggong_level(), target);
  }

  // optional int32 required_tianxiezhanjian_level = 23;
  if (has_required_tianxiezhanjian_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(23, this->required_tianxiezhanjian_level(), target);
  }

  // optional int32 required_wudao_level = 24;
  if (has_required_wudao_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->required_wudao_level(), target);
  }

  // optional int32 required_shield_1_level = 25;
  if (has_required_shield_1_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->required_shield_1_level(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TuHaoDataProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .app.message.PrizeProto prize = 2;
    if (has_prize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prize());
    }

    // optional int32 required_acc_recharge = 3;
    if (has_required_acc_recharge()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->required_acc_recharge());
    }

    // optional int32 required_mount_level = 4;
    if (has_required_mount_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->required_mount_level());
    }

    // optional int32 required_tian_zui_level = 5;
    if (has_required_tian_zui_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->required_tian_zui_level());
    }

    // optional int32 required_tian_jie_level = 6;
    if (has_required_tian_jie_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->required_tian_jie_level());
    }

    // optional int32 required_bow_level = 7;
    if (has_required_bow_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->required_bow_level());
    }

    // optional int32 required_super_arm_level = 8;
    if (has_required_super_arm_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->required_super_arm_level());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 required_demon_level = 9;
    if (has_required_demon_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->required_demon_level());
    }

    // optional int32 required_cloak_level = 10;
    if (has_required_cloak_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->required_cloak_level());
    }

    // optional int32 required_vip_level = 11;
    if (has_required_vip_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->required_vip_level());
    }

    // optional bool required_last_recharge = 12;
    if (has_required_last_recharge()) {
      total_size += 1 + 1;
    }

    // optional string desc = 13;
    if (has_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->desc());
    }

    // optional int32 required_mo_shi_total_level = 14;
    if (has_required_mo_shi_total_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->required_mo_shi_total_level());
    }

    // optional int32 required_qian_qiu_da_jie_total_level = 15;
    if (has_required_qian_qiu_da_jie_total_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->required_qian_qiu_da_jie_total_level());
    }

    // optional int32 required_mo_shi_hei_han_level = 16;
    if (has_required_mo_shi_hei_han_level()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->required_mo_shi_hei_han_level());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional int32 required_mo_shi_bing_po_level = 17;
    if (has_required_mo_shi_bing_po_level()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->required_mo_shi_bing_po_level());
    }

    // optional int32 required_mo_shi_bai_lu_level = 18;
    if (has_required_mo_shi_bai_lu_level()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->required_mo_shi_bai_lu_level());
    }

    // optional int32 required_mo_shi_bu_tian_level = 19;
    if (has_required_mo_shi_bu_tian_level()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->required_mo_shi_bu_tian_level());
    }

    // optional int32 required_qian_qiu_jian_level = 20;
    if (has_required_qian_qiu_jian_level()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->required_qian_qiu_jian_level());
    }

    // optional int32 required_da_jie_dao_level = 21;
    if (has_required_da_jie_dao_level()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->required_da_jie_dao_level());
    }

    // optional int32 required_chihuoshenggong_level = 22;
    if (has_required_chihuoshenggong_level()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->required_chihuoshenggong_level());
    }

    // optional int32 required_tianxiezhanjian_level = 23;
    if (has_required_tianxiezhanjian_level()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->required_tianxiezhanjian_level());
    }

    // optional int32 required_wudao_level = 24;
    if (has_required_wudao_level()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->required_wudao_level());
    }

  }
  if (_has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    // optional int32 required_shield_1_level = 25;
    if (has_required_shield_1_level()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->required_shield_1_level());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TuHaoDataProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TuHaoDataProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TuHaoDataProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TuHaoDataProto::MergeFrom(const TuHaoDataProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_prize()) {
      mutable_prize()->::app::message::PrizeProto::MergeFrom(from.prize());
    }
    if (from.has_required_acc_recharge()) {
      set_required_acc_recharge(from.required_acc_recharge());
    }
    if (from.has_required_mount_level()) {
      set_required_mount_level(from.required_mount_level());
    }
    if (from.has_required_tian_zui_level()) {
      set_required_tian_zui_level(from.required_tian_zui_level());
    }
    if (from.has_required_tian_jie_level()) {
      set_required_tian_jie_level(from.required_tian_jie_level());
    }
    if (from.has_required_bow_level()) {
      set_required_bow_level(from.required_bow_level());
    }
    if (from.has_required_super_arm_level()) {
      set_required_super_arm_level(from.required_super_arm_level());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_required_demon_level()) {
      set_required_demon_level(from.required_demon_level());
    }
    if (from.has_required_cloak_level()) {
      set_required_cloak_level(from.required_cloak_level());
    }
    if (from.has_required_vip_level()) {
      set_required_vip_level(from.required_vip_level());
    }
    if (from.has_required_last_recharge()) {
      set_required_last_recharge(from.required_last_recharge());
    }
    if (from.has_desc()) {
      set_desc(from.desc());
    }
    if (from.has_required_mo_shi_total_level()) {
      set_required_mo_shi_total_level(from.required_mo_shi_total_level());
    }
    if (from.has_required_qian_qiu_da_jie_total_level()) {
      set_required_qian_qiu_da_jie_total_level(from.required_qian_qiu_da_jie_total_level());
    }
    if (from.has_required_mo_shi_hei_han_level()) {
      set_required_mo_shi_hei_han_level(from.required_mo_shi_hei_han_level());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has_required_mo_shi_bing_po_level()) {
      set_required_mo_shi_bing_po_level(from.required_mo_shi_bing_po_level());
    }
    if (from.has_required_mo_shi_bai_lu_level()) {
      set_required_mo_shi_bai_lu_level(from.required_mo_shi_bai_lu_level());
    }
    if (from.has_required_mo_shi_bu_tian_level()) {
      set_required_mo_shi_bu_tian_level(from.required_mo_shi_bu_tian_level());
    }
    if (from.has_required_qian_qiu_jian_level()) {
      set_required_qian_qiu_jian_level(from.required_qian_qiu_jian_level());
    }
    if (from.has_required_da_jie_dao_level()) {
      set_required_da_jie_dao_level(from.required_da_jie_dao_level());
    }
    if (from.has_required_chihuoshenggong_level()) {
      set_required_chihuoshenggong_level(from.required_chihuoshenggong_level());
    }
    if (from.has_required_tianxiezhanjian_level()) {
      set_required_tianxiezhanjian_level(from.required_tianxiezhanjian_level());
    }
    if (from.has_required_wudao_level()) {
      set_required_wudao_level(from.required_wudao_level());
    }
  }
  if (from._has_bits_[24 / 32] & (0xffu << (24 % 32))) {
    if (from.has_required_shield_1_level()) {
      set_required_shield_1_level(from.required_shield_1_level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TuHaoDataProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TuHaoDataProto::CopyFrom(const TuHaoDataProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TuHaoDataProto::IsInitialized() const {

  return true;
}

void TuHaoDataProto::Swap(TuHaoDataProto* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(prize_, other->prize_);
    std::swap(required_acc_recharge_, other->required_acc_recharge_);
    std::swap(required_mount_level_, other->required_mount_level_);
    std::swap(required_tian_zui_level_, other->required_tian_zui_level_);
    std::swap(required_tian_jie_level_, other->required_tian_jie_level_);
    std::swap(required_bow_level_, other->required_bow_level_);
    std::swap(required_super_arm_level_, other->required_super_arm_level_);
    std::swap(required_demon_level_, other->required_demon_level_);
    std::swap(required_cloak_level_, other->required_cloak_level_);
    std::swap(required_vip_level_, other->required_vip_level_);
    std::swap(required_last_recharge_, other->required_last_recharge_);
    std::swap(desc_, other->desc_);
    std::swap(required_mo_shi_total_level_, other->required_mo_shi_total_level_);
    std::swap(required_qian_qiu_da_jie_total_level_, other->required_qian_qiu_da_jie_total_level_);
    std::swap(required_mo_shi_hei_han_level_, other->required_mo_shi_hei_han_level_);
    std::swap(required_mo_shi_bing_po_level_, other->required_mo_shi_bing_po_level_);
    std::swap(required_mo_shi_bai_lu_level_, other->required_mo_shi_bai_lu_level_);
    std::swap(required_mo_shi_bu_tian_level_, other->required_mo_shi_bu_tian_level_);
    std::swap(required_qian_qiu_jian_level_, other->required_qian_qiu_jian_level_);
    std::swap(required_da_jie_dao_level_, other->required_da_jie_dao_level_);
    std::swap(required_chihuoshenggong_level_, other->required_chihuoshenggong_level_);
    std::swap(required_tianxiezhanjian_level_, other->required_tianxiezhanjian_level_);
    std::swap(required_wudao_level_, other->required_wudao_level_);
    std::swap(required_shield_1_level_, other->required_shield_1_level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TuHaoDataProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TuHaoDataProto_descriptor_;
  metadata.reflection = TuHaoDataProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LaoBingBackDatasProto::kStartTimeFieldNumber;
const int LaoBingBackDatasProto::kEndTimeFieldNumber;
const int LaoBingBackDatasProto::kDataFieldNumber;
const int LaoBingBackDatasProto::kMinLevelFieldNumber;
const int LaoBingBackDatasProto::kMinOfflineDaysFieldNumber;
const int LaoBingBackDatasProto::kRechargeOnePrizeFieldNumber;
const int LaoBingBackDatasProto::kOnlinePrizeMinutesFieldNumber;
const int LaoBingBackDatasProto::kMaxPrizeTimeFieldNumber;
#endif  // !_MSC_VER

LaoBingBackDatasProto::LaoBingBackDatasProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void LaoBingBackDatasProto::InitAsDefaultInstance() {
}

LaoBingBackDatasProto::LaoBingBackDatasProto(const LaoBingBackDatasProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void LaoBingBackDatasProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  min_level_ = 0;
  min_offline_days_ = 0;
  recharge_one_prize_ = 0;
  online_prize_minutes_ = 0;
  max_prize_time_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LaoBingBackDatasProto::~LaoBingBackDatasProto() {
  SharedDtor();
}

void LaoBingBackDatasProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LaoBingBackDatasProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LaoBingBackDatasProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LaoBingBackDatasProto_descriptor_;
}

const LaoBingBackDatasProto& LaoBingBackDatasProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

LaoBingBackDatasProto* LaoBingBackDatasProto::default_instance_ = NULL;

LaoBingBackDatasProto* LaoBingBackDatasProto::New() const {
  return new LaoBingBackDatasProto;
}

void LaoBingBackDatasProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    min_level_ = 0;
    min_offline_days_ = 0;
    recharge_one_prize_ = 0;
    online_prize_minutes_ = 0;
    max_prize_time_ = 0;
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LaoBingBackDatasProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_data;
        break;
      }

      // repeated .app.message.LaoBingBackDataProto data = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_data;
        if (input->ExpectTag(32)) goto parse_min_level;
        break;
      }

      // optional int32 min_level = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_min_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &min_level_)));
          set_has_min_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_min_offline_days;
        break;
      }

      // optional int32 min_offline_days = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_min_offline_days:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &min_offline_days_)));
          set_has_min_offline_days();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_recharge_one_prize;
        break;
      }

      // optional int32 recharge_one_prize = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_recharge_one_prize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &recharge_one_prize_)));
          set_has_recharge_one_prize();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_online_prize_minutes;
        break;
      }

      // optional int32 online_prize_minutes = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_online_prize_minutes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &online_prize_minutes_)));
          set_has_online_prize_minutes();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_max_prize_time;
        break;
      }

      // optional int32 max_prize_time = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_max_prize_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_prize_time_)));
          set_has_max_prize_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void LaoBingBackDatasProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // repeated .app.message.LaoBingBackDataProto data = 3;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->data(i), output);
  }

  // optional int32 min_level = 4;
  if (has_min_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->min_level(), output);
  }

  // optional int32 min_offline_days = 5;
  if (has_min_offline_days()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->min_offline_days(), output);
  }

  // optional int32 recharge_one_prize = 6;
  if (has_recharge_one_prize()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->recharge_one_prize(), output);
  }

  // optional int32 online_prize_minutes = 7;
  if (has_online_prize_minutes()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->online_prize_minutes(), output);
  }

  // optional int32 max_prize_time = 8;
  if (has_max_prize_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->max_prize_time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* LaoBingBackDatasProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // repeated .app.message.LaoBingBackDataProto data = 3;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->data(i), target);
  }

  // optional int32 min_level = 4;
  if (has_min_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->min_level(), target);
  }

  // optional int32 min_offline_days = 5;
  if (has_min_offline_days()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->min_offline_days(), target);
  }

  // optional int32 recharge_one_prize = 6;
  if (has_recharge_one_prize()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->recharge_one_prize(), target);
  }

  // optional int32 online_prize_minutes = 7;
  if (has_online_prize_minutes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->online_prize_minutes(), target);
  }

  // optional int32 max_prize_time = 8;
  if (has_max_prize_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->max_prize_time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int LaoBingBackDatasProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional int32 min_level = 4;
    if (has_min_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->min_level());
    }

    // optional int32 min_offline_days = 5;
    if (has_min_offline_days()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->min_offline_days());
    }

    // optional int32 recharge_one_prize = 6;
    if (has_recharge_one_prize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->recharge_one_prize());
    }

    // optional int32 online_prize_minutes = 7;
    if (has_online_prize_minutes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->online_prize_minutes());
    }

    // optional int32 max_prize_time = 8;
    if (has_max_prize_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_prize_time());
    }

  }
  // repeated .app.message.LaoBingBackDataProto data = 3;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LaoBingBackDatasProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LaoBingBackDatasProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LaoBingBackDatasProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LaoBingBackDatasProto::MergeFrom(const LaoBingBackDatasProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_min_level()) {
      set_min_level(from.min_level());
    }
    if (from.has_min_offline_days()) {
      set_min_offline_days(from.min_offline_days());
    }
    if (from.has_recharge_one_prize()) {
      set_recharge_one_prize(from.recharge_one_prize());
    }
    if (from.has_online_prize_minutes()) {
      set_online_prize_minutes(from.online_prize_minutes());
    }
    if (from.has_max_prize_time()) {
      set_max_prize_time(from.max_prize_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LaoBingBackDatasProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LaoBingBackDatasProto::CopyFrom(const LaoBingBackDatasProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LaoBingBackDatasProto::IsInitialized() const {

  return true;
}

void LaoBingBackDatasProto::Swap(LaoBingBackDatasProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    data_.Swap(&other->data_);
    std::swap(min_level_, other->min_level_);
    std::swap(min_offline_days_, other->min_offline_days_);
    std::swap(recharge_one_prize_, other->recharge_one_prize_);
    std::swap(online_prize_minutes_, other->online_prize_minutes_);
    std::swap(max_prize_time_, other->max_prize_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LaoBingBackDatasProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LaoBingBackDatasProto_descriptor_;
  metadata.reflection = LaoBingBackDatasProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LaoBingBackDataProto::kIdFieldNumber;
const int LaoBingBackDataProto::kNameFieldNumber;
const int LaoBingBackDataProto::kPrizeFieldNumber;
const int LaoBingBackDataProto::kDescFieldNumber;
#endif  // !_MSC_VER

LaoBingBackDataProto::LaoBingBackDataProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void LaoBingBackDataProto::InitAsDefaultInstance() {
  prize_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
}

LaoBingBackDataProto::LaoBingBackDataProto(const LaoBingBackDataProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void LaoBingBackDataProto::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  prize_ = NULL;
  desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LaoBingBackDataProto::~LaoBingBackDataProto() {
  SharedDtor();
}

void LaoBingBackDataProto::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (desc_ != &::google::protobuf::internal::kEmptyString) {
    delete desc_;
  }
  if (this != default_instance_) {
    delete prize_;
  }
}

void LaoBingBackDataProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LaoBingBackDataProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LaoBingBackDataProto_descriptor_;
}

const LaoBingBackDataProto& LaoBingBackDataProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

LaoBingBackDataProto* LaoBingBackDataProto::default_instance_ = NULL;

LaoBingBackDataProto* LaoBingBackDataProto::New() const {
  return new LaoBingBackDataProto;
}

void LaoBingBackDataProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_prize()) {
      if (prize_ != NULL) prize_->::app::message::PrizeProto::Clear();
    }
    if (has_desc()) {
      if (desc_ != &::google::protobuf::internal::kEmptyString) {
        desc_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LaoBingBackDataProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_prize;
        break;
      }

      // optional .app.message.PrizeProto prize = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_desc;
        break;
      }

      // optional string desc = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_desc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->desc().data(), this->desc().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void LaoBingBackDataProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }

  // optional .app.message.PrizeProto prize = 3;
  if (has_prize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->prize(), output);
  }

  // optional string desc = 4;
  if (has_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->desc(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* LaoBingBackDataProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional .app.message.PrizeProto prize = 3;
  if (has_prize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->prize(), target);
  }

  // optional string desc = 4;
  if (has_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->desc(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int LaoBingBackDataProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .app.message.PrizeProto prize = 3;
    if (has_prize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prize());
    }

    // optional string desc = 4;
    if (has_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->desc());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LaoBingBackDataProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LaoBingBackDataProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LaoBingBackDataProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LaoBingBackDataProto::MergeFrom(const LaoBingBackDataProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_prize()) {
      mutable_prize()->::app::message::PrizeProto::MergeFrom(from.prize());
    }
    if (from.has_desc()) {
      set_desc(from.desc());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LaoBingBackDataProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LaoBingBackDataProto::CopyFrom(const LaoBingBackDataProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LaoBingBackDataProto::IsInitialized() const {

  return true;
}

void LaoBingBackDataProto::Swap(LaoBingBackDataProto* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(name_, other->name_);
    std::swap(prize_, other->prize_);
    std::swap(desc_, other->desc_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LaoBingBackDataProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LaoBingBackDataProto_descriptor_;
  metadata.reflection = LaoBingBackDataProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DingZhiDatasProto::kStartTimeFieldNumber;
const int DingZhiDatasProto::kEndTimeFieldNumber;
const int DingZhiDatasProto::kDataFieldNumber;
#endif  // !_MSC_VER

DingZhiDatasProto::DingZhiDatasProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DingZhiDatasProto::InitAsDefaultInstance() {
  data_ = const_cast< ::app::message::DingZhiDataProto*>(&::app::message::DingZhiDataProto::default_instance());
}

DingZhiDatasProto::DingZhiDatasProto(const DingZhiDatasProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DingZhiDatasProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  data_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DingZhiDatasProto::~DingZhiDatasProto() {
  SharedDtor();
}

void DingZhiDatasProto::SharedDtor() {
  if (this != default_instance_) {
    delete data_;
  }
}

void DingZhiDatasProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DingZhiDatasProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DingZhiDatasProto_descriptor_;
}

const DingZhiDatasProto& DingZhiDatasProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

DingZhiDatasProto* DingZhiDatasProto::default_instance_ = NULL;

DingZhiDatasProto* DingZhiDatasProto::New() const {
  return new DingZhiDatasProto;
}

void DingZhiDatasProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    if (has_data()) {
      if (data_ != NULL) data_->::app::message::DingZhiDataProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DingZhiDatasProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_data;
        break;
      }

      // optional .app.message.DingZhiDataProto data = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DingZhiDatasProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // optional .app.message.DingZhiDataProto data = 3;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DingZhiDatasProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // optional .app.message.DingZhiDataProto data = 3;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DingZhiDatasProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional .app.message.DingZhiDataProto data = 3;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DingZhiDatasProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DingZhiDatasProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DingZhiDatasProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DingZhiDatasProto::MergeFrom(const DingZhiDatasProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_data()) {
      mutable_data()->::app::message::DingZhiDataProto::MergeFrom(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DingZhiDatasProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DingZhiDatasProto::CopyFrom(const DingZhiDatasProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DingZhiDatasProto::IsInitialized() const {

  return true;
}

void DingZhiDatasProto::Swap(DingZhiDatasProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DingZhiDatasProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DingZhiDatasProto_descriptor_;
  metadata.reflection = DingZhiDatasProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DingZhiDataProto::kNameFieldNumber;
const int DingZhiDataProto::kTypeFieldNumber;
const int DingZhiDataProto::kYuanBaoFieldNumber;
const int DingZhiDataProto::kMinLevelFieldNumber;
const int DingZhiDataProto::kTargetLevelFieldNumber;
const int DingZhiDataProto::kSecondaryPrizeFieldNumber;
const int DingZhiDataProto::kFanPaiPrizeGoodsFieldNumber;
const int DingZhiDataProto::kExtraPrizeRequiredFanPaiTimesFieldNumber;
const int DingZhiDataProto::kExtraPrizeFieldNumber;
#endif  // !_MSC_VER

DingZhiDataProto::DingZhiDataProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DingZhiDataProto::InitAsDefaultInstance() {
  secondary_prize_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
  fan_pai_prize_goods_ = const_cast< ::app::message::GoodsWrapperProto*>(&::app::message::GoodsWrapperProto::default_instance());
}

DingZhiDataProto::DingZhiDataProto(const DingZhiDataProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DingZhiDataProto::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  type_ = 0;
  yuan_bao_ = 0;
  min_level_ = 0;
  target_level_ = 0;
  secondary_prize_ = NULL;
  fan_pai_prize_goods_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DingZhiDataProto::~DingZhiDataProto() {
  SharedDtor();
}

void DingZhiDataProto::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
    delete secondary_prize_;
    delete fan_pai_prize_goods_;
  }
}

void DingZhiDataProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DingZhiDataProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DingZhiDataProto_descriptor_;
}

const DingZhiDataProto& DingZhiDataProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

DingZhiDataProto* DingZhiDataProto::default_instance_ = NULL;

DingZhiDataProto* DingZhiDataProto::New() const {
  return new DingZhiDataProto;
}

void DingZhiDataProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    type_ = 0;
    yuan_bao_ = 0;
    min_level_ = 0;
    target_level_ = 0;
    if (has_secondary_prize()) {
      if (secondary_prize_ != NULL) secondary_prize_->::app::message::PrizeProto::Clear();
    }
    if (has_fan_pai_prize_goods()) {
      if (fan_pai_prize_goods_ != NULL) fan_pai_prize_goods_->::app::message::GoodsWrapperProto::Clear();
    }
  }
  extra_prize_required_fan_pai_times_.Clear();
  extra_prize_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DingZhiDataProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // optional int32 type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_yuan_bao;
        break;
      }

      // optional int32 yuan_bao = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_yuan_bao:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yuan_bao_)));
          set_has_yuan_bao();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_min_level;
        break;
      }

      // optional int32 min_level = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_min_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &min_level_)));
          set_has_min_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_target_level;
        break;
      }

      // optional int32 target_level = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_target_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &target_level_)));
          set_has_target_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_secondary_prize;
        break;
      }

      // optional .app.message.PrizeProto secondary_prize = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_secondary_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_secondary_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_fan_pai_prize_goods;
        break;
      }

      // optional .app.message.GoodsWrapperProto fan_pai_prize_goods = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fan_pai_prize_goods:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fan_pai_prize_goods()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_extra_prize_required_fan_pai_times;
        break;
      }

      // repeated int32 extra_prize_required_fan_pai_times = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_extra_prize_required_fan_pai_times:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 64, input, this->mutable_extra_prize_required_fan_pai_times())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_extra_prize_required_fan_pai_times())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_extra_prize_required_fan_pai_times;
        if (input->ExpectTag(74)) goto parse_extra_prize;
        break;
      }

      // repeated .app.message.PrizeProto extra_prize = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_extra_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_extra_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_extra_prize;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DingZhiDataProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  // optional int32 type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // optional int32 yuan_bao = 3;
  if (has_yuan_bao()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->yuan_bao(), output);
  }

  // optional int32 min_level = 4;
  if (has_min_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->min_level(), output);
  }

  // optional int32 target_level = 5;
  if (has_target_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->target_level(), output);
  }

  // optional .app.message.PrizeProto secondary_prize = 6;
  if (has_secondary_prize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->secondary_prize(), output);
  }

  // optional .app.message.GoodsWrapperProto fan_pai_prize_goods = 7;
  if (has_fan_pai_prize_goods()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->fan_pai_prize_goods(), output);
  }

  // repeated int32 extra_prize_required_fan_pai_times = 8;
  for (int i = 0; i < this->extra_prize_required_fan_pai_times_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      8, this->extra_prize_required_fan_pai_times(i), output);
  }

  // repeated .app.message.PrizeProto extra_prize = 9;
  for (int i = 0; i < this->extra_prize_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->extra_prize(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DingZhiDataProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional int32 type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // optional int32 yuan_bao = 3;
  if (has_yuan_bao()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->yuan_bao(), target);
  }

  // optional int32 min_level = 4;
  if (has_min_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->min_level(), target);
  }

  // optional int32 target_level = 5;
  if (has_target_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->target_level(), target);
  }

  // optional .app.message.PrizeProto secondary_prize = 6;
  if (has_secondary_prize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->secondary_prize(), target);
  }

  // optional .app.message.GoodsWrapperProto fan_pai_prize_goods = 7;
  if (has_fan_pai_prize_goods()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->fan_pai_prize_goods(), target);
  }

  // repeated int32 extra_prize_required_fan_pai_times = 8;
  for (int i = 0; i < this->extra_prize_required_fan_pai_times_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(8, this->extra_prize_required_fan_pai_times(i), target);
  }

  // repeated .app.message.PrizeProto extra_prize = 9;
  for (int i = 0; i < this->extra_prize_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->extra_prize(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DingZhiDataProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 yuan_bao = 3;
    if (has_yuan_bao()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->yuan_bao());
    }

    // optional int32 min_level = 4;
    if (has_min_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->min_level());
    }

    // optional int32 target_level = 5;
    if (has_target_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->target_level());
    }

    // optional .app.message.PrizeProto secondary_prize = 6;
    if (has_secondary_prize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->secondary_prize());
    }

    // optional .app.message.GoodsWrapperProto fan_pai_prize_goods = 7;
    if (has_fan_pai_prize_goods()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->fan_pai_prize_goods());
    }

  }
  // repeated int32 extra_prize_required_fan_pai_times = 8;
  {
    int data_size = 0;
    for (int i = 0; i < this->extra_prize_required_fan_pai_times_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->extra_prize_required_fan_pai_times(i));
    }
    total_size += 1 * this->extra_prize_required_fan_pai_times_size() + data_size;
  }

  // repeated .app.message.PrizeProto extra_prize = 9;
  total_size += 1 * this->extra_prize_size();
  for (int i = 0; i < this->extra_prize_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->extra_prize(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DingZhiDataProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DingZhiDataProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DingZhiDataProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DingZhiDataProto::MergeFrom(const DingZhiDataProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  extra_prize_required_fan_pai_times_.MergeFrom(from.extra_prize_required_fan_pai_times_);
  extra_prize_.MergeFrom(from.extra_prize_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_yuan_bao()) {
      set_yuan_bao(from.yuan_bao());
    }
    if (from.has_min_level()) {
      set_min_level(from.min_level());
    }
    if (from.has_target_level()) {
      set_target_level(from.target_level());
    }
    if (from.has_secondary_prize()) {
      mutable_secondary_prize()->::app::message::PrizeProto::MergeFrom(from.secondary_prize());
    }
    if (from.has_fan_pai_prize_goods()) {
      mutable_fan_pai_prize_goods()->::app::message::GoodsWrapperProto::MergeFrom(from.fan_pai_prize_goods());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DingZhiDataProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DingZhiDataProto::CopyFrom(const DingZhiDataProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DingZhiDataProto::IsInitialized() const {

  return true;
}

void DingZhiDataProto::Swap(DingZhiDataProto* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(type_, other->type_);
    std::swap(yuan_bao_, other->yuan_bao_);
    std::swap(min_level_, other->min_level_);
    std::swap(target_level_, other->target_level_);
    std::swap(secondary_prize_, other->secondary_prize_);
    std::swap(fan_pai_prize_goods_, other->fan_pai_prize_goods_);
    extra_prize_required_fan_pai_times_.Swap(&other->extra_prize_required_fan_pai_times_);
    extra_prize_.Swap(&other->extra_prize_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DingZhiDataProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DingZhiDataProto_descriptor_;
  metadata.reflection = DingZhiDataProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RechargeRebateProto::kStartTimeFieldNumber;
const int RechargeRebateProto::kEndTimeFieldNumber;
const int RechargeRebateProto::kPrizeFieldNumber;
#endif  // !_MSC_VER

RechargeRebateProto::RechargeRebateProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RechargeRebateProto::InitAsDefaultInstance() {
}

RechargeRebateProto::RechargeRebateProto(const RechargeRebateProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RechargeRebateProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RechargeRebateProto::~RechargeRebateProto() {
  SharedDtor();
}

void RechargeRebateProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RechargeRebateProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RechargeRebateProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RechargeRebateProto_descriptor_;
}

const RechargeRebateProto& RechargeRebateProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

RechargeRebateProto* RechargeRebateProto::default_instance_ = NULL;

RechargeRebateProto* RechargeRebateProto::New() const {
  return new RechargeRebateProto;
}

void RechargeRebateProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
  }
  prize_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RechargeRebateProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_prize;
        break;
      }

      // repeated .app.message.RechargeRebateSingleProto prize = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_prize;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RechargeRebateProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // repeated .app.message.RechargeRebateSingleProto prize = 3;
  for (int i = 0; i < this->prize_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->prize(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RechargeRebateProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // repeated .app.message.RechargeRebateSingleProto prize = 3;
  for (int i = 0; i < this->prize_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->prize(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RechargeRebateProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

  }
  // repeated .app.message.RechargeRebateSingleProto prize = 3;
  total_size += 1 * this->prize_size();
  for (int i = 0; i < this->prize_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->prize(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RechargeRebateProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RechargeRebateProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RechargeRebateProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RechargeRebateProto::MergeFrom(const RechargeRebateProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  prize_.MergeFrom(from.prize_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RechargeRebateProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RechargeRebateProto::CopyFrom(const RechargeRebateProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RechargeRebateProto::IsInitialized() const {

  return true;
}

void RechargeRebateProto::Swap(RechargeRebateProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    prize_.Swap(&other->prize_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RechargeRebateProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RechargeRebateProto_descriptor_;
  metadata.reflection = RechargeRebateProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RechargeRebateSingleProto::kYuanbaoFieldNumber;
const int RechargeRebateSingleProto::kLimitFieldNumber;
const int RechargeRebateSingleProto::kPrizeFieldNumber;
const int RechargeRebateSingleProto::kPrize2FieldNumber;
#endif  // !_MSC_VER

RechargeRebateSingleProto::RechargeRebateSingleProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RechargeRebateSingleProto::InitAsDefaultInstance() {
  prize_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
  prize2_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
}

RechargeRebateSingleProto::RechargeRebateSingleProto(const RechargeRebateSingleProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RechargeRebateSingleProto::SharedCtor() {
  _cached_size_ = 0;
  yuanbao_ = 0;
  limit_ = 0;
  prize_ = NULL;
  prize2_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RechargeRebateSingleProto::~RechargeRebateSingleProto() {
  SharedDtor();
}

void RechargeRebateSingleProto::SharedDtor() {
  if (this != default_instance_) {
    delete prize_;
    delete prize2_;
  }
}

void RechargeRebateSingleProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RechargeRebateSingleProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RechargeRebateSingleProto_descriptor_;
}

const RechargeRebateSingleProto& RechargeRebateSingleProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

RechargeRebateSingleProto* RechargeRebateSingleProto::default_instance_ = NULL;

RechargeRebateSingleProto* RechargeRebateSingleProto::New() const {
  return new RechargeRebateSingleProto;
}

void RechargeRebateSingleProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    yuanbao_ = 0;
    limit_ = 0;
    if (has_prize()) {
      if (prize_ != NULL) prize_->::app::message::PrizeProto::Clear();
    }
    if (has_prize2()) {
      if (prize2_ != NULL) prize2_->::app::message::PrizeProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RechargeRebateSingleProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 yuanbao = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yuanbao_)));
          set_has_yuanbao();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_limit;
        break;
      }

      // optional int32 limit = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &limit_)));
          set_has_limit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_prize;
        break;
      }

      // optional .app.message.PrizeProto prize = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_prize2;
        break;
      }

      // optional .app.message.PrizeProto prize2 = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prize2()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RechargeRebateSingleProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 yuanbao = 1;
  if (has_yuanbao()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->yuanbao(), output);
  }

  // optional int32 limit = 2;
  if (has_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->limit(), output);
  }

  // optional .app.message.PrizeProto prize = 4;
  if (has_prize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->prize(), output);
  }

  // optional .app.message.PrizeProto prize2 = 5;
  if (has_prize2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->prize2(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RechargeRebateSingleProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 yuanbao = 1;
  if (has_yuanbao()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->yuanbao(), target);
  }

  // optional int32 limit = 2;
  if (has_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->limit(), target);
  }

  // optional .app.message.PrizeProto prize = 4;
  if (has_prize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->prize(), target);
  }

  // optional .app.message.PrizeProto prize2 = 5;
  if (has_prize2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->prize2(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RechargeRebateSingleProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 yuanbao = 1;
    if (has_yuanbao()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->yuanbao());
    }

    // optional int32 limit = 2;
    if (has_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->limit());
    }

    // optional .app.message.PrizeProto prize = 4;
    if (has_prize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prize());
    }

    // optional .app.message.PrizeProto prize2 = 5;
    if (has_prize2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prize2());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RechargeRebateSingleProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RechargeRebateSingleProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RechargeRebateSingleProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RechargeRebateSingleProto::MergeFrom(const RechargeRebateSingleProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_yuanbao()) {
      set_yuanbao(from.yuanbao());
    }
    if (from.has_limit()) {
      set_limit(from.limit());
    }
    if (from.has_prize()) {
      mutable_prize()->::app::message::PrizeProto::MergeFrom(from.prize());
    }
    if (from.has_prize2()) {
      mutable_prize2()->::app::message::PrizeProto::MergeFrom(from.prize2());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RechargeRebateSingleProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RechargeRebateSingleProto::CopyFrom(const RechargeRebateSingleProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RechargeRebateSingleProto::IsInitialized() const {

  return true;
}

void RechargeRebateSingleProto::Swap(RechargeRebateSingleProto* other) {
  if (other != this) {
    std::swap(yuanbao_, other->yuanbao_);
    std::swap(limit_, other->limit_);
    std::swap(prize_, other->prize_);
    std::swap(prize2_, other->prize2_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RechargeRebateSingleProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RechargeRebateSingleProto_descriptor_;
  metadata.reflection = RechargeRebateSingleProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RechargeExchangeProto::kStartTimeFieldNumber;
const int RechargeExchangeProto::kEndTimeFieldNumber;
const int RechargeExchangeProto::kPrizeInfoFieldNumber;
const int RechargeExchangeProto::kPrizeFieldNumber;
#endif  // !_MSC_VER

RechargeExchangeProto::RechargeExchangeProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RechargeExchangeProto::InitAsDefaultInstance() {
  prize_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
}

RechargeExchangeProto::RechargeExchangeProto(const RechargeExchangeProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RechargeExchangeProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  prize_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RechargeExchangeProto::~RechargeExchangeProto() {
  SharedDtor();
}

void RechargeExchangeProto::SharedDtor() {
  if (this != default_instance_) {
    delete prize_;
  }
}

void RechargeExchangeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RechargeExchangeProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RechargeExchangeProto_descriptor_;
}

const RechargeExchangeProto& RechargeExchangeProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

RechargeExchangeProto* RechargeExchangeProto::default_instance_ = NULL;

RechargeExchangeProto* RechargeExchangeProto::New() const {
  return new RechargeExchangeProto;
}

void RechargeExchangeProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    if (has_prize()) {
      if (prize_ != NULL) prize_->::app::message::PrizeProto::Clear();
    }
  }
  prize_info_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RechargeExchangeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_prize_info;
        break;
      }

      // repeated .app.message.RechargeExchangeSingleProto prize_info = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_prize_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_prize_info;
        if (input->ExpectTag(34)) goto parse_prize;
        break;
      }

      // optional .app.message.PrizeProto prize = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RechargeExchangeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // repeated .app.message.RechargeExchangeSingleProto prize_info = 3;
  for (int i = 0; i < this->prize_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->prize_info(i), output);
  }

  // optional .app.message.PrizeProto prize = 4;
  if (has_prize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->prize(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RechargeExchangeProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // repeated .app.message.RechargeExchangeSingleProto prize_info = 3;
  for (int i = 0; i < this->prize_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->prize_info(i), target);
  }

  // optional .app.message.PrizeProto prize = 4;
  if (has_prize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->prize(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RechargeExchangeProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional .app.message.PrizeProto prize = 4;
    if (has_prize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prize());
    }

  }
  // repeated .app.message.RechargeExchangeSingleProto prize_info = 3;
  total_size += 1 * this->prize_info_size();
  for (int i = 0; i < this->prize_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->prize_info(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RechargeExchangeProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RechargeExchangeProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RechargeExchangeProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RechargeExchangeProto::MergeFrom(const RechargeExchangeProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  prize_info_.MergeFrom(from.prize_info_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_prize()) {
      mutable_prize()->::app::message::PrizeProto::MergeFrom(from.prize());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RechargeExchangeProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RechargeExchangeProto::CopyFrom(const RechargeExchangeProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RechargeExchangeProto::IsInitialized() const {

  return true;
}

void RechargeExchangeProto::Swap(RechargeExchangeProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    prize_info_.Swap(&other->prize_info_);
    std::swap(prize_, other->prize_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RechargeExchangeProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RechargeExchangeProto_descriptor_;
  metadata.reflection = RechargeExchangeProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RechargeExchangeSingleProto::kIdFieldNumber;
const int RechargeExchangeSingleProto::kYuanbaoFieldNumber;
#endif  // !_MSC_VER

RechargeExchangeSingleProto::RechargeExchangeSingleProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RechargeExchangeSingleProto::InitAsDefaultInstance() {
}

RechargeExchangeSingleProto::RechargeExchangeSingleProto(const RechargeExchangeSingleProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RechargeExchangeSingleProto::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  yuanbao_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RechargeExchangeSingleProto::~RechargeExchangeSingleProto() {
  SharedDtor();
}

void RechargeExchangeSingleProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RechargeExchangeSingleProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RechargeExchangeSingleProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RechargeExchangeSingleProto_descriptor_;
}

const RechargeExchangeSingleProto& RechargeExchangeSingleProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

RechargeExchangeSingleProto* RechargeExchangeSingleProto::default_instance_ = NULL;

RechargeExchangeSingleProto* RechargeExchangeSingleProto::New() const {
  return new RechargeExchangeSingleProto;
}

void RechargeExchangeSingleProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    yuanbao_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RechargeExchangeSingleProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_yuanbao;
        break;
      }

      // optional int32 yuanbao = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_yuanbao:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yuanbao_)));
          set_has_yuanbao();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RechargeExchangeSingleProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 yuanbao = 2;
  if (has_yuanbao()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->yuanbao(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RechargeExchangeSingleProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 yuanbao = 2;
  if (has_yuanbao()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->yuanbao(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RechargeExchangeSingleProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 yuanbao = 2;
    if (has_yuanbao()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->yuanbao());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RechargeExchangeSingleProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RechargeExchangeSingleProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RechargeExchangeSingleProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RechargeExchangeSingleProto::MergeFrom(const RechargeExchangeSingleProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_yuanbao()) {
      set_yuanbao(from.yuanbao());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RechargeExchangeSingleProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RechargeExchangeSingleProto::CopyFrom(const RechargeExchangeSingleProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RechargeExchangeSingleProto::IsInitialized() const {

  return true;
}

void RechargeExchangeSingleProto::Swap(RechargeExchangeSingleProto* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(yuanbao_, other->yuanbao_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RechargeExchangeSingleProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RechargeExchangeSingleProto_descriptor_;
  metadata.reflection = RechargeExchangeSingleProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CollectPrizePromotionProto::kStartTimeFieldNumber;
const int CollectPrizePromotionProto::kEndTimeFieldNumber;
const int CollectPrizePromotionProto::kPrizeFieldNumber;
#endif  // !_MSC_VER

CollectPrizePromotionProto::CollectPrizePromotionProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CollectPrizePromotionProto::InitAsDefaultInstance() {
}

CollectPrizePromotionProto::CollectPrizePromotionProto(const CollectPrizePromotionProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CollectPrizePromotionProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CollectPrizePromotionProto::~CollectPrizePromotionProto() {
  SharedDtor();
}

void CollectPrizePromotionProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CollectPrizePromotionProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CollectPrizePromotionProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CollectPrizePromotionProto_descriptor_;
}

const CollectPrizePromotionProto& CollectPrizePromotionProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

CollectPrizePromotionProto* CollectPrizePromotionProto::default_instance_ = NULL;

CollectPrizePromotionProto* CollectPrizePromotionProto::New() const {
  return new CollectPrizePromotionProto;
}

void CollectPrizePromotionProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
  }
  prize_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CollectPrizePromotionProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_prize;
        break;
      }

      // repeated .app.message.CollectPrizePromotionSingleProto prize = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_prize;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CollectPrizePromotionProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // repeated .app.message.CollectPrizePromotionSingleProto prize = 3;
  for (int i = 0; i < this->prize_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->prize(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CollectPrizePromotionProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // repeated .app.message.CollectPrizePromotionSingleProto prize = 3;
  for (int i = 0; i < this->prize_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->prize(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CollectPrizePromotionProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

  }
  // repeated .app.message.CollectPrizePromotionSingleProto prize = 3;
  total_size += 1 * this->prize_size();
  for (int i = 0; i < this->prize_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->prize(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CollectPrizePromotionProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CollectPrizePromotionProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CollectPrizePromotionProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CollectPrizePromotionProto::MergeFrom(const CollectPrizePromotionProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  prize_.MergeFrom(from.prize_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CollectPrizePromotionProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CollectPrizePromotionProto::CopyFrom(const CollectPrizePromotionProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CollectPrizePromotionProto::IsInitialized() const {

  return true;
}

void CollectPrizePromotionProto::Swap(CollectPrizePromotionProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    prize_.Swap(&other->prize_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CollectPrizePromotionProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CollectPrizePromotionProto_descriptor_;
  metadata.reflection = CollectPrizePromotionProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CollectPrizePromotionSingleProto::kLevelFieldNumber;
const int CollectPrizePromotionSingleProto::kPrizeFieldNumber;
#endif  // !_MSC_VER

CollectPrizePromotionSingleProto::CollectPrizePromotionSingleProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CollectPrizePromotionSingleProto::InitAsDefaultInstance() {
  prize_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
}

CollectPrizePromotionSingleProto::CollectPrizePromotionSingleProto(const CollectPrizePromotionSingleProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CollectPrizePromotionSingleProto::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0;
  prize_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CollectPrizePromotionSingleProto::~CollectPrizePromotionSingleProto() {
  SharedDtor();
}

void CollectPrizePromotionSingleProto::SharedDtor() {
  if (this != default_instance_) {
    delete prize_;
  }
}

void CollectPrizePromotionSingleProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CollectPrizePromotionSingleProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CollectPrizePromotionSingleProto_descriptor_;
}

const CollectPrizePromotionSingleProto& CollectPrizePromotionSingleProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

CollectPrizePromotionSingleProto* CollectPrizePromotionSingleProto::default_instance_ = NULL;

CollectPrizePromotionSingleProto* CollectPrizePromotionSingleProto::New() const {
  return new CollectPrizePromotionSingleProto;
}

void CollectPrizePromotionSingleProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    level_ = 0;
    if (has_prize()) {
      if (prize_ != NULL) prize_->::app::message::PrizeProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CollectPrizePromotionSingleProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_prize;
        break;
      }

      // optional .app.message.PrizeProto prize = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CollectPrizePromotionSingleProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }

  // optional .app.message.PrizeProto prize = 2;
  if (has_prize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->prize(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CollectPrizePromotionSingleProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }

  // optional .app.message.PrizeProto prize = 2;
  if (has_prize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->prize(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CollectPrizePromotionSingleProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // optional .app.message.PrizeProto prize = 2;
    if (has_prize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prize());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CollectPrizePromotionSingleProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CollectPrizePromotionSingleProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CollectPrizePromotionSingleProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CollectPrizePromotionSingleProto::MergeFrom(const CollectPrizePromotionSingleProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_prize()) {
      mutable_prize()->::app::message::PrizeProto::MergeFrom(from.prize());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CollectPrizePromotionSingleProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CollectPrizePromotionSingleProto::CopyFrom(const CollectPrizePromotionSingleProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CollectPrizePromotionSingleProto::IsInitialized() const {

  return true;
}

void CollectPrizePromotionSingleProto::Swap(CollectPrizePromotionSingleProto* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(prize_, other->prize_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CollectPrizePromotionSingleProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CollectPrizePromotionSingleProto_descriptor_;
  metadata.reflection = CollectPrizePromotionSingleProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpgradePromotionProto::kStartTimeFieldNumber;
const int UpgradePromotionProto::kEndTimeFieldNumber;
const int UpgradePromotionProto::kPrizeFieldNumber;
#endif  // !_MSC_VER

UpgradePromotionProto::UpgradePromotionProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UpgradePromotionProto::InitAsDefaultInstance() {
}

UpgradePromotionProto::UpgradePromotionProto(const UpgradePromotionProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UpgradePromotionProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpgradePromotionProto::~UpgradePromotionProto() {
  SharedDtor();
}

void UpgradePromotionProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void UpgradePromotionProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpgradePromotionProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpgradePromotionProto_descriptor_;
}

const UpgradePromotionProto& UpgradePromotionProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

UpgradePromotionProto* UpgradePromotionProto::default_instance_ = NULL;

UpgradePromotionProto* UpgradePromotionProto::New() const {
  return new UpgradePromotionProto;
}

void UpgradePromotionProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
  }
  prize_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpgradePromotionProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_prize;
        break;
      }

      // repeated .app.message.UpgradePromotionSingleProto prize = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_prize;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UpgradePromotionProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // repeated .app.message.UpgradePromotionSingleProto prize = 3;
  for (int i = 0; i < this->prize_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->prize(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UpgradePromotionProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // repeated .app.message.UpgradePromotionSingleProto prize = 3;
  for (int i = 0; i < this->prize_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->prize(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UpgradePromotionProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

  }
  // repeated .app.message.UpgradePromotionSingleProto prize = 3;
  total_size += 1 * this->prize_size();
  for (int i = 0; i < this->prize_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->prize(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpgradePromotionProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpgradePromotionProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpgradePromotionProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpgradePromotionProto::MergeFrom(const UpgradePromotionProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  prize_.MergeFrom(from.prize_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpgradePromotionProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpgradePromotionProto::CopyFrom(const UpgradePromotionProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpgradePromotionProto::IsInitialized() const {

  return true;
}

void UpgradePromotionProto::Swap(UpgradePromotionProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    prize_.Swap(&other->prize_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UpgradePromotionProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpgradePromotionProto_descriptor_;
  metadata.reflection = UpgradePromotionProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UpgradePromotionSingleProto::kLevelFieldNumber;
const int UpgradePromotionSingleProto::kGlobalLimitFieldNumber;
const int UpgradePromotionSingleProto::kPrizeFieldNumber;
const int UpgradePromotionSingleProto::kTypeFieldNumber;
#endif  // !_MSC_VER

UpgradePromotionSingleProto::UpgradePromotionSingleProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UpgradePromotionSingleProto::InitAsDefaultInstance() {
  prize_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
}

UpgradePromotionSingleProto::UpgradePromotionSingleProto(const UpgradePromotionSingleProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UpgradePromotionSingleProto::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0;
  global_limit_ = 0;
  prize_ = NULL;
  type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UpgradePromotionSingleProto::~UpgradePromotionSingleProto() {
  SharedDtor();
}

void UpgradePromotionSingleProto::SharedDtor() {
  if (this != default_instance_) {
    delete prize_;
  }
}

void UpgradePromotionSingleProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpgradePromotionSingleProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpgradePromotionSingleProto_descriptor_;
}

const UpgradePromotionSingleProto& UpgradePromotionSingleProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

UpgradePromotionSingleProto* UpgradePromotionSingleProto::default_instance_ = NULL;

UpgradePromotionSingleProto* UpgradePromotionSingleProto::New() const {
  return new UpgradePromotionSingleProto;
}

void UpgradePromotionSingleProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    level_ = 0;
    global_limit_ = 0;
    if (has_prize()) {
      if (prize_ != NULL) prize_->::app::message::PrizeProto::Clear();
    }
    type_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UpgradePromotionSingleProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_global_limit;
        break;
      }

      // optional int32 global_limit = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_global_limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &global_limit_)));
          set_has_global_limit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_prize;
        break;
      }

      // optional .app.message.PrizeProto prize = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_type;
        break;
      }

      // optional .app.message.UpgradePromotionProtoType type = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::app::message::UpgradePromotionProtoType_IsValid(value)) {
            set_type(static_cast< ::app::message::UpgradePromotionProtoType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UpgradePromotionSingleProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }

  // optional int32 global_limit = 2;
  if (has_global_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->global_limit(), output);
  }

  // optional .app.message.PrizeProto prize = 4;
  if (has_prize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->prize(), output);
  }

  // optional .app.message.UpgradePromotionProtoType type = 5;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UpgradePromotionSingleProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }

  // optional int32 global_limit = 2;
  if (has_global_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->global_limit(), target);
  }

  // optional .app.message.PrizeProto prize = 4;
  if (has_prize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->prize(), target);
  }

  // optional .app.message.UpgradePromotionProtoType type = 5;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UpgradePromotionSingleProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // optional int32 global_limit = 2;
    if (has_global_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->global_limit());
    }

    // optional .app.message.PrizeProto prize = 4;
    if (has_prize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prize());
    }

    // optional .app.message.UpgradePromotionProtoType type = 5;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpgradePromotionSingleProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UpgradePromotionSingleProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UpgradePromotionSingleProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UpgradePromotionSingleProto::MergeFrom(const UpgradePromotionSingleProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_global_limit()) {
      set_global_limit(from.global_limit());
    }
    if (from.has_prize()) {
      mutable_prize()->::app::message::PrizeProto::MergeFrom(from.prize());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UpgradePromotionSingleProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpgradePromotionSingleProto::CopyFrom(const UpgradePromotionSingleProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpgradePromotionSingleProto::IsInitialized() const {

  return true;
}

void UpgradePromotionSingleProto::Swap(UpgradePromotionSingleProto* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(global_limit_, other->global_limit_);
    std::swap(prize_, other->prize_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UpgradePromotionSingleProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpgradePromotionSingleProto_descriptor_;
  metadata.reflection = UpgradePromotionSingleProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AllServerStartRankPromotionProto::kPromotionFieldNumber;
#endif  // !_MSC_VER

AllServerStartRankPromotionProto::AllServerStartRankPromotionProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AllServerStartRankPromotionProto::InitAsDefaultInstance() {
}

AllServerStartRankPromotionProto::AllServerStartRankPromotionProto(const AllServerStartRankPromotionProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AllServerStartRankPromotionProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AllServerStartRankPromotionProto::~AllServerStartRankPromotionProto() {
  SharedDtor();
}

void AllServerStartRankPromotionProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AllServerStartRankPromotionProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllServerStartRankPromotionProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AllServerStartRankPromotionProto_descriptor_;
}

const AllServerStartRankPromotionProto& AllServerStartRankPromotionProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

AllServerStartRankPromotionProto* AllServerStartRankPromotionProto::default_instance_ = NULL;

AllServerStartRankPromotionProto* AllServerStartRankPromotionProto::New() const {
  return new AllServerStartRankPromotionProto;
}

void AllServerStartRankPromotionProto::Clear() {
  promotion_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AllServerStartRankPromotionProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .app.message.RankPromotionProto promotion = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_promotion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_promotion()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_promotion;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AllServerStartRankPromotionProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .app.message.RankPromotionProto promotion = 1;
  for (int i = 0; i < this->promotion_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->promotion(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AllServerStartRankPromotionProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .app.message.RankPromotionProto promotion = 1;
  for (int i = 0; i < this->promotion_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->promotion(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AllServerStartRankPromotionProto::ByteSize() const {
  int total_size = 0;

  // repeated .app.message.RankPromotionProto promotion = 1;
  total_size += 1 * this->promotion_size();
  for (int i = 0; i < this->promotion_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->promotion(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllServerStartRankPromotionProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AllServerStartRankPromotionProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AllServerStartRankPromotionProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AllServerStartRankPromotionProto::MergeFrom(const AllServerStartRankPromotionProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  promotion_.MergeFrom(from.promotion_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AllServerStartRankPromotionProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllServerStartRankPromotionProto::CopyFrom(const AllServerStartRankPromotionProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllServerStartRankPromotionProto::IsInitialized() const {

  return true;
}

void AllServerStartRankPromotionProto::Swap(AllServerStartRankPromotionProto* other) {
  if (other != this) {
    promotion_.Swap(&other->promotion_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AllServerStartRankPromotionProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AllServerStartRankPromotionProto_descriptor_;
  metadata.reflection = AllServerStartRankPromotionProto_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* RankPromotionProto_RankPromotionProtoType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RankPromotionProto_RankPromotionProtoType_descriptor_;
}
bool RankPromotionProto_RankPromotionProtoType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const RankPromotionProto_RankPromotionProtoType RankPromotionProto::FIGHT_AMOUNT;
const RankPromotionProto_RankPromotionProtoType RankPromotionProto::MOUNT;
const RankPromotionProto_RankPromotionProtoType RankPromotionProto::TIAN_JIE;
const RankPromotionProto_RankPromotionProtoType RankPromotionProto::TIAN_ZUI;
const RankPromotionProto_RankPromotionProtoType RankPromotionProto::ZHAN_JIA;
const RankPromotionProto_RankPromotionProtoType RankPromotionProto::SUPER_ARM;
const RankPromotionProto_RankPromotionProtoType RankPromotionProto::RankPromotionProtoType_MIN;
const RankPromotionProto_RankPromotionProtoType RankPromotionProto::RankPromotionProtoType_MAX;
const int RankPromotionProto::RankPromotionProtoType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int RankPromotionProto::kStartTimeFieldNumber;
const int RankPromotionProto::kEndTimeFieldNumber;
const int RankPromotionProto::kTypeFieldNumber;
const int RankPromotionProto::kTitleFieldNumber;
const int RankPromotionProto::kNameFieldNumber;
const int RankPromotionProto::kRuleFieldNumber;
const int RankPromotionProto::kPrizeFieldNumber;
const int RankPromotionProto::kMinRechargeFieldNumber;
#endif  // !_MSC_VER

RankPromotionProto::RankPromotionProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RankPromotionProto::InitAsDefaultInstance() {
}

RankPromotionProto::RankPromotionProto(const RankPromotionProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RankPromotionProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  type_ = 1;
  title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rule_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  min_recharge_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RankPromotionProto::~RankPromotionProto() {
  SharedDtor();
}

void RankPromotionProto::SharedDtor() {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    delete title_;
  }
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (rule_ != &::google::protobuf::internal::kEmptyString) {
    delete rule_;
  }
  if (this != default_instance_) {
  }
}

void RankPromotionProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RankPromotionProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RankPromotionProto_descriptor_;
}

const RankPromotionProto& RankPromotionProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

RankPromotionProto* RankPromotionProto::default_instance_ = NULL;

RankPromotionProto* RankPromotionProto::New() const {
  return new RankPromotionProto;
}

void RankPromotionProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    type_ = 1;
    if (has_title()) {
      if (title_ != &::google::protobuf::internal::kEmptyString) {
        title_->clear();
      }
    }
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_rule()) {
      if (rule_ != &::google::protobuf::internal::kEmptyString) {
        rule_->clear();
      }
    }
    min_recharge_ = 0;
  }
  prize_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RankPromotionProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }

      // optional .app.message.RankPromotionProto.RankPromotionProtoType type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::app::message::RankPromotionProto_RankPromotionProtoType_IsValid(value)) {
            set_type(static_cast< ::app::message::RankPromotionProto_RankPromotionProtoType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_title;
        break;
      }

      // optional string title = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_name;
        break;
      }

      // optional string name = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_rule;
        break;
      }

      // optional string rule = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rule:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rule()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rule().data(), this->rule().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_prize;
        break;
      }

      // repeated .app.message.RankPromotionSingleProto prize = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_prize;
        if (input->ExpectTag(64)) goto parse_min_recharge;
        break;
      }

      // optional int32 min_recharge = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_min_recharge:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &min_recharge_)));
          set_has_min_recharge();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RankPromotionProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // optional .app.message.RankPromotionProto.RankPromotionProtoType type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  // optional string title = 4;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->title(), output);
  }

  // optional string name = 5;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->name(), output);
  }

  // optional string rule = 6;
  if (has_rule()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rule().data(), this->rule().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->rule(), output);
  }

  // repeated .app.message.RankPromotionSingleProto prize = 7;
  for (int i = 0; i < this->prize_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->prize(i), output);
  }

  // optional int32 min_recharge = 8;
  if (has_min_recharge()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->min_recharge(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RankPromotionProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // optional .app.message.RankPromotionProto.RankPromotionProtoType type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  // optional string title = 4;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->title(), target);
  }

  // optional string name = 5;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  // optional string rule = 6;
  if (has_rule()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rule().data(), this->rule().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->rule(), target);
  }

  // repeated .app.message.RankPromotionSingleProto prize = 7;
  for (int i = 0; i < this->prize_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->prize(i), target);
  }

  // optional int32 min_recharge = 8;
  if (has_min_recharge()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->min_recharge(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RankPromotionProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional .app.message.RankPromotionProto.RankPromotionProtoType type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional string title = 4;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string name = 5;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string rule = 6;
    if (has_rule()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rule());
    }

    // optional int32 min_recharge = 8;
    if (has_min_recharge()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->min_recharge());
    }

  }
  // repeated .app.message.RankPromotionSingleProto prize = 7;
  total_size += 1 * this->prize_size();
  for (int i = 0; i < this->prize_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->prize(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RankPromotionProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RankPromotionProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RankPromotionProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RankPromotionProto::MergeFrom(const RankPromotionProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  prize_.MergeFrom(from.prize_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_title()) {
      set_title(from.title());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_rule()) {
      set_rule(from.rule());
    }
    if (from.has_min_recharge()) {
      set_min_recharge(from.min_recharge());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RankPromotionProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RankPromotionProto::CopyFrom(const RankPromotionProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RankPromotionProto::IsInitialized() const {

  return true;
}

void RankPromotionProto::Swap(RankPromotionProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    std::swap(type_, other->type_);
    std::swap(title_, other->title_);
    std::swap(name_, other->name_);
    std::swap(rule_, other->rule_);
    prize_.Swap(&other->prize_);
    std::swap(min_recharge_, other->min_recharge_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RankPromotionProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RankPromotionProto_descriptor_;
  metadata.reflection = RankPromotionProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RankPromotionSingleProto::kGoodsFieldNumber;
const int RankPromotionSingleProto::kLevelFieldNumber;
const int RankPromotionSingleProto::kMinRankFieldNumber;
const int RankPromotionSingleProto::kMaxRankFieldNumber;
#endif  // !_MSC_VER

RankPromotionSingleProto::RankPromotionSingleProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RankPromotionSingleProto::InitAsDefaultInstance() {
}

RankPromotionSingleProto::RankPromotionSingleProto(const RankPromotionSingleProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RankPromotionSingleProto::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0;
  min_rank_ = 0;
  max_rank_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RankPromotionSingleProto::~RankPromotionSingleProto() {
  SharedDtor();
}

void RankPromotionSingleProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RankPromotionSingleProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RankPromotionSingleProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RankPromotionSingleProto_descriptor_;
}

const RankPromotionSingleProto& RankPromotionSingleProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

RankPromotionSingleProto* RankPromotionSingleProto::default_instance_ = NULL;

RankPromotionSingleProto* RankPromotionSingleProto::New() const {
  return new RankPromotionSingleProto;
}

void RankPromotionSingleProto::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    level_ = 0;
    min_rank_ = 0;
    max_rank_ = 0;
  }
  goods_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RankPromotionSingleProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .app.message.GoodsWrapperProto goods = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_goods:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_goods()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_goods;
        if (input->ExpectTag(16)) goto parse_level;
        break;
      }

      // optional int32 level = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_min_rank;
        break;
      }

      // optional int32 min_rank = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_min_rank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &min_rank_)));
          set_has_min_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_max_rank;
        break;
      }

      // optional int32 max_rank = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_max_rank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_rank_)));
          set_has_max_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RankPromotionSingleProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .app.message.GoodsWrapperProto goods = 1;
  for (int i = 0; i < this->goods_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->goods(i), output);
  }

  // optional int32 level = 2;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->level(), output);
  }

  // optional int32 min_rank = 3;
  if (has_min_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->min_rank(), output);
  }

  // optional int32 max_rank = 4;
  if (has_max_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->max_rank(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RankPromotionSingleProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .app.message.GoodsWrapperProto goods = 1;
  for (int i = 0; i < this->goods_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->goods(i), target);
  }

  // optional int32 level = 2;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->level(), target);
  }

  // optional int32 min_rank = 3;
  if (has_min_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->min_rank(), target);
  }

  // optional int32 max_rank = 4;
  if (has_max_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->max_rank(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RankPromotionSingleProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 level = 2;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // optional int32 min_rank = 3;
    if (has_min_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->min_rank());
    }

    // optional int32 max_rank = 4;
    if (has_max_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_rank());
    }

  }
  // repeated .app.message.GoodsWrapperProto goods = 1;
  total_size += 1 * this->goods_size();
  for (int i = 0; i < this->goods_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->goods(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RankPromotionSingleProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RankPromotionSingleProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RankPromotionSingleProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RankPromotionSingleProto::MergeFrom(const RankPromotionSingleProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  goods_.MergeFrom(from.goods_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_min_rank()) {
      set_min_rank(from.min_rank());
    }
    if (from.has_max_rank()) {
      set_max_rank(from.max_rank());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RankPromotionSingleProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RankPromotionSingleProto::CopyFrom(const RankPromotionSingleProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RankPromotionSingleProto::IsInitialized() const {

  return true;
}

void RankPromotionSingleProto::Swap(RankPromotionSingleProto* other) {
  if (other != this) {
    goods_.Swap(&other->goods_);
    std::swap(level_, other->level_);
    std::swap(min_rank_, other->min_rank_);
    std::swap(max_rank_, other->max_rank_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RankPromotionSingleProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RankPromotionSingleProto_descriptor_;
  metadata.reflection = RankPromotionSingleProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int UnionRankPromotionProto::kStartTimeFieldNumber;
const int UnionRankPromotionProto::kEndTimeFieldNumber;
const int UnionRankPromotionProto::kTitleFieldNumber;
const int UnionRankPromotionProto::kNameFieldNumber;
const int UnionRankPromotionProto::kRuleFieldNumber;
const int UnionRankPromotionProto::kLeaderGoodsFieldNumber;
const int UnionRankPromotionProto::kWinnerGoodsFieldNumber;
const int UnionRankPromotionProto::kLoserGoodsFieldNumber;
#endif  // !_MSC_VER

UnionRankPromotionProto::UnionRankPromotionProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void UnionRankPromotionProto::InitAsDefaultInstance() {
}

UnionRankPromotionProto::UnionRankPromotionProto(const UnionRankPromotionProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void UnionRankPromotionProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  title_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  rule_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnionRankPromotionProto::~UnionRankPromotionProto() {
  SharedDtor();
}

void UnionRankPromotionProto::SharedDtor() {
  if (title_ != &::google::protobuf::internal::kEmptyString) {
    delete title_;
  }
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (rule_ != &::google::protobuf::internal::kEmptyString) {
    delete rule_;
  }
  if (this != default_instance_) {
  }
}

void UnionRankPromotionProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnionRankPromotionProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnionRankPromotionProto_descriptor_;
}

const UnionRankPromotionProto& UnionRankPromotionProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

UnionRankPromotionProto* UnionRankPromotionProto::default_instance_ = NULL;

UnionRankPromotionProto* UnionRankPromotionProto::New() const {
  return new UnionRankPromotionProto;
}

void UnionRankPromotionProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    if (has_title()) {
      if (title_ != &::google::protobuf::internal::kEmptyString) {
        title_->clear();
      }
    }
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_rule()) {
      if (rule_ != &::google::protobuf::internal::kEmptyString) {
        rule_->clear();
      }
    }
  }
  leader_goods_.Clear();
  winner_goods_.Clear();
  loser_goods_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool UnionRankPromotionProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_title;
        break;
      }

      // optional string title = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_name;
        break;
      }

      // optional string name = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_rule;
        break;
      }

      // optional string rule = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rule:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rule()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rule().data(), this->rule().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_leader_goods;
        break;
      }

      // repeated .app.message.GoodsWrapperProto leader_goods = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_leader_goods:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_leader_goods()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_leader_goods;
        if (input->ExpectTag(66)) goto parse_winner_goods;
        break;
      }

      // repeated .app.message.GoodsWrapperProto winner_goods = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_winner_goods:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_winner_goods()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_winner_goods;
        if (input->ExpectTag(74)) goto parse_loser_goods;
        break;
      }

      // repeated .app.message.GoodsWrapperProto loser_goods = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_loser_goods:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_loser_goods()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_loser_goods;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void UnionRankPromotionProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // optional string title = 4;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->title(), output);
  }

  // optional string name = 5;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->name(), output);
  }

  // optional string rule = 6;
  if (has_rule()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rule().data(), this->rule().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->rule(), output);
  }

  // repeated .app.message.GoodsWrapperProto leader_goods = 7;
  for (int i = 0; i < this->leader_goods_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->leader_goods(i), output);
  }

  // repeated .app.message.GoodsWrapperProto winner_goods = 8;
  for (int i = 0; i < this->winner_goods_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->winner_goods(i), output);
  }

  // repeated .app.message.GoodsWrapperProto loser_goods = 9;
  for (int i = 0; i < this->loser_goods_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->loser_goods(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* UnionRankPromotionProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // optional string title = 4;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->title(), target);
  }

  // optional string name = 5;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  // optional string rule = 6;
  if (has_rule()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rule().data(), this->rule().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->rule(), target);
  }

  // repeated .app.message.GoodsWrapperProto leader_goods = 7;
  for (int i = 0; i < this->leader_goods_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->leader_goods(i), target);
  }

  // repeated .app.message.GoodsWrapperProto winner_goods = 8;
  for (int i = 0; i < this->winner_goods_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->winner_goods(i), target);
  }

  // repeated .app.message.GoodsWrapperProto loser_goods = 9;
  for (int i = 0; i < this->loser_goods_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->loser_goods(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int UnionRankPromotionProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional string title = 4;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string name = 5;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string rule = 6;
    if (has_rule()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rule());
    }

  }
  // repeated .app.message.GoodsWrapperProto leader_goods = 7;
  total_size += 1 * this->leader_goods_size();
  for (int i = 0; i < this->leader_goods_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->leader_goods(i));
  }

  // repeated .app.message.GoodsWrapperProto winner_goods = 8;
  total_size += 1 * this->winner_goods_size();
  for (int i = 0; i < this->winner_goods_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->winner_goods(i));
  }

  // repeated .app.message.GoodsWrapperProto loser_goods = 9;
  total_size += 1 * this->loser_goods_size();
  for (int i = 0; i < this->loser_goods_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->loser_goods(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnionRankPromotionProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const UnionRankPromotionProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const UnionRankPromotionProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UnionRankPromotionProto::MergeFrom(const UnionRankPromotionProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  leader_goods_.MergeFrom(from.leader_goods_);
  winner_goods_.MergeFrom(from.winner_goods_);
  loser_goods_.MergeFrom(from.loser_goods_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_title()) {
      set_title(from.title());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_rule()) {
      set_rule(from.rule());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void UnionRankPromotionProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnionRankPromotionProto::CopyFrom(const UnionRankPromotionProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnionRankPromotionProto::IsInitialized() const {

  return true;
}

void UnionRankPromotionProto::Swap(UnionRankPromotionProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    std::swap(title_, other->title_);
    std::swap(name_, other->name_);
    std::swap(rule_, other->rule_);
    leader_goods_.Swap(&other->leader_goods_);
    winner_goods_.Swap(&other->winner_goods_);
    loser_goods_.Swap(&other->loser_goods_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata UnionRankPromotionProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnionRankPromotionProto_descriptor_;
  metadata.reflection = UnionRankPromotionProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DailyConsumeProto::kStartTimeFieldNumber;
const int DailyConsumeProto::kEndTimeFieldNumber;
const int DailyConsumeProto::kPrizeFieldNumber;
#endif  // !_MSC_VER

DailyConsumeProto::DailyConsumeProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DailyConsumeProto::InitAsDefaultInstance() {
}

DailyConsumeProto::DailyConsumeProto(const DailyConsumeProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DailyConsumeProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DailyConsumeProto::~DailyConsumeProto() {
  SharedDtor();
}

void DailyConsumeProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DailyConsumeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DailyConsumeProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DailyConsumeProto_descriptor_;
}

const DailyConsumeProto& DailyConsumeProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

DailyConsumeProto* DailyConsumeProto::default_instance_ = NULL;

DailyConsumeProto* DailyConsumeProto::New() const {
  return new DailyConsumeProto;
}

void DailyConsumeProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
  }
  prize_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DailyConsumeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_prize;
        break;
      }

      // repeated .app.message.DailyConsumeSingleProto prize = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_prize;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DailyConsumeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // repeated .app.message.DailyConsumeSingleProto prize = 3;
  for (int i = 0; i < this->prize_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->prize(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DailyConsumeProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // repeated .app.message.DailyConsumeSingleProto prize = 3;
  for (int i = 0; i < this->prize_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->prize(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DailyConsumeProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

  }
  // repeated .app.message.DailyConsumeSingleProto prize = 3;
  total_size += 1 * this->prize_size();
  for (int i = 0; i < this->prize_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->prize(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DailyConsumeProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DailyConsumeProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DailyConsumeProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DailyConsumeProto::MergeFrom(const DailyConsumeProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  prize_.MergeFrom(from.prize_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DailyConsumeProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DailyConsumeProto::CopyFrom(const DailyConsumeProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyConsumeProto::IsInitialized() const {

  return true;
}

void DailyConsumeProto::Swap(DailyConsumeProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    prize_.Swap(&other->prize_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DailyConsumeProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DailyConsumeProto_descriptor_;
  metadata.reflection = DailyConsumeProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DailyConsumeSingleProto::kYuanbaoFieldNumber;
const int DailyConsumeSingleProto::kLimitFieldNumber;
const int DailyConsumeSingleProto::kRequireVipLevelFieldNumber;
const int DailyConsumeSingleProto::kPrizeFieldNumber;
#endif  // !_MSC_VER

DailyConsumeSingleProto::DailyConsumeSingleProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DailyConsumeSingleProto::InitAsDefaultInstance() {
  prize_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
}

DailyConsumeSingleProto::DailyConsumeSingleProto(const DailyConsumeSingleProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DailyConsumeSingleProto::SharedCtor() {
  _cached_size_ = 0;
  yuanbao_ = 0;
  limit_ = 0;
  require_vip_level_ = 0;
  prize_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DailyConsumeSingleProto::~DailyConsumeSingleProto() {
  SharedDtor();
}

void DailyConsumeSingleProto::SharedDtor() {
  if (this != default_instance_) {
    delete prize_;
  }
}

void DailyConsumeSingleProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DailyConsumeSingleProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DailyConsumeSingleProto_descriptor_;
}

const DailyConsumeSingleProto& DailyConsumeSingleProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

DailyConsumeSingleProto* DailyConsumeSingleProto::default_instance_ = NULL;

DailyConsumeSingleProto* DailyConsumeSingleProto::New() const {
  return new DailyConsumeSingleProto;
}

void DailyConsumeSingleProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    yuanbao_ = 0;
    limit_ = 0;
    require_vip_level_ = 0;
    if (has_prize()) {
      if (prize_ != NULL) prize_->::app::message::PrizeProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DailyConsumeSingleProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 yuanbao = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yuanbao_)));
          set_has_yuanbao();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_limit;
        break;
      }

      // optional int32 limit = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &limit_)));
          set_has_limit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_require_vip_level;
        break;
      }

      // optional int32 require_vip_level = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_require_vip_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &require_vip_level_)));
          set_has_require_vip_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_prize;
        break;
      }

      // optional .app.message.PrizeProto prize = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DailyConsumeSingleProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 yuanbao = 1;
  if (has_yuanbao()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->yuanbao(), output);
  }

  // optional int32 limit = 2;
  if (has_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->limit(), output);
  }

  // optional int32 require_vip_level = 3;
  if (has_require_vip_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->require_vip_level(), output);
  }

  // optional .app.message.PrizeProto prize = 4;
  if (has_prize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->prize(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DailyConsumeSingleProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 yuanbao = 1;
  if (has_yuanbao()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->yuanbao(), target);
  }

  // optional int32 limit = 2;
  if (has_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->limit(), target);
  }

  // optional int32 require_vip_level = 3;
  if (has_require_vip_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->require_vip_level(), target);
  }

  // optional .app.message.PrizeProto prize = 4;
  if (has_prize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->prize(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DailyConsumeSingleProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 yuanbao = 1;
    if (has_yuanbao()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->yuanbao());
    }

    // optional int32 limit = 2;
    if (has_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->limit());
    }

    // optional int32 require_vip_level = 3;
    if (has_require_vip_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->require_vip_level());
    }

    // optional .app.message.PrizeProto prize = 4;
    if (has_prize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prize());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DailyConsumeSingleProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DailyConsumeSingleProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DailyConsumeSingleProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DailyConsumeSingleProto::MergeFrom(const DailyConsumeSingleProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_yuanbao()) {
      set_yuanbao(from.yuanbao());
    }
    if (from.has_limit()) {
      set_limit(from.limit());
    }
    if (from.has_require_vip_level()) {
      set_require_vip_level(from.require_vip_level());
    }
    if (from.has_prize()) {
      mutable_prize()->::app::message::PrizeProto::MergeFrom(from.prize());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DailyConsumeSingleProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DailyConsumeSingleProto::CopyFrom(const DailyConsumeSingleProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyConsumeSingleProto::IsInitialized() const {

  return true;
}

void DailyConsumeSingleProto::Swap(DailyConsumeSingleProto* other) {
  if (other != this) {
    std::swap(yuanbao_, other->yuanbao_);
    std::swap(limit_, other->limit_);
    std::swap(require_vip_level_, other->require_vip_level_);
    std::swap(prize_, other->prize_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DailyConsumeSingleProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DailyConsumeSingleProto_descriptor_;
  metadata.reflection = DailyConsumeSingleProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TaskPromotionProto::kStartTimeFieldNumber;
const int TaskPromotionProto::kEndTimeFieldNumber;
const int TaskPromotionProto::kPointsFieldNumber;
const int TaskPromotionProto::kCollectedPointPrizeFieldNumber;
const int TaskPromotionProto::kTaskNameFieldNumber;
const int TaskPromotionProto::kGoalTargetFieldNumber;
const int TaskPromotionProto::kGoalCurrentFieldNumber;
const int TaskPromotionProto::kTaskPrizeFieldNumber;
const int TaskPromotionProto::kPrizeCollectedFieldNumber;
#endif  // !_MSC_VER

TaskPromotionProto::TaskPromotionProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TaskPromotionProto::InitAsDefaultInstance() {
}

TaskPromotionProto::TaskPromotionProto(const TaskPromotionProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TaskPromotionProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  points_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TaskPromotionProto::~TaskPromotionProto() {
  SharedDtor();
}

void TaskPromotionProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TaskPromotionProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskPromotionProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TaskPromotionProto_descriptor_;
}

const TaskPromotionProto& TaskPromotionProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

TaskPromotionProto* TaskPromotionProto::default_instance_ = NULL;

TaskPromotionProto* TaskPromotionProto::New() const {
  return new TaskPromotionProto;
}

void TaskPromotionProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    points_ = 0;
  }
  collected_point_prize_.Clear();
  task_name_.Clear();
  goal_target_.Clear();
  goal_current_.Clear();
  task_prize_.Clear();
  prize_collected_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TaskPromotionProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_points;
        break;
      }

      // optional int32 points = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_points:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &points_)));
          set_has_points();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_task_name;
        break;
      }

      // repeated string task_name = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_task_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_task_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->task_name(this->task_name_size() - 1).data(),
            this->task_name(this->task_name_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_task_name;
        if (input->ExpectTag(40)) goto parse_goal_target;
        break;
      }

      // repeated int32 goal_target = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_goal_target:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_goal_target())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_goal_target())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_goal_target;
        if (input->ExpectTag(48)) goto parse_goal_current;
        break;
      }

      // repeated int32 goal_current = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_goal_current:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 48, input, this->mutable_goal_current())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_goal_current())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_goal_current;
        if (input->ExpectTag(58)) goto parse_task_prize;
        break;
      }

      // repeated .app.message.PrizeProto task_prize = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_task_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_task_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_task_prize;
        if (input->ExpectTag(64)) goto parse_prize_collected;
        break;
      }

      // repeated bool prize_collected = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_prize_collected:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 1, 64, input, this->mutable_prize_collected())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_prize_collected())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_prize_collected;
        if (input->ExpectTag(96)) goto parse_collected_point_prize;
        break;
      }

      // repeated int32 collected_point_prize = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_collected_point_prize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 96, input, this->mutable_collected_point_prize())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_collected_point_prize())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_collected_point_prize;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TaskPromotionProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // optional int32 points = 3;
  if (has_points()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->points(), output);
  }

  // repeated string task_name = 4;
  for (int i = 0; i < this->task_name_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->task_name(i).data(), this->task_name(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->task_name(i), output);
  }

  // repeated int32 goal_target = 5;
  for (int i = 0; i < this->goal_target_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->goal_target(i), output);
  }

  // repeated int32 goal_current = 6;
  for (int i = 0; i < this->goal_current_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      6, this->goal_current(i), output);
  }

  // repeated .app.message.PrizeProto task_prize = 7;
  for (int i = 0; i < this->task_prize_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->task_prize(i), output);
  }

  // repeated bool prize_collected = 8;
  for (int i = 0; i < this->prize_collected_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      8, this->prize_collected(i), output);
  }

  // repeated int32 collected_point_prize = 12;
  for (int i = 0; i < this->collected_point_prize_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      12, this->collected_point_prize(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TaskPromotionProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // optional int32 points = 3;
  if (has_points()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->points(), target);
  }

  // repeated string task_name = 4;
  for (int i = 0; i < this->task_name_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->task_name(i).data(), this->task_name(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->task_name(i), target);
  }

  // repeated int32 goal_target = 5;
  for (int i = 0; i < this->goal_target_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->goal_target(i), target);
  }

  // repeated int32 goal_current = 6;
  for (int i = 0; i < this->goal_current_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(6, this->goal_current(i), target);
  }

  // repeated .app.message.PrizeProto task_prize = 7;
  for (int i = 0; i < this->task_prize_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->task_prize(i), target);
  }

  // repeated bool prize_collected = 8;
  for (int i = 0; i < this->prize_collected_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolToArray(8, this->prize_collected(i), target);
  }

  // repeated int32 collected_point_prize = 12;
  for (int i = 0; i < this->collected_point_prize_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(12, this->collected_point_prize(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TaskPromotionProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional int32 points = 3;
    if (has_points()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->points());
    }

  }
  // repeated int32 collected_point_prize = 12;
  {
    int data_size = 0;
    for (int i = 0; i < this->collected_point_prize_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->collected_point_prize(i));
    }
    total_size += 1 * this->collected_point_prize_size() + data_size;
  }

  // repeated string task_name = 4;
  total_size += 1 * this->task_name_size();
  for (int i = 0; i < this->task_name_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->task_name(i));
  }

  // repeated int32 goal_target = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->goal_target_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->goal_target(i));
    }
    total_size += 1 * this->goal_target_size() + data_size;
  }

  // repeated int32 goal_current = 6;
  {
    int data_size = 0;
    for (int i = 0; i < this->goal_current_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->goal_current(i));
    }
    total_size += 1 * this->goal_current_size() + data_size;
  }

  // repeated .app.message.PrizeProto task_prize = 7;
  total_size += 1 * this->task_prize_size();
  for (int i = 0; i < this->task_prize_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->task_prize(i));
  }

  // repeated bool prize_collected = 8;
  {
    int data_size = 0;
    data_size = 1 * this->prize_collected_size();
    total_size += 1 * this->prize_collected_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskPromotionProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TaskPromotionProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TaskPromotionProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TaskPromotionProto::MergeFrom(const TaskPromotionProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  collected_point_prize_.MergeFrom(from.collected_point_prize_);
  task_name_.MergeFrom(from.task_name_);
  goal_target_.MergeFrom(from.goal_target_);
  goal_current_.MergeFrom(from.goal_current_);
  task_prize_.MergeFrom(from.task_prize_);
  prize_collected_.MergeFrom(from.prize_collected_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_points()) {
      set_points(from.points());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TaskPromotionProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskPromotionProto::CopyFrom(const TaskPromotionProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskPromotionProto::IsInitialized() const {

  return true;
}

void TaskPromotionProto::Swap(TaskPromotionProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    std::swap(points_, other->points_);
    collected_point_prize_.Swap(&other->collected_point_prize_);
    task_name_.Swap(&other->task_name_);
    goal_target_.Swap(&other->goal_target_);
    goal_current_.Swap(&other->goal_current_);
    task_prize_.Swap(&other->task_prize_);
    prize_collected_.Swap(&other->prize_collected_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TaskPromotionProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TaskPromotionProto_descriptor_;
  metadata.reflection = TaskPromotionProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TaskPromotionPrizeListProto::kRequiredPointFieldNumber;
const int TaskPromotionPrizeListProto::kPrizeFieldNumber;
#endif  // !_MSC_VER

TaskPromotionPrizeListProto::TaskPromotionPrizeListProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TaskPromotionPrizeListProto::InitAsDefaultInstance() {
}

TaskPromotionPrizeListProto::TaskPromotionPrizeListProto(const TaskPromotionPrizeListProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TaskPromotionPrizeListProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TaskPromotionPrizeListProto::~TaskPromotionPrizeListProto() {
  SharedDtor();
}

void TaskPromotionPrizeListProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TaskPromotionPrizeListProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskPromotionPrizeListProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TaskPromotionPrizeListProto_descriptor_;
}

const TaskPromotionPrizeListProto& TaskPromotionPrizeListProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

TaskPromotionPrizeListProto* TaskPromotionPrizeListProto::default_instance_ = NULL;

TaskPromotionPrizeListProto* TaskPromotionPrizeListProto::New() const {
  return new TaskPromotionPrizeListProto;
}

void TaskPromotionPrizeListProto::Clear() {
  required_point_.Clear();
  prize_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TaskPromotionPrizeListProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 required_point = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_required_point:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_required_point())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_required_point())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_required_point;
        if (input->ExpectTag(18)) goto parse_prize;
        break;
      }

      // repeated .app.message.PrizeProto prize = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_prize;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TaskPromotionPrizeListProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 required_point = 1;
  for (int i = 0; i < this->required_point_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->required_point(i), output);
  }

  // repeated .app.message.PrizeProto prize = 2;
  for (int i = 0; i < this->prize_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->prize(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TaskPromotionPrizeListProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 required_point = 1;
  for (int i = 0; i < this->required_point_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->required_point(i), target);
  }

  // repeated .app.message.PrizeProto prize = 2;
  for (int i = 0; i < this->prize_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->prize(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TaskPromotionPrizeListProto::ByteSize() const {
  int total_size = 0;

  // repeated int32 required_point = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->required_point_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->required_point(i));
    }
    total_size += 1 * this->required_point_size() + data_size;
  }

  // repeated .app.message.PrizeProto prize = 2;
  total_size += 1 * this->prize_size();
  for (int i = 0; i < this->prize_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->prize(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskPromotionPrizeListProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TaskPromotionPrizeListProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TaskPromotionPrizeListProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TaskPromotionPrizeListProto::MergeFrom(const TaskPromotionPrizeListProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  required_point_.MergeFrom(from.required_point_);
  prize_.MergeFrom(from.prize_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TaskPromotionPrizeListProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskPromotionPrizeListProto::CopyFrom(const TaskPromotionPrizeListProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskPromotionPrizeListProto::IsInitialized() const {

  return true;
}

void TaskPromotionPrizeListProto::Swap(TaskPromotionPrizeListProto* other) {
  if (other != this) {
    required_point_.Swap(&other->required_point_);
    prize_.Swap(&other->prize_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TaskPromotionPrizeListProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TaskPromotionPrizeListProto_descriptor_;
  metadata.reflection = TaskPromotionPrizeListProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int TaskPromotionRankDatasProto::kStartTimeFieldNumber;
const int TaskPromotionRankDatasProto::kEndTimeFieldNumber;
const int TaskPromotionRankDatasProto::kCanSeeDaysAfterEndFieldNumber;
const int TaskPromotionRankDatasProto::kPrize1FieldNumber;
const int TaskPromotionRankDatasProto::kPrize2FieldNumber;
const int TaskPromotionRankDatasProto::kPrize3FieldNumber;
const int TaskPromotionRankDatasProto::kPrize410FieldNumber;
const int TaskPromotionRankDatasProto::kPrize11100FieldNumber;
#endif  // !_MSC_VER

TaskPromotionRankDatasProto::TaskPromotionRankDatasProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void TaskPromotionRankDatasProto::InitAsDefaultInstance() {
  prize_1_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
  prize_2_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
  prize_3_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
  prize_4_10_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
  prize_11_100_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
}

TaskPromotionRankDatasProto::TaskPromotionRankDatasProto(const TaskPromotionRankDatasProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void TaskPromotionRankDatasProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  can_see_days_after_end_ = 0;
  prize_1_ = NULL;
  prize_2_ = NULL;
  prize_3_ = NULL;
  prize_4_10_ = NULL;
  prize_11_100_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TaskPromotionRankDatasProto::~TaskPromotionRankDatasProto() {
  SharedDtor();
}

void TaskPromotionRankDatasProto::SharedDtor() {
  if (this != default_instance_) {
    delete prize_1_;
    delete prize_2_;
    delete prize_3_;
    delete prize_4_10_;
    delete prize_11_100_;
  }
}

void TaskPromotionRankDatasProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TaskPromotionRankDatasProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TaskPromotionRankDatasProto_descriptor_;
}

const TaskPromotionRankDatasProto& TaskPromotionRankDatasProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

TaskPromotionRankDatasProto* TaskPromotionRankDatasProto::default_instance_ = NULL;

TaskPromotionRankDatasProto* TaskPromotionRankDatasProto::New() const {
  return new TaskPromotionRankDatasProto;
}

void TaskPromotionRankDatasProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    can_see_days_after_end_ = 0;
    if (has_prize_1()) {
      if (prize_1_ != NULL) prize_1_->::app::message::PrizeProto::Clear();
    }
    if (has_prize_2()) {
      if (prize_2_ != NULL) prize_2_->::app::message::PrizeProto::Clear();
    }
    if (has_prize_3()) {
      if (prize_3_ != NULL) prize_3_->::app::message::PrizeProto::Clear();
    }
    if (has_prize_4_10()) {
      if (prize_4_10_ != NULL) prize_4_10_->::app::message::PrizeProto::Clear();
    }
    if (has_prize_11_100()) {
      if (prize_11_100_ != NULL) prize_11_100_->::app::message::PrizeProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TaskPromotionRankDatasProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_can_see_days_after_end;
        break;
      }

      // optional int32 can_see_days_after_end = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_can_see_days_after_end:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &can_see_days_after_end_)));
          set_has_can_see_days_after_end();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_prize_1;
        break;
      }

      // optional .app.message.PrizeProto prize_1 = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize_1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prize_1()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_prize_2;
        break;
      }

      // optional .app.message.PrizeProto prize_2 = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize_2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prize_2()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_prize_3;
        break;
      }

      // optional .app.message.PrizeProto prize_3 = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize_3:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prize_3()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_prize_4_10;
        break;
      }

      // optional .app.message.PrizeProto prize_4_10 = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize_4_10:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prize_4_10()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_prize_11_100;
        break;
      }

      // optional .app.message.PrizeProto prize_11_100 = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize_11_100:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prize_11_100()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void TaskPromotionRankDatasProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // optional int32 can_see_days_after_end = 3;
  if (has_can_see_days_after_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->can_see_days_after_end(), output);
  }

  // optional .app.message.PrizeProto prize_1 = 4;
  if (has_prize_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->prize_1(), output);
  }

  // optional .app.message.PrizeProto prize_2 = 5;
  if (has_prize_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->prize_2(), output);
  }

  // optional .app.message.PrizeProto prize_3 = 6;
  if (has_prize_3()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->prize_3(), output);
  }

  // optional .app.message.PrizeProto prize_4_10 = 7;
  if (has_prize_4_10()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->prize_4_10(), output);
  }

  // optional .app.message.PrizeProto prize_11_100 = 8;
  if (has_prize_11_100()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->prize_11_100(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* TaskPromotionRankDatasProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // optional int32 can_see_days_after_end = 3;
  if (has_can_see_days_after_end()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->can_see_days_after_end(), target);
  }

  // optional .app.message.PrizeProto prize_1 = 4;
  if (has_prize_1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->prize_1(), target);
  }

  // optional .app.message.PrizeProto prize_2 = 5;
  if (has_prize_2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->prize_2(), target);
  }

  // optional .app.message.PrizeProto prize_3 = 6;
  if (has_prize_3()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->prize_3(), target);
  }

  // optional .app.message.PrizeProto prize_4_10 = 7;
  if (has_prize_4_10()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->prize_4_10(), target);
  }

  // optional .app.message.PrizeProto prize_11_100 = 8;
  if (has_prize_11_100()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->prize_11_100(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int TaskPromotionRankDatasProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional int32 can_see_days_after_end = 3;
    if (has_can_see_days_after_end()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->can_see_days_after_end());
    }

    // optional .app.message.PrizeProto prize_1 = 4;
    if (has_prize_1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prize_1());
    }

    // optional .app.message.PrizeProto prize_2 = 5;
    if (has_prize_2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prize_2());
    }

    // optional .app.message.PrizeProto prize_3 = 6;
    if (has_prize_3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prize_3());
    }

    // optional .app.message.PrizeProto prize_4_10 = 7;
    if (has_prize_4_10()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prize_4_10());
    }

    // optional .app.message.PrizeProto prize_11_100 = 8;
    if (has_prize_11_100()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prize_11_100());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TaskPromotionRankDatasProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TaskPromotionRankDatasProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TaskPromotionRankDatasProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TaskPromotionRankDatasProto::MergeFrom(const TaskPromotionRankDatasProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_can_see_days_after_end()) {
      set_can_see_days_after_end(from.can_see_days_after_end());
    }
    if (from.has_prize_1()) {
      mutable_prize_1()->::app::message::PrizeProto::MergeFrom(from.prize_1());
    }
    if (from.has_prize_2()) {
      mutable_prize_2()->::app::message::PrizeProto::MergeFrom(from.prize_2());
    }
    if (from.has_prize_3()) {
      mutable_prize_3()->::app::message::PrizeProto::MergeFrom(from.prize_3());
    }
    if (from.has_prize_4_10()) {
      mutable_prize_4_10()->::app::message::PrizeProto::MergeFrom(from.prize_4_10());
    }
    if (from.has_prize_11_100()) {
      mutable_prize_11_100()->::app::message::PrizeProto::MergeFrom(from.prize_11_100());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TaskPromotionRankDatasProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TaskPromotionRankDatasProto::CopyFrom(const TaskPromotionRankDatasProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskPromotionRankDatasProto::IsInitialized() const {

  return true;
}

void TaskPromotionRankDatasProto::Swap(TaskPromotionRankDatasProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    std::swap(can_see_days_after_end_, other->can_see_days_after_end_);
    std::swap(prize_1_, other->prize_1_);
    std::swap(prize_2_, other->prize_2_);
    std::swap(prize_3_, other->prize_3_);
    std::swap(prize_4_10_, other->prize_4_10_);
    std::swap(prize_11_100_, other->prize_11_100_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TaskPromotionRankDatasProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TaskPromotionRankDatasProto_descriptor_;
  metadata.reflection = TaskPromotionRankDatasProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int WandaMovieConfigProto::kStartTimeFieldNumber;
const int WandaMovieConfigProto::kEndTimeFieldNumber;
const int WandaMovieConfigProto::kPrizeFieldNumber;
#endif  // !_MSC_VER

WandaMovieConfigProto::WandaMovieConfigProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void WandaMovieConfigProto::InitAsDefaultInstance() {
  prize_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
}

WandaMovieConfigProto::WandaMovieConfigProto(const WandaMovieConfigProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void WandaMovieConfigProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  prize_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

WandaMovieConfigProto::~WandaMovieConfigProto() {
  SharedDtor();
}

void WandaMovieConfigProto::SharedDtor() {
  if (this != default_instance_) {
    delete prize_;
  }
}

void WandaMovieConfigProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WandaMovieConfigProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WandaMovieConfigProto_descriptor_;
}

const WandaMovieConfigProto& WandaMovieConfigProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

WandaMovieConfigProto* WandaMovieConfigProto::default_instance_ = NULL;

WandaMovieConfigProto* WandaMovieConfigProto::New() const {
  return new WandaMovieConfigProto;
}

void WandaMovieConfigProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    if (has_prize()) {
      if (prize_ != NULL) prize_->::app::message::PrizeProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool WandaMovieConfigProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_prize;
        break;
      }

      // optional .app.message.PrizeProto prize = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void WandaMovieConfigProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // optional .app.message.PrizeProto prize = 3;
  if (has_prize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->prize(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* WandaMovieConfigProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // optional .app.message.PrizeProto prize = 3;
  if (has_prize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->prize(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int WandaMovieConfigProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional .app.message.PrizeProto prize = 3;
    if (has_prize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prize());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WandaMovieConfigProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const WandaMovieConfigProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const WandaMovieConfigProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void WandaMovieConfigProto::MergeFrom(const WandaMovieConfigProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_prize()) {
      mutable_prize()->::app::message::PrizeProto::MergeFrom(from.prize());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void WandaMovieConfigProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WandaMovieConfigProto::CopyFrom(const WandaMovieConfigProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WandaMovieConfigProto::IsInitialized() const {

  return true;
}

void WandaMovieConfigProto::Swap(WandaMovieConfigProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    std::swap(prize_, other->prize_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata WandaMovieConfigProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WandaMovieConfigProto_descriptor_;
  metadata.reflection = WandaMovieConfigProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RechargeBoxRebateConfigProto::kStartTimeFieldNumber;
const int RechargeBoxRebateConfigProto::kEndTimeFieldNumber;
const int RechargeBoxRebateConfigProto::kRuleFieldNumber;
#endif  // !_MSC_VER

RechargeBoxRebateConfigProto::RechargeBoxRebateConfigProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RechargeBoxRebateConfigProto::InitAsDefaultInstance() {
}

RechargeBoxRebateConfigProto::RechargeBoxRebateConfigProto(const RechargeBoxRebateConfigProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RechargeBoxRebateConfigProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RechargeBoxRebateConfigProto::~RechargeBoxRebateConfigProto() {
  SharedDtor();
}

void RechargeBoxRebateConfigProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RechargeBoxRebateConfigProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RechargeBoxRebateConfigProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RechargeBoxRebateConfigProto_descriptor_;
}

const RechargeBoxRebateConfigProto& RechargeBoxRebateConfigProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

RechargeBoxRebateConfigProto* RechargeBoxRebateConfigProto::default_instance_ = NULL;

RechargeBoxRebateConfigProto* RechargeBoxRebateConfigProto::New() const {
  return new RechargeBoxRebateConfigProto;
}

void RechargeBoxRebateConfigProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
  }
  rule_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RechargeBoxRebateConfigProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_rule;
        break;
      }

      // repeated .app.message.RechargeBoxRebateRule rule = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rule:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rule()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_rule;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RechargeBoxRebateConfigProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // repeated .app.message.RechargeBoxRebateRule rule = 3;
  for (int i = 0; i < this->rule_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->rule(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RechargeBoxRebateConfigProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // repeated .app.message.RechargeBoxRebateRule rule = 3;
  for (int i = 0; i < this->rule_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->rule(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RechargeBoxRebateConfigProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

  }
  // repeated .app.message.RechargeBoxRebateRule rule = 3;
  total_size += 1 * this->rule_size();
  for (int i = 0; i < this->rule_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rule(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RechargeBoxRebateConfigProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RechargeBoxRebateConfigProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RechargeBoxRebateConfigProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RechargeBoxRebateConfigProto::MergeFrom(const RechargeBoxRebateConfigProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  rule_.MergeFrom(from.rule_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RechargeBoxRebateConfigProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RechargeBoxRebateConfigProto::CopyFrom(const RechargeBoxRebateConfigProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RechargeBoxRebateConfigProto::IsInitialized() const {

  return true;
}

void RechargeBoxRebateConfigProto::Swap(RechargeBoxRebateConfigProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    rule_.Swap(&other->rule_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RechargeBoxRebateConfigProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RechargeBoxRebateConfigProto_descriptor_;
  metadata.reflection = RechargeBoxRebateConfigProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RechargeBoxRebateRule::kTotalRechargeDayFieldNumber;
const int RechargeBoxRebateRule::kYuanbaoPerDayFieldNumber;
const int RechargeBoxRebateRule::kDescFieldNumber;
const int RechargeBoxRebateRule::kPrizeFieldNumber;
const int RechargeBoxRebateRule::kEveryDayPrizeFieldNumber;
#endif  // !_MSC_VER

RechargeBoxRebateRule::RechargeBoxRebateRule()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RechargeBoxRebateRule::InitAsDefaultInstance() {
  prize_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
}

RechargeBoxRebateRule::RechargeBoxRebateRule(const RechargeBoxRebateRule& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RechargeBoxRebateRule::SharedCtor() {
  _cached_size_ = 0;
  total_recharge_day_ = 0;
  yuanbao_per_day_ = 0;
  desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  prize_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RechargeBoxRebateRule::~RechargeBoxRebateRule() {
  SharedDtor();
}

void RechargeBoxRebateRule::SharedDtor() {
  if (desc_ != &::google::protobuf::internal::kEmptyString) {
    delete desc_;
  }
  if (this != default_instance_) {
    delete prize_;
  }
}

void RechargeBoxRebateRule::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RechargeBoxRebateRule::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RechargeBoxRebateRule_descriptor_;
}

const RechargeBoxRebateRule& RechargeBoxRebateRule::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

RechargeBoxRebateRule* RechargeBoxRebateRule::default_instance_ = NULL;

RechargeBoxRebateRule* RechargeBoxRebateRule::New() const {
  return new RechargeBoxRebateRule;
}

void RechargeBoxRebateRule::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    total_recharge_day_ = 0;
    yuanbao_per_day_ = 0;
    if (has_desc()) {
      if (desc_ != &::google::protobuf::internal::kEmptyString) {
        desc_->clear();
      }
    }
    if (has_prize()) {
      if (prize_ != NULL) prize_->::app::message::PrizeProto::Clear();
    }
  }
  every_day_prize_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RechargeBoxRebateRule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 total_recharge_day = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_recharge_day_)));
          set_has_total_recharge_day();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_yuanbao_per_day;
        break;
      }

      // optional int32 yuanbao_per_day = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_yuanbao_per_day:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yuanbao_per_day_)));
          set_has_yuanbao_per_day();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_desc;
        break;
      }

      // optional string desc = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_desc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->desc().data(), this->desc().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_prize;
        break;
      }

      // optional .app.message.PrizeProto prize = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_every_day_prize;
        break;
      }

      // repeated .app.message.PrizeProto every_day_prize = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_every_day_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_every_day_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_every_day_prize;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RechargeBoxRebateRule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 total_recharge_day = 1;
  if (has_total_recharge_day()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->total_recharge_day(), output);
  }

  // optional int32 yuanbao_per_day = 2;
  if (has_yuanbao_per_day()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->yuanbao_per_day(), output);
  }

  // optional string desc = 3;
  if (has_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->desc(), output);
  }

  // optional .app.message.PrizeProto prize = 4;
  if (has_prize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->prize(), output);
  }

  // repeated .app.message.PrizeProto every_day_prize = 5;
  for (int i = 0; i < this->every_day_prize_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->every_day_prize(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RechargeBoxRebateRule::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 total_recharge_day = 1;
  if (has_total_recharge_day()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->total_recharge_day(), target);
  }

  // optional int32 yuanbao_per_day = 2;
  if (has_yuanbao_per_day()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->yuanbao_per_day(), target);
  }

  // optional string desc = 3;
  if (has_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->desc(), target);
  }

  // optional .app.message.PrizeProto prize = 4;
  if (has_prize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->prize(), target);
  }

  // repeated .app.message.PrizeProto every_day_prize = 5;
  for (int i = 0; i < this->every_day_prize_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->every_day_prize(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RechargeBoxRebateRule::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 total_recharge_day = 1;
    if (has_total_recharge_day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_recharge_day());
    }

    // optional int32 yuanbao_per_day = 2;
    if (has_yuanbao_per_day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->yuanbao_per_day());
    }

    // optional string desc = 3;
    if (has_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->desc());
    }

    // optional .app.message.PrizeProto prize = 4;
    if (has_prize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prize());
    }

  }
  // repeated .app.message.PrizeProto every_day_prize = 5;
  total_size += 1 * this->every_day_prize_size();
  for (int i = 0; i < this->every_day_prize_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->every_day_prize(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RechargeBoxRebateRule::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RechargeBoxRebateRule* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RechargeBoxRebateRule*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RechargeBoxRebateRule::MergeFrom(const RechargeBoxRebateRule& from) {
  GOOGLE_CHECK_NE(&from, this);
  every_day_prize_.MergeFrom(from.every_day_prize_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_total_recharge_day()) {
      set_total_recharge_day(from.total_recharge_day());
    }
    if (from.has_yuanbao_per_day()) {
      set_yuanbao_per_day(from.yuanbao_per_day());
    }
    if (from.has_desc()) {
      set_desc(from.desc());
    }
    if (from.has_prize()) {
      mutable_prize()->::app::message::PrizeProto::MergeFrom(from.prize());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RechargeBoxRebateRule::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RechargeBoxRebateRule::CopyFrom(const RechargeBoxRebateRule& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RechargeBoxRebateRule::IsInitialized() const {

  return true;
}

void RechargeBoxRebateRule::Swap(RechargeBoxRebateRule* other) {
  if (other != this) {
    std::swap(total_recharge_day_, other->total_recharge_day_);
    std::swap(yuanbao_per_day_, other->yuanbao_per_day_);
    std::swap(desc_, other->desc_);
    std::swap(prize_, other->prize_);
    every_day_prize_.Swap(&other->every_day_prize_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RechargeBoxRebateRule::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RechargeBoxRebateRule_descriptor_;
  metadata.reflection = RechargeBoxRebateRule_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ConsumeBoxRebateConfigProto::kStartTimeFieldNumber;
const int ConsumeBoxRebateConfigProto::kEndTimeFieldNumber;
const int ConsumeBoxRebateConfigProto::kRuleFieldNumber;
#endif  // !_MSC_VER

ConsumeBoxRebateConfigProto::ConsumeBoxRebateConfigProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ConsumeBoxRebateConfigProto::InitAsDefaultInstance() {
}

ConsumeBoxRebateConfigProto::ConsumeBoxRebateConfigProto(const ConsumeBoxRebateConfigProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ConsumeBoxRebateConfigProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ConsumeBoxRebateConfigProto::~ConsumeBoxRebateConfigProto() {
  SharedDtor();
}

void ConsumeBoxRebateConfigProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ConsumeBoxRebateConfigProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConsumeBoxRebateConfigProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConsumeBoxRebateConfigProto_descriptor_;
}

const ConsumeBoxRebateConfigProto& ConsumeBoxRebateConfigProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

ConsumeBoxRebateConfigProto* ConsumeBoxRebateConfigProto::default_instance_ = NULL;

ConsumeBoxRebateConfigProto* ConsumeBoxRebateConfigProto::New() const {
  return new ConsumeBoxRebateConfigProto;
}

void ConsumeBoxRebateConfigProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
  }
  rule_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ConsumeBoxRebateConfigProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_rule;
        break;
      }

      // repeated .app.message.ConsumeBoxRebateRule rule = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rule:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rule()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_rule;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ConsumeBoxRebateConfigProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // repeated .app.message.ConsumeBoxRebateRule rule = 3;
  for (int i = 0; i < this->rule_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->rule(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ConsumeBoxRebateConfigProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // repeated .app.message.ConsumeBoxRebateRule rule = 3;
  for (int i = 0; i < this->rule_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->rule(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ConsumeBoxRebateConfigProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

  }
  // repeated .app.message.ConsumeBoxRebateRule rule = 3;
  total_size += 1 * this->rule_size();
  for (int i = 0; i < this->rule_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rule(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConsumeBoxRebateConfigProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ConsumeBoxRebateConfigProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ConsumeBoxRebateConfigProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ConsumeBoxRebateConfigProto::MergeFrom(const ConsumeBoxRebateConfigProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  rule_.MergeFrom(from.rule_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ConsumeBoxRebateConfigProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConsumeBoxRebateConfigProto::CopyFrom(const ConsumeBoxRebateConfigProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConsumeBoxRebateConfigProto::IsInitialized() const {

  return true;
}

void ConsumeBoxRebateConfigProto::Swap(ConsumeBoxRebateConfigProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    rule_.Swap(&other->rule_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ConsumeBoxRebateConfigProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ConsumeBoxRebateConfigProto_descriptor_;
  metadata.reflection = ConsumeBoxRebateConfigProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ConsumeBoxRebateRule::kTotalConsumeDayFieldNumber;
const int ConsumeBoxRebateRule::kYuanbaoPerDayFieldNumber;
const int ConsumeBoxRebateRule::kDescFieldNumber;
const int ConsumeBoxRebateRule::kPrizeFieldNumber;
const int ConsumeBoxRebateRule::kEveryDayPrizeFieldNumber;
#endif  // !_MSC_VER

ConsumeBoxRebateRule::ConsumeBoxRebateRule()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ConsumeBoxRebateRule::InitAsDefaultInstance() {
  prize_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
}

ConsumeBoxRebateRule::ConsumeBoxRebateRule(const ConsumeBoxRebateRule& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ConsumeBoxRebateRule::SharedCtor() {
  _cached_size_ = 0;
  total_consume_day_ = 0;
  yuanbao_per_day_ = 0;
  desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  prize_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ConsumeBoxRebateRule::~ConsumeBoxRebateRule() {
  SharedDtor();
}

void ConsumeBoxRebateRule::SharedDtor() {
  if (desc_ != &::google::protobuf::internal::kEmptyString) {
    delete desc_;
  }
  if (this != default_instance_) {
    delete prize_;
  }
}

void ConsumeBoxRebateRule::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConsumeBoxRebateRule::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ConsumeBoxRebateRule_descriptor_;
}

const ConsumeBoxRebateRule& ConsumeBoxRebateRule::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

ConsumeBoxRebateRule* ConsumeBoxRebateRule::default_instance_ = NULL;

ConsumeBoxRebateRule* ConsumeBoxRebateRule::New() const {
  return new ConsumeBoxRebateRule;
}

void ConsumeBoxRebateRule::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    total_consume_day_ = 0;
    yuanbao_per_day_ = 0;
    if (has_desc()) {
      if (desc_ != &::google::protobuf::internal::kEmptyString) {
        desc_->clear();
      }
    }
    if (has_prize()) {
      if (prize_ != NULL) prize_->::app::message::PrizeProto::Clear();
    }
  }
  every_day_prize_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ConsumeBoxRebateRule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 total_consume_day = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_consume_day_)));
          set_has_total_consume_day();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_yuanbao_per_day;
        break;
      }

      // optional int32 yuanbao_per_day = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_yuanbao_per_day:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yuanbao_per_day_)));
          set_has_yuanbao_per_day();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_desc;
        break;
      }

      // optional string desc = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_desc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->desc().data(), this->desc().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_prize;
        break;
      }

      // optional .app.message.PrizeProto prize = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_every_day_prize;
        break;
      }

      // repeated .app.message.PrizeProto every_day_prize = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_every_day_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_every_day_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_every_day_prize;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ConsumeBoxRebateRule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 total_consume_day = 1;
  if (has_total_consume_day()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->total_consume_day(), output);
  }

  // optional int32 yuanbao_per_day = 2;
  if (has_yuanbao_per_day()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->yuanbao_per_day(), output);
  }

  // optional string desc = 3;
  if (has_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->desc(), output);
  }

  // optional .app.message.PrizeProto prize = 4;
  if (has_prize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->prize(), output);
  }

  // repeated .app.message.PrizeProto every_day_prize = 5;
  for (int i = 0; i < this->every_day_prize_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->every_day_prize(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ConsumeBoxRebateRule::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 total_consume_day = 1;
  if (has_total_consume_day()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->total_consume_day(), target);
  }

  // optional int32 yuanbao_per_day = 2;
  if (has_yuanbao_per_day()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->yuanbao_per_day(), target);
  }

  // optional string desc = 3;
  if (has_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->desc(), target);
  }

  // optional .app.message.PrizeProto prize = 4;
  if (has_prize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->prize(), target);
  }

  // repeated .app.message.PrizeProto every_day_prize = 5;
  for (int i = 0; i < this->every_day_prize_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->every_day_prize(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ConsumeBoxRebateRule::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 total_consume_day = 1;
    if (has_total_consume_day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_consume_day());
    }

    // optional int32 yuanbao_per_day = 2;
    if (has_yuanbao_per_day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->yuanbao_per_day());
    }

    // optional string desc = 3;
    if (has_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->desc());
    }

    // optional .app.message.PrizeProto prize = 4;
    if (has_prize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prize());
    }

  }
  // repeated .app.message.PrizeProto every_day_prize = 5;
  total_size += 1 * this->every_day_prize_size();
  for (int i = 0; i < this->every_day_prize_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->every_day_prize(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConsumeBoxRebateRule::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ConsumeBoxRebateRule* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ConsumeBoxRebateRule*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ConsumeBoxRebateRule::MergeFrom(const ConsumeBoxRebateRule& from) {
  GOOGLE_CHECK_NE(&from, this);
  every_day_prize_.MergeFrom(from.every_day_prize_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_total_consume_day()) {
      set_total_consume_day(from.total_consume_day());
    }
    if (from.has_yuanbao_per_day()) {
      set_yuanbao_per_day(from.yuanbao_per_day());
    }
    if (from.has_desc()) {
      set_desc(from.desc());
    }
    if (from.has_prize()) {
      mutable_prize()->::app::message::PrizeProto::MergeFrom(from.prize());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ConsumeBoxRebateRule::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConsumeBoxRebateRule::CopyFrom(const ConsumeBoxRebateRule& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConsumeBoxRebateRule::IsInitialized() const {

  return true;
}

void ConsumeBoxRebateRule::Swap(ConsumeBoxRebateRule* other) {
  if (other != this) {
    std::swap(total_consume_day_, other->total_consume_day_);
    std::swap(yuanbao_per_day_, other->yuanbao_per_day_);
    std::swap(desc_, other->desc_);
    std::swap(prize_, other->prize_);
    every_day_prize_.Swap(&other->every_day_prize_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ConsumeBoxRebateRule::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ConsumeBoxRebateRule_descriptor_;
  metadata.reflection = ConsumeBoxRebateRule_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType_descriptor_;
}
bool GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType GlobalChargeFightAmountChangedValueRankDataProto::MOUNT;
const GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType GlobalChargeFightAmountChangedValueRankDataProto::TIAN_JIE;
const GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType GlobalChargeFightAmountChangedValueRankDataProto::TIAN_ZUI;
const GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType GlobalChargeFightAmountChangedValueRankDataProto::ZHAN_JIA;
const GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType GlobalChargeFightAmountChangedValueRankDataProto::SUPER_ARM;
const GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType GlobalChargeFightAmountChangedValueRankDataProto::DEMON;
const GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType GlobalChargeFightAmountChangedValueRankDataProto::CLOAK;
const GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType GlobalChargeFightAmountChangedValueRankDataProto::MOSHI_0;
const GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType GlobalChargeFightAmountChangedValueRankDataProto::MOSHI_1;
const GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType GlobalChargeFightAmountChangedValueRankDataProto::MOSHI_2;
const GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType GlobalChargeFightAmountChangedValueRankDataProto::MOSHI_3;
const GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType GlobalChargeFightAmountChangedValueRankDataProto::QIAN_QIU_DA_JIE_0;
const GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType GlobalChargeFightAmountChangedValueRankDataProto::QIAN_QIU_DA_JIE_1;
const GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType GlobalChargeFightAmountChangedValueRankDataProto::CHI_HUO_SHEN_GONG;
const GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType GlobalChargeFightAmountChangedValueRankDataProto::SUPER_WEAPON;
const GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType GlobalChargeFightAmountChangedValueRankDataProto::SHOU_CANG;
const GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType GlobalChargeFightAmountChangedValueRankDataProto::MOSHI;
const GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType GlobalChargeFightAmountChangedValueRankDataProto::TIAN_XIE;
const GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType GlobalChargeFightAmountChangedValueRankDataProto::MO_BING;
const GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType GlobalChargeFightAmountChangedValueRankDataProto::WU_DAO;
const GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType GlobalChargeFightAmountChangedValueRankDataProto::SHIELD;
const GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType GlobalChargeFightAmountChangedValueRankDataProto::QIAN_QIU_DA_JIE;
const GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType GlobalChargeFightAmountChangedValueRankDataProto::SHIELD_1;
const GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType GlobalChargeFightAmountChangedValueRankDataProto::SHIELD_2;
const GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType GlobalChargeFightAmountChangedValueRankDataProto::SHIELD_3;
const GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType GlobalChargeFightAmountChangedValueRankDataProto::SHIELD_4;
const GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType GlobalChargeFightAmountChangedValueRankDataProto::SHIELD_5;
const GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType GlobalChargeFightAmountChangedValueRankDataProto::SHIELD_6;
const GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType GlobalChargeFightAmountChangedValueRankDataProto::SHIELD_7;
const GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType GlobalChargeFightAmountChangedValueRankDataProto::SHIELD_8;
const GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType GlobalChargeFightAmountChangedValueRankDataProto::SHIELD_9;
const GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType GlobalChargeFightAmountChangedValueRankDataProto::SHIELD_10;
const GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType GlobalChargeFightAmountChangedValueRankDataProto::LING_YU;
const GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType GlobalChargeFightAmountChangedValueRankDataProto::MO_FANG;
const GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType GlobalChargeFightAmountChangedValueRankDataProto::GlobalChargeFightAmountChangedValueRankProtoType_MIN;
const GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType GlobalChargeFightAmountChangedValueRankDataProto::GlobalChargeFightAmountChangedValueRankProtoType_MAX;
const int GlobalChargeFightAmountChangedValueRankDataProto::GlobalChargeFightAmountChangedValueRankProtoType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int GlobalChargeFightAmountChangedValueRankDataProto::kStartTimeFieldNumber;
const int GlobalChargeFightAmountChangedValueRankDataProto::kEndTimeFieldNumber;
const int GlobalChargeFightAmountChangedValueRankDataProto::kPageCountFieldNumber;
const int GlobalChargeFightAmountChangedValueRankDataProto::kTotalPageFieldNumber;
const int GlobalChargeFightAmountChangedValueRankDataProto::kTypeFieldNumber;
const int GlobalChargeFightAmountChangedValueRankDataProto::kBackgroundFieldNumber;
const int GlobalChargeFightAmountChangedValueRankDataProto::kDailyPrizeFieldNumber;
const int GlobalChargeFightAmountChangedValueRankDataProto::kMinDailyChangedValueFieldNumber;
const int GlobalChargeFightAmountChangedValueRankDataProto::kRankPrizeFieldNumber;
const int GlobalChargeFightAmountChangedValueRankDataProto::kCombinedTypeFieldNumber;
#endif  // !_MSC_VER

GlobalChargeFightAmountChangedValueRankDataProto::GlobalChargeFightAmountChangedValueRankDataProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GlobalChargeFightAmountChangedValueRankDataProto::InitAsDefaultInstance() {
}

GlobalChargeFightAmountChangedValueRankDataProto::GlobalChargeFightAmountChangedValueRankDataProto(const GlobalChargeFightAmountChangedValueRankDataProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GlobalChargeFightAmountChangedValueRankDataProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  page_count_ = 0;
  total_page_ = 0;
  type_ = 1;
  background_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GlobalChargeFightAmountChangedValueRankDataProto::~GlobalChargeFightAmountChangedValueRankDataProto() {
  SharedDtor();
}

void GlobalChargeFightAmountChangedValueRankDataProto::SharedDtor() {
  if (background_ != &::google::protobuf::internal::kEmptyString) {
    delete background_;
  }
  if (this != default_instance_) {
  }
}

void GlobalChargeFightAmountChangedValueRankDataProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GlobalChargeFightAmountChangedValueRankDataProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GlobalChargeFightAmountChangedValueRankDataProto_descriptor_;
}

const GlobalChargeFightAmountChangedValueRankDataProto& GlobalChargeFightAmountChangedValueRankDataProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

GlobalChargeFightAmountChangedValueRankDataProto* GlobalChargeFightAmountChangedValueRankDataProto::default_instance_ = NULL;

GlobalChargeFightAmountChangedValueRankDataProto* GlobalChargeFightAmountChangedValueRankDataProto::New() const {
  return new GlobalChargeFightAmountChangedValueRankDataProto;
}

void GlobalChargeFightAmountChangedValueRankDataProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    page_count_ = 0;
    total_page_ = 0;
    type_ = 1;
    if (has_background()) {
      if (background_ != &::google::protobuf::internal::kEmptyString) {
        background_->clear();
      }
    }
  }
  dailyprize_.Clear();
  mindailychangedvalue_.Clear();
  rankprize_.Clear();
  combined_type_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GlobalChargeFightAmountChangedValueRankDataProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_page_count;
        break;
      }

      // optional int32 page_count = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_page_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_count_)));
          set_has_page_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_total_page;
        break;
      }

      // optional int32 total_page = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_page_)));
          set_has_total_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_type;
        break;
      }

      // optional .app.message.GlobalChargeFightAmountChangedValueRankDataProto.GlobalChargeFightAmountChangedValueRankProtoType type = 5 [deprecated = true];
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::app::message::GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType_IsValid(value)) {
            set_type(static_cast< ::app::message::GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_background;
        break;
      }

      // optional string background = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_background:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_background()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->background().data(), this->background().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_dailyPrize;
        break;
      }

      // repeated .app.message.PrizeProto dailyPrize = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_dailyPrize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dailyprize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_dailyPrize;
        if (input->ExpectTag(64)) goto parse_minDailyChangedValue;
        break;
      }

      // repeated int32 minDailyChangedValue = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_minDailyChangedValue:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 64, input, this->mutable_mindailychangedvalue())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_mindailychangedvalue())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_minDailyChangedValue;
        if (input->ExpectTag(74)) goto parse_rankPrize;
        break;
      }

      // repeated .app.message.GlobalChargeFightAmountChangedValueVRankPrizeProto rankPrize = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rankPrize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rankprize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_rankPrize;
        if (input->ExpectTag(80)) goto parse_combined_type;
        break;
      }

      // repeated .app.message.GlobalChargeFightAmountChangedValueRankDataProto.GlobalChargeFightAmountChangedValueRankProtoType combined_type = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_combined_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::app::message::GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType_IsValid(value)) {
            add_combined_type(static_cast< ::app::message::GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(10, value);
          }
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline(
                 input,
                 &::app::message::GlobalChargeFightAmountChangedValueRankDataProto_GlobalChargeFightAmountChangedValueRankProtoType_IsValid,
                 this->mutable_combined_type())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_combined_type;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GlobalChargeFightAmountChangedValueRankDataProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // optional int32 page_count = 3;
  if (has_page_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_count(), output);
  }

  // optional int32 total_page = 4;
  if (has_total_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->total_page(), output);
  }

  // optional .app.message.GlobalChargeFightAmountChangedValueRankDataProto.GlobalChargeFightAmountChangedValueRankProtoType type = 5 [deprecated = true];
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->type(), output);
  }

  // optional string background = 6;
  if (has_background()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->background().data(), this->background().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->background(), output);
  }

  // repeated .app.message.PrizeProto dailyPrize = 7;
  for (int i = 0; i < this->dailyprize_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->dailyprize(i), output);
  }

  // repeated int32 minDailyChangedValue = 8;
  for (int i = 0; i < this->mindailychangedvalue_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      8, this->mindailychangedvalue(i), output);
  }

  // repeated .app.message.GlobalChargeFightAmountChangedValueVRankPrizeProto rankPrize = 9;
  for (int i = 0; i < this->rankprize_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->rankprize(i), output);
  }

  // repeated .app.message.GlobalChargeFightAmountChangedValueRankDataProto.GlobalChargeFightAmountChangedValueRankProtoType combined_type = 10;
  for (int i = 0; i < this->combined_type_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->combined_type(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GlobalChargeFightAmountChangedValueRankDataProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // optional int32 page_count = 3;
  if (has_page_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_count(), target);
  }

  // optional int32 total_page = 4;
  if (has_total_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->total_page(), target);
  }

  // optional .app.message.GlobalChargeFightAmountChangedValueRankDataProto.GlobalChargeFightAmountChangedValueRankProtoType type = 5 [deprecated = true];
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->type(), target);
  }

  // optional string background = 6;
  if (has_background()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->background().data(), this->background().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->background(), target);
  }

  // repeated .app.message.PrizeProto dailyPrize = 7;
  for (int i = 0; i < this->dailyprize_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->dailyprize(i), target);
  }

  // repeated int32 minDailyChangedValue = 8;
  for (int i = 0; i < this->mindailychangedvalue_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(8, this->mindailychangedvalue(i), target);
  }

  // repeated .app.message.GlobalChargeFightAmountChangedValueVRankPrizeProto rankPrize = 9;
  for (int i = 0; i < this->rankprize_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->rankprize(i), target);
  }

  // repeated .app.message.GlobalChargeFightAmountChangedValueRankDataProto.GlobalChargeFightAmountChangedValueRankProtoType combined_type = 10;
  for (int i = 0; i < this->combined_type_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->combined_type(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GlobalChargeFightAmountChangedValueRankDataProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional int32 page_count = 3;
    if (has_page_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page_count());
    }

    // optional int32 total_page = 4;
    if (has_total_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_page());
    }

    // optional .app.message.GlobalChargeFightAmountChangedValueRankDataProto.GlobalChargeFightAmountChangedValueRankProtoType type = 5 [deprecated = true];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional string background = 6;
    if (has_background()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->background());
    }

  }
  // repeated .app.message.PrizeProto dailyPrize = 7;
  total_size += 1 * this->dailyprize_size();
  for (int i = 0; i < this->dailyprize_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dailyprize(i));
  }

  // repeated int32 minDailyChangedValue = 8;
  {
    int data_size = 0;
    for (int i = 0; i < this->mindailychangedvalue_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->mindailychangedvalue(i));
    }
    total_size += 1 * this->mindailychangedvalue_size() + data_size;
  }

  // repeated .app.message.GlobalChargeFightAmountChangedValueVRankPrizeProto rankPrize = 9;
  total_size += 1 * this->rankprize_size();
  for (int i = 0; i < this->rankprize_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rankprize(i));
  }

  // repeated .app.message.GlobalChargeFightAmountChangedValueRankDataProto.GlobalChargeFightAmountChangedValueRankProtoType combined_type = 10;
  {
    int data_size = 0;
    for (int i = 0; i < this->combined_type_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->combined_type(i));
    }
    total_size += 1 * this->combined_type_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GlobalChargeFightAmountChangedValueRankDataProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GlobalChargeFightAmountChangedValueRankDataProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GlobalChargeFightAmountChangedValueRankDataProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GlobalChargeFightAmountChangedValueRankDataProto::MergeFrom(const GlobalChargeFightAmountChangedValueRankDataProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  dailyprize_.MergeFrom(from.dailyprize_);
  mindailychangedvalue_.MergeFrom(from.mindailychangedvalue_);
  rankprize_.MergeFrom(from.rankprize_);
  combined_type_.MergeFrom(from.combined_type_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_page_count()) {
      set_page_count(from.page_count());
    }
    if (from.has_total_page()) {
      set_total_page(from.total_page());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_background()) {
      set_background(from.background());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GlobalChargeFightAmountChangedValueRankDataProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalChargeFightAmountChangedValueRankDataProto::CopyFrom(const GlobalChargeFightAmountChangedValueRankDataProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalChargeFightAmountChangedValueRankDataProto::IsInitialized() const {

  return true;
}

void GlobalChargeFightAmountChangedValueRankDataProto::Swap(GlobalChargeFightAmountChangedValueRankDataProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    std::swap(page_count_, other->page_count_);
    std::swap(total_page_, other->total_page_);
    std::swap(type_, other->type_);
    std::swap(background_, other->background_);
    dailyprize_.Swap(&other->dailyprize_);
    mindailychangedvalue_.Swap(&other->mindailychangedvalue_);
    rankprize_.Swap(&other->rankprize_);
    combined_type_.Swap(&other->combined_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GlobalChargeFightAmountChangedValueRankDataProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GlobalChargeFightAmountChangedValueRankDataProto_descriptor_;
  metadata.reflection = GlobalChargeFightAmountChangedValueRankDataProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GlobalChargeFightAmountChangedValueVRankPrizeProto::kLastRankFieldNumber;
const int GlobalChargeFightAmountChangedValueVRankPrizeProto::kPrizeFieldNumber;
#endif  // !_MSC_VER

GlobalChargeFightAmountChangedValueVRankPrizeProto::GlobalChargeFightAmountChangedValueVRankPrizeProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GlobalChargeFightAmountChangedValueVRankPrizeProto::InitAsDefaultInstance() {
  prize_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
}

GlobalChargeFightAmountChangedValueVRankPrizeProto::GlobalChargeFightAmountChangedValueVRankPrizeProto(const GlobalChargeFightAmountChangedValueVRankPrizeProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GlobalChargeFightAmountChangedValueVRankPrizeProto::SharedCtor() {
  _cached_size_ = 0;
  last_rank_ = 0;
  prize_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GlobalChargeFightAmountChangedValueVRankPrizeProto::~GlobalChargeFightAmountChangedValueVRankPrizeProto() {
  SharedDtor();
}

void GlobalChargeFightAmountChangedValueVRankPrizeProto::SharedDtor() {
  if (this != default_instance_) {
    delete prize_;
  }
}

void GlobalChargeFightAmountChangedValueVRankPrizeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GlobalChargeFightAmountChangedValueVRankPrizeProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GlobalChargeFightAmountChangedValueVRankPrizeProto_descriptor_;
}

const GlobalChargeFightAmountChangedValueVRankPrizeProto& GlobalChargeFightAmountChangedValueVRankPrizeProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

GlobalChargeFightAmountChangedValueVRankPrizeProto* GlobalChargeFightAmountChangedValueVRankPrizeProto::default_instance_ = NULL;

GlobalChargeFightAmountChangedValueVRankPrizeProto* GlobalChargeFightAmountChangedValueVRankPrizeProto::New() const {
  return new GlobalChargeFightAmountChangedValueVRankPrizeProto;
}

void GlobalChargeFightAmountChangedValueVRankPrizeProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    last_rank_ = 0;
    if (has_prize()) {
      if (prize_ != NULL) prize_->::app::message::PrizeProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GlobalChargeFightAmountChangedValueVRankPrizeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 last_rank = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_rank_)));
          set_has_last_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_prize;
        break;
      }

      // optional .app.message.PrizeProto prize = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GlobalChargeFightAmountChangedValueVRankPrizeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 last_rank = 1;
  if (has_last_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->last_rank(), output);
  }

  // optional .app.message.PrizeProto prize = 2;
  if (has_prize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->prize(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GlobalChargeFightAmountChangedValueVRankPrizeProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 last_rank = 1;
  if (has_last_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->last_rank(), target);
  }

  // optional .app.message.PrizeProto prize = 2;
  if (has_prize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->prize(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GlobalChargeFightAmountChangedValueVRankPrizeProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 last_rank = 1;
    if (has_last_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->last_rank());
    }

    // optional .app.message.PrizeProto prize = 2;
    if (has_prize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prize());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GlobalChargeFightAmountChangedValueVRankPrizeProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GlobalChargeFightAmountChangedValueVRankPrizeProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GlobalChargeFightAmountChangedValueVRankPrizeProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GlobalChargeFightAmountChangedValueVRankPrizeProto::MergeFrom(const GlobalChargeFightAmountChangedValueVRankPrizeProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_last_rank()) {
      set_last_rank(from.last_rank());
    }
    if (from.has_prize()) {
      mutable_prize()->::app::message::PrizeProto::MergeFrom(from.prize());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GlobalChargeFightAmountChangedValueVRankPrizeProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalChargeFightAmountChangedValueVRankPrizeProto::CopyFrom(const GlobalChargeFightAmountChangedValueVRankPrizeProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalChargeFightAmountChangedValueVRankPrizeProto::IsInitialized() const {

  return true;
}

void GlobalChargeFightAmountChangedValueVRankPrizeProto::Swap(GlobalChargeFightAmountChangedValueVRankPrizeProto* other) {
  if (other != this) {
    std::swap(last_rank_, other->last_rank_);
    std::swap(prize_, other->prize_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GlobalChargeFightAmountChangedValueVRankPrizeProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GlobalChargeFightAmountChangedValueVRankPrizeProto_descriptor_;
  metadata.reflection = GlobalChargeFightAmountChangedValueVRankPrizeProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int YYPurpleVipConfigProto::kShopFieldNumber;
const int YYPurpleVipConfigProto::kNicksFieldNumber;
const int YYPurpleVipConfigProto::kLibaoFieldNumber;
#endif  // !_MSC_VER

YYPurpleVipConfigProto::YYPurpleVipConfigProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void YYPurpleVipConfigProto::InitAsDefaultInstance() {
}

YYPurpleVipConfigProto::YYPurpleVipConfigProto(const YYPurpleVipConfigProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void YYPurpleVipConfigProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YYPurpleVipConfigProto::~YYPurpleVipConfigProto() {
  SharedDtor();
}

void YYPurpleVipConfigProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void YYPurpleVipConfigProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YYPurpleVipConfigProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YYPurpleVipConfigProto_descriptor_;
}

const YYPurpleVipConfigProto& YYPurpleVipConfigProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

YYPurpleVipConfigProto* YYPurpleVipConfigProto::default_instance_ = NULL;

YYPurpleVipConfigProto* YYPurpleVipConfigProto::New() const {
  return new YYPurpleVipConfigProto;
}

void YYPurpleVipConfigProto::Clear() {
  shop_.Clear();
  nicks_.Clear();
  libao_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool YYPurpleVipConfigProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .app.message.YYPurpleVipShopProto shop = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_shop:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_shop()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_shop;
        if (input->ExpectTag(18)) goto parse_nicks;
        break;
      }

      // repeated .app.message.YYPurpleVipNickProto nicks = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_nicks:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_nicks()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_nicks;
        if (input->ExpectTag(26)) goto parse_libao;
        break;
      }

      // repeated .app.message.YYPurpleVipXinshoulibaoProto libao = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_libao:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_libao()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_libao;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void YYPurpleVipConfigProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .app.message.YYPurpleVipShopProto shop = 1;
  for (int i = 0; i < this->shop_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->shop(i), output);
  }

  // repeated .app.message.YYPurpleVipNickProto nicks = 2;
  for (int i = 0; i < this->nicks_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->nicks(i), output);
  }

  // repeated .app.message.YYPurpleVipXinshoulibaoProto libao = 3;
  for (int i = 0; i < this->libao_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->libao(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* YYPurpleVipConfigProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .app.message.YYPurpleVipShopProto shop = 1;
  for (int i = 0; i < this->shop_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->shop(i), target);
  }

  // repeated .app.message.YYPurpleVipNickProto nicks = 2;
  for (int i = 0; i < this->nicks_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->nicks(i), target);
  }

  // repeated .app.message.YYPurpleVipXinshoulibaoProto libao = 3;
  for (int i = 0; i < this->libao_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->libao(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int YYPurpleVipConfigProto::ByteSize() const {
  int total_size = 0;

  // repeated .app.message.YYPurpleVipShopProto shop = 1;
  total_size += 1 * this->shop_size();
  for (int i = 0; i < this->shop_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->shop(i));
  }

  // repeated .app.message.YYPurpleVipNickProto nicks = 2;
  total_size += 1 * this->nicks_size();
  for (int i = 0; i < this->nicks_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->nicks(i));
  }

  // repeated .app.message.YYPurpleVipXinshoulibaoProto libao = 3;
  total_size += 1 * this->libao_size();
  for (int i = 0; i < this->libao_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->libao(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YYPurpleVipConfigProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const YYPurpleVipConfigProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const YYPurpleVipConfigProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void YYPurpleVipConfigProto::MergeFrom(const YYPurpleVipConfigProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  shop_.MergeFrom(from.shop_);
  nicks_.MergeFrom(from.nicks_);
  libao_.MergeFrom(from.libao_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void YYPurpleVipConfigProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YYPurpleVipConfigProto::CopyFrom(const YYPurpleVipConfigProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YYPurpleVipConfigProto::IsInitialized() const {

  return true;
}

void YYPurpleVipConfigProto::Swap(YYPurpleVipConfigProto* other) {
  if (other != this) {
    shop_.Swap(&other->shop_);
    nicks_.Swap(&other->nicks_);
    libao_.Swap(&other->libao_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata YYPurpleVipConfigProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YYPurpleVipConfigProto_descriptor_;
  metadata.reflection = YYPurpleVipConfigProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int YYPurpleVipNickProto::kNickIdFieldNumber;
const int YYPurpleVipNickProto::kVipTypeFieldNumber;
#endif  // !_MSC_VER

YYPurpleVipNickProto::YYPurpleVipNickProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void YYPurpleVipNickProto::InitAsDefaultInstance() {
}

YYPurpleVipNickProto::YYPurpleVipNickProto(const YYPurpleVipNickProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void YYPurpleVipNickProto::SharedCtor() {
  _cached_size_ = 0;
  nick_id_ = 0;
  vip_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YYPurpleVipNickProto::~YYPurpleVipNickProto() {
  SharedDtor();
}

void YYPurpleVipNickProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void YYPurpleVipNickProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YYPurpleVipNickProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YYPurpleVipNickProto_descriptor_;
}

const YYPurpleVipNickProto& YYPurpleVipNickProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

YYPurpleVipNickProto* YYPurpleVipNickProto::default_instance_ = NULL;

YYPurpleVipNickProto* YYPurpleVipNickProto::New() const {
  return new YYPurpleVipNickProto;
}

void YYPurpleVipNickProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    nick_id_ = 0;
    vip_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool YYPurpleVipNickProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 nick_id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nick_id_)));
          set_has_nick_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_vip_type;
        break;
      }

      // optional int32 vip_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vip_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_type_)));
          set_has_vip_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void YYPurpleVipNickProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 nick_id = 1;
  if (has_nick_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nick_id(), output);
  }

  // optional int32 vip_type = 2;
  if (has_vip_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->vip_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* YYPurpleVipNickProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 nick_id = 1;
  if (has_nick_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nick_id(), target);
  }

  // optional int32 vip_type = 2;
  if (has_vip_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->vip_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int YYPurpleVipNickProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 nick_id = 1;
    if (has_nick_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nick_id());
    }

    // optional int32 vip_type = 2;
    if (has_vip_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YYPurpleVipNickProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const YYPurpleVipNickProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const YYPurpleVipNickProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void YYPurpleVipNickProto::MergeFrom(const YYPurpleVipNickProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nick_id()) {
      set_nick_id(from.nick_id());
    }
    if (from.has_vip_type()) {
      set_vip_type(from.vip_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void YYPurpleVipNickProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YYPurpleVipNickProto::CopyFrom(const YYPurpleVipNickProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YYPurpleVipNickProto::IsInitialized() const {

  return true;
}

void YYPurpleVipNickProto::Swap(YYPurpleVipNickProto* other) {
  if (other != this) {
    std::swap(nick_id_, other->nick_id_);
    std::swap(vip_type_, other->vip_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata YYPurpleVipNickProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YYPurpleVipNickProto_descriptor_;
  metadata.reflection = YYPurpleVipNickProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int YYPurpleVipXinshoulibaoProto::kPrizeFieldNumber;
const int YYPurpleVipXinshoulibaoProto::kVipTypeFieldNumber;
#endif  // !_MSC_VER

YYPurpleVipXinshoulibaoProto::YYPurpleVipXinshoulibaoProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void YYPurpleVipXinshoulibaoProto::InitAsDefaultInstance() {
  prize_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
}

YYPurpleVipXinshoulibaoProto::YYPurpleVipXinshoulibaoProto(const YYPurpleVipXinshoulibaoProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void YYPurpleVipXinshoulibaoProto::SharedCtor() {
  _cached_size_ = 0;
  prize_ = NULL;
  vip_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YYPurpleVipXinshoulibaoProto::~YYPurpleVipXinshoulibaoProto() {
  SharedDtor();
}

void YYPurpleVipXinshoulibaoProto::SharedDtor() {
  if (this != default_instance_) {
    delete prize_;
  }
}

void YYPurpleVipXinshoulibaoProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YYPurpleVipXinshoulibaoProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YYPurpleVipXinshoulibaoProto_descriptor_;
}

const YYPurpleVipXinshoulibaoProto& YYPurpleVipXinshoulibaoProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

YYPurpleVipXinshoulibaoProto* YYPurpleVipXinshoulibaoProto::default_instance_ = NULL;

YYPurpleVipXinshoulibaoProto* YYPurpleVipXinshoulibaoProto::New() const {
  return new YYPurpleVipXinshoulibaoProto;
}

void YYPurpleVipXinshoulibaoProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_prize()) {
      if (prize_ != NULL) prize_->::app::message::PrizeProto::Clear();
    }
    vip_type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool YYPurpleVipXinshoulibaoProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .app.message.PrizeProto prize = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_vip_type;
        break;
      }

      // optional int32 vip_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vip_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_type_)));
          set_has_vip_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void YYPurpleVipXinshoulibaoProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .app.message.PrizeProto prize = 1;
  if (has_prize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->prize(), output);
  }

  // optional int32 vip_type = 2;
  if (has_vip_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->vip_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* YYPurpleVipXinshoulibaoProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .app.message.PrizeProto prize = 1;
  if (has_prize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->prize(), target);
  }

  // optional int32 vip_type = 2;
  if (has_vip_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->vip_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int YYPurpleVipXinshoulibaoProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .app.message.PrizeProto prize = 1;
    if (has_prize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prize());
    }

    // optional int32 vip_type = 2;
    if (has_vip_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip_type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YYPurpleVipXinshoulibaoProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const YYPurpleVipXinshoulibaoProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const YYPurpleVipXinshoulibaoProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void YYPurpleVipXinshoulibaoProto::MergeFrom(const YYPurpleVipXinshoulibaoProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_prize()) {
      mutable_prize()->::app::message::PrizeProto::MergeFrom(from.prize());
    }
    if (from.has_vip_type()) {
      set_vip_type(from.vip_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void YYPurpleVipXinshoulibaoProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YYPurpleVipXinshoulibaoProto::CopyFrom(const YYPurpleVipXinshoulibaoProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YYPurpleVipXinshoulibaoProto::IsInitialized() const {

  return true;
}

void YYPurpleVipXinshoulibaoProto::Swap(YYPurpleVipXinshoulibaoProto* other) {
  if (other != this) {
    std::swap(prize_, other->prize_);
    std::swap(vip_type_, other->vip_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata YYPurpleVipXinshoulibaoProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YYPurpleVipXinshoulibaoProto_descriptor_;
  metadata.reflection = YYPurpleVipXinshoulibaoProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int YYPurpleVipShopProto::kPrizeFieldNumber;
const int YYPurpleVipShopProto::kVipTypeFieldNumber;
const int YYPurpleVipShopProto::kIndexFieldNumber;
const int YYPurpleVipShopProto::kTimeLimitFieldNumber;
const int YYPurpleVipShopProto::kShowPriceFieldNumber;
const int YYPurpleVipShopProto::kPriceFieldNumber;
const int YYPurpleVipShopProto::kDescFieldNumber;
#endif  // !_MSC_VER

YYPurpleVipShopProto::YYPurpleVipShopProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void YYPurpleVipShopProto::InitAsDefaultInstance() {
  prize_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
}

YYPurpleVipShopProto::YYPurpleVipShopProto(const YYPurpleVipShopProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void YYPurpleVipShopProto::SharedCtor() {
  _cached_size_ = 0;
  prize_ = NULL;
  vip_type_ = 0;
  index_ = 0;
  time_limit_ = 0;
  show_price_ = 0;
  price_ = 0;
  desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

YYPurpleVipShopProto::~YYPurpleVipShopProto() {
  SharedDtor();
}

void YYPurpleVipShopProto::SharedDtor() {
  if (desc_ != &::google::protobuf::internal::kEmptyString) {
    delete desc_;
  }
  if (this != default_instance_) {
    delete prize_;
  }
}

void YYPurpleVipShopProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* YYPurpleVipShopProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return YYPurpleVipShopProto_descriptor_;
}

const YYPurpleVipShopProto& YYPurpleVipShopProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

YYPurpleVipShopProto* YYPurpleVipShopProto::default_instance_ = NULL;

YYPurpleVipShopProto* YYPurpleVipShopProto::New() const {
  return new YYPurpleVipShopProto;
}

void YYPurpleVipShopProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_prize()) {
      if (prize_ != NULL) prize_->::app::message::PrizeProto::Clear();
    }
    vip_type_ = 0;
    index_ = 0;
    time_limit_ = 0;
    show_price_ = 0;
    price_ = 0;
    if (has_desc()) {
      if (desc_ != &::google::protobuf::internal::kEmptyString) {
        desc_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool YYPurpleVipShopProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .app.message.PrizeProto prize = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_vip_type;
        break;
      }

      // optional int32 vip_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vip_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vip_type_)));
          set_has_vip_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_index;
        break;
      }

      // optional int32 index = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_time_limit;
        break;
      }

      // optional int32 time_limit = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_time_limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_limit_)));
          set_has_time_limit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_show_price;
        break;
      }

      // optional int32 show_price = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_show_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &show_price_)));
          set_has_show_price();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_price;
        break;
      }

      // optional int32 price = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &price_)));
          set_has_price();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_desc;
        break;
      }

      // optional string desc = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_desc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->desc().data(), this->desc().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void YYPurpleVipShopProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .app.message.PrizeProto prize = 1;
  if (has_prize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->prize(), output);
  }

  // optional int32 vip_type = 2;
  if (has_vip_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->vip_type(), output);
  }

  // optional int32 index = 3;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->index(), output);
  }

  // optional int32 time_limit = 4;
  if (has_time_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->time_limit(), output);
  }

  // optional int32 show_price = 5;
  if (has_show_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->show_price(), output);
  }

  // optional int32 price = 6;
  if (has_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->price(), output);
  }

  // optional string desc = 7;
  if (has_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->desc(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* YYPurpleVipShopProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .app.message.PrizeProto prize = 1;
  if (has_prize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->prize(), target);
  }

  // optional int32 vip_type = 2;
  if (has_vip_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->vip_type(), target);
  }

  // optional int32 index = 3;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->index(), target);
  }

  // optional int32 time_limit = 4;
  if (has_time_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->time_limit(), target);
  }

  // optional int32 show_price = 5;
  if (has_show_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->show_price(), target);
  }

  // optional int32 price = 6;
  if (has_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->price(), target);
  }

  // optional string desc = 7;
  if (has_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->desc(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int YYPurpleVipShopProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .app.message.PrizeProto prize = 1;
    if (has_prize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prize());
    }

    // optional int32 vip_type = 2;
    if (has_vip_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vip_type());
    }

    // optional int32 index = 3;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }

    // optional int32 time_limit = 4;
    if (has_time_limit()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->time_limit());
    }

    // optional int32 show_price = 5;
    if (has_show_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->show_price());
    }

    // optional int32 price = 6;
    if (has_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->price());
    }

    // optional string desc = 7;
    if (has_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->desc());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void YYPurpleVipShopProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const YYPurpleVipShopProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const YYPurpleVipShopProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void YYPurpleVipShopProto::MergeFrom(const YYPurpleVipShopProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_prize()) {
      mutable_prize()->::app::message::PrizeProto::MergeFrom(from.prize());
    }
    if (from.has_vip_type()) {
      set_vip_type(from.vip_type());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_time_limit()) {
      set_time_limit(from.time_limit());
    }
    if (from.has_show_price()) {
      set_show_price(from.show_price());
    }
    if (from.has_price()) {
      set_price(from.price());
    }
    if (from.has_desc()) {
      set_desc(from.desc());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void YYPurpleVipShopProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void YYPurpleVipShopProto::CopyFrom(const YYPurpleVipShopProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool YYPurpleVipShopProto::IsInitialized() const {

  return true;
}

void YYPurpleVipShopProto::Swap(YYPurpleVipShopProto* other) {
  if (other != this) {
    std::swap(prize_, other->prize_);
    std::swap(vip_type_, other->vip_type_);
    std::swap(index_, other->index_);
    std::swap(time_limit_, other->time_limit_);
    std::swap(show_price_, other->show_price_);
    std::swap(price_, other->price_);
    std::swap(desc_, other->desc_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata YYPurpleVipShopProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = YYPurpleVipShopProto_descriptor_;
  metadata.reflection = YYPurpleVipShopProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CreditsShopDatasProto::kStartTimeFieldNumber;
const int CreditsShopDatasProto::kEndTimeFieldNumber;
const int CreditsShopDatasProto::kDataFieldNumber;
#endif  // !_MSC_VER

CreditsShopDatasProto::CreditsShopDatasProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CreditsShopDatasProto::InitAsDefaultInstance() {
}

CreditsShopDatasProto::CreditsShopDatasProto(const CreditsShopDatasProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CreditsShopDatasProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreditsShopDatasProto::~CreditsShopDatasProto() {
  SharedDtor();
}

void CreditsShopDatasProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CreditsShopDatasProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreditsShopDatasProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreditsShopDatasProto_descriptor_;
}

const CreditsShopDatasProto& CreditsShopDatasProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

CreditsShopDatasProto* CreditsShopDatasProto::default_instance_ = NULL;

CreditsShopDatasProto* CreditsShopDatasProto::New() const {
  return new CreditsShopDatasProto;
}

void CreditsShopDatasProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CreditsShopDatasProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_data;
        break;
      }

      // repeated .app.message.CreditsShopDataProto data = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CreditsShopDatasProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // repeated .app.message.CreditsShopDataProto data = 3;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CreditsShopDatasProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // repeated .app.message.CreditsShopDataProto data = 3;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CreditsShopDatasProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

  }
  // repeated .app.message.CreditsShopDataProto data = 3;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreditsShopDatasProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CreditsShopDatasProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CreditsShopDatasProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CreditsShopDatasProto::MergeFrom(const CreditsShopDatasProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CreditsShopDatasProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreditsShopDatasProto::CopyFrom(const CreditsShopDatasProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreditsShopDatasProto::IsInitialized() const {

  return true;
}

void CreditsShopDatasProto::Swap(CreditsShopDatasProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CreditsShopDatasProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreditsShopDatasProto_descriptor_;
  metadata.reflection = CreditsShopDatasProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CreditsShopDataProto::kGoodsFieldNumber;
const int CreditsShopDataProto::kSaleStartTimeFieldNumber;
const int CreditsShopDataProto::kSaleEndTimeFieldNumber;
const int CreditsShopDataProto::kCreditsFieldNumber;
const int CreditsShopDataProto::kCreditsDiscountFieldNumber;
const int CreditsShopDataProto::kMaxExchangeFieldNumber;
const int CreditsShopDataProto::kYuanbaoFieldNumber;
const int CreditsShopDataProto::kYuanbaoDiscountFieldNumber;
#endif  // !_MSC_VER

CreditsShopDataProto::CreditsShopDataProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CreditsShopDataProto::InitAsDefaultInstance() {
  goods_ = const_cast< ::app::message::GoodsWrapperProto*>(&::app::message::GoodsWrapperProto::default_instance());
}

CreditsShopDataProto::CreditsShopDataProto(const CreditsShopDataProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CreditsShopDataProto::SharedCtor() {
  _cached_size_ = 0;
  goods_ = NULL;
  sale_start_time_ = 0;
  sale_end_time_ = 0;
  credits_ = 0;
  credits_discount_ = 0;
  max_exchange_ = 0;
  yuanbao_ = 0;
  yuanbao_discount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CreditsShopDataProto::~CreditsShopDataProto() {
  SharedDtor();
}

void CreditsShopDataProto::SharedDtor() {
  if (this != default_instance_) {
    delete goods_;
  }
}

void CreditsShopDataProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreditsShopDataProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreditsShopDataProto_descriptor_;
}

const CreditsShopDataProto& CreditsShopDataProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

CreditsShopDataProto* CreditsShopDataProto::default_instance_ = NULL;

CreditsShopDataProto* CreditsShopDataProto::New() const {
  return new CreditsShopDataProto;
}

void CreditsShopDataProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_goods()) {
      if (goods_ != NULL) goods_->::app::message::GoodsWrapperProto::Clear();
    }
    sale_start_time_ = 0;
    sale_end_time_ = 0;
    credits_ = 0;
    credits_discount_ = 0;
    max_exchange_ = 0;
    yuanbao_ = 0;
    yuanbao_discount_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CreditsShopDataProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .app.message.GoodsWrapperProto goods = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_goods()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_sale_start_time;
        break;
      }

      // optional int32 sale_start_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sale_start_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sale_start_time_)));
          set_has_sale_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_sale_end_time;
        break;
      }

      // optional int32 sale_end_time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sale_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sale_end_time_)));
          set_has_sale_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_credits;
        break;
      }

      // optional int32 credits = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_credits:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &credits_)));
          set_has_credits();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_credits_discount;
        break;
      }

      // optional int32 credits_discount = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_credits_discount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &credits_discount_)));
          set_has_credits_discount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_max_exchange;
        break;
      }

      // optional int32 max_exchange = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_max_exchange:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_exchange_)));
          set_has_max_exchange();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_yuanbao;
        break;
      }

      // optional int32 yuanbao = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_yuanbao:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yuanbao_)));
          set_has_yuanbao();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_yuanbao_discount;
        break;
      }

      // optional int32 yuanbao_discount = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_yuanbao_discount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yuanbao_discount_)));
          set_has_yuanbao_discount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CreditsShopDataProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .app.message.GoodsWrapperProto goods = 1;
  if (has_goods()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->goods(), output);
  }

  // optional int32 sale_start_time = 2;
  if (has_sale_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sale_start_time(), output);
  }

  // optional int32 sale_end_time = 3;
  if (has_sale_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->sale_end_time(), output);
  }

  // optional int32 credits = 4;
  if (has_credits()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->credits(), output);
  }

  // optional int32 credits_discount = 5;
  if (has_credits_discount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->credits_discount(), output);
  }

  // optional int32 max_exchange = 6;
  if (has_max_exchange()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->max_exchange(), output);
  }

  // optional int32 yuanbao = 7;
  if (has_yuanbao()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->yuanbao(), output);
  }

  // optional int32 yuanbao_discount = 8;
  if (has_yuanbao_discount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->yuanbao_discount(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CreditsShopDataProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .app.message.GoodsWrapperProto goods = 1;
  if (has_goods()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->goods(), target);
  }

  // optional int32 sale_start_time = 2;
  if (has_sale_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sale_start_time(), target);
  }

  // optional int32 sale_end_time = 3;
  if (has_sale_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->sale_end_time(), target);
  }

  // optional int32 credits = 4;
  if (has_credits()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->credits(), target);
  }

  // optional int32 credits_discount = 5;
  if (has_credits_discount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->credits_discount(), target);
  }

  // optional int32 max_exchange = 6;
  if (has_max_exchange()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->max_exchange(), target);
  }

  // optional int32 yuanbao = 7;
  if (has_yuanbao()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->yuanbao(), target);
  }

  // optional int32 yuanbao_discount = 8;
  if (has_yuanbao_discount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->yuanbao_discount(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CreditsShopDataProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .app.message.GoodsWrapperProto goods = 1;
    if (has_goods()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->goods());
    }

    // optional int32 sale_start_time = 2;
    if (has_sale_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sale_start_time());
    }

    // optional int32 sale_end_time = 3;
    if (has_sale_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sale_end_time());
    }

    // optional int32 credits = 4;
    if (has_credits()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->credits());
    }

    // optional int32 credits_discount = 5;
    if (has_credits_discount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->credits_discount());
    }

    // optional int32 max_exchange = 6;
    if (has_max_exchange()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_exchange());
    }

    // optional int32 yuanbao = 7;
    if (has_yuanbao()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->yuanbao());
    }

    // optional int32 yuanbao_discount = 8;
    if (has_yuanbao_discount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->yuanbao_discount());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreditsShopDataProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CreditsShopDataProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CreditsShopDataProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CreditsShopDataProto::MergeFrom(const CreditsShopDataProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_goods()) {
      mutable_goods()->::app::message::GoodsWrapperProto::MergeFrom(from.goods());
    }
    if (from.has_sale_start_time()) {
      set_sale_start_time(from.sale_start_time());
    }
    if (from.has_sale_end_time()) {
      set_sale_end_time(from.sale_end_time());
    }
    if (from.has_credits()) {
      set_credits(from.credits());
    }
    if (from.has_credits_discount()) {
      set_credits_discount(from.credits_discount());
    }
    if (from.has_max_exchange()) {
      set_max_exchange(from.max_exchange());
    }
    if (from.has_yuanbao()) {
      set_yuanbao(from.yuanbao());
    }
    if (from.has_yuanbao_discount()) {
      set_yuanbao_discount(from.yuanbao_discount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CreditsShopDataProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreditsShopDataProto::CopyFrom(const CreditsShopDataProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreditsShopDataProto::IsInitialized() const {

  return true;
}

void CreditsShopDataProto::Swap(CreditsShopDataProto* other) {
  if (other != this) {
    std::swap(goods_, other->goods_);
    std::swap(sale_start_time_, other->sale_start_time_);
    std::swap(sale_end_time_, other->sale_end_time_);
    std::swap(credits_, other->credits_);
    std::swap(credits_discount_, other->credits_discount_);
    std::swap(max_exchange_, other->max_exchange_);
    std::swap(yuanbao_, other->yuanbao_);
    std::swap(yuanbao_discount_, other->yuanbao_discount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CreditsShopDataProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreditsShopDataProto_descriptor_;
  metadata.reflection = CreditsShopDataProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DailyShopDatasProto::kStartTimeFieldNumber;
const int DailyShopDatasProto::kEndTimeFieldNumber;
const int DailyShopDatasProto::kDataFieldNumber;
#endif  // !_MSC_VER

DailyShopDatasProto::DailyShopDatasProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DailyShopDatasProto::InitAsDefaultInstance() {
}

DailyShopDatasProto::DailyShopDatasProto(const DailyShopDatasProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DailyShopDatasProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DailyShopDatasProto::~DailyShopDatasProto() {
  SharedDtor();
}

void DailyShopDatasProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DailyShopDatasProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DailyShopDatasProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DailyShopDatasProto_descriptor_;
}

const DailyShopDatasProto& DailyShopDatasProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

DailyShopDatasProto* DailyShopDatasProto::default_instance_ = NULL;

DailyShopDatasProto* DailyShopDatasProto::New() const {
  return new DailyShopDatasProto;
}

void DailyShopDatasProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DailyShopDatasProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_data;
        break;
      }

      // repeated .app.message.DailyShopDataProto data = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DailyShopDatasProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // repeated .app.message.DailyShopDataProto data = 3;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DailyShopDatasProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // repeated .app.message.DailyShopDataProto data = 3;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DailyShopDatasProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

  }
  // repeated .app.message.DailyShopDataProto data = 3;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DailyShopDatasProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DailyShopDatasProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DailyShopDatasProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DailyShopDatasProto::MergeFrom(const DailyShopDatasProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DailyShopDatasProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DailyShopDatasProto::CopyFrom(const DailyShopDatasProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyShopDatasProto::IsInitialized() const {

  return true;
}

void DailyShopDatasProto::Swap(DailyShopDatasProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DailyShopDatasProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DailyShopDatasProto_descriptor_;
  metadata.reflection = DailyShopDatasProto_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* DailyShopDataProto_PriceType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DailyShopDataProto_PriceType_descriptor_;
}
bool DailyShopDataProto_PriceType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const DailyShopDataProto_PriceType DailyShopDataProto::LIJIN;
const DailyShopDataProto_PriceType DailyShopDataProto::YUANBAO;
const DailyShopDataProto_PriceType DailyShopDataProto::PriceType_MIN;
const DailyShopDataProto_PriceType DailyShopDataProto::PriceType_MAX;
const int DailyShopDataProto::PriceType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int DailyShopDataProto::kGoodsFieldNumber;
const int DailyShopDataProto::kDayCountFieldNumber;
const int DailyShopDataProto::kMaxExchangeFieldNumber;
const int DailyShopDataProto::kPriceTypeFieldNumber;
const int DailyShopDataProto::kPriceFieldNumber;
const int DailyShopDataProto::kPriceDiscountFieldNumber;
#endif  // !_MSC_VER

DailyShopDataProto::DailyShopDataProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DailyShopDataProto::InitAsDefaultInstance() {
  goods_ = const_cast< ::app::message::GoodsWrapperProto*>(&::app::message::GoodsWrapperProto::default_instance());
}

DailyShopDataProto::DailyShopDataProto(const DailyShopDataProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DailyShopDataProto::SharedCtor() {
  _cached_size_ = 0;
  goods_ = NULL;
  day_count_ = 0;
  max_exchange_ = 0;
  price_type_ = 1;
  price_ = 0;
  price_discount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DailyShopDataProto::~DailyShopDataProto() {
  SharedDtor();
}

void DailyShopDataProto::SharedDtor() {
  if (this != default_instance_) {
    delete goods_;
  }
}

void DailyShopDataProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DailyShopDataProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DailyShopDataProto_descriptor_;
}

const DailyShopDataProto& DailyShopDataProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

DailyShopDataProto* DailyShopDataProto::default_instance_ = NULL;

DailyShopDataProto* DailyShopDataProto::New() const {
  return new DailyShopDataProto;
}

void DailyShopDataProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_goods()) {
      if (goods_ != NULL) goods_->::app::message::GoodsWrapperProto::Clear();
    }
    day_count_ = 0;
    max_exchange_ = 0;
    price_type_ = 1;
    price_ = 0;
    price_discount_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DailyShopDataProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .app.message.GoodsWrapperProto goods = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_goods()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_day_count;
        break;
      }

      // optional int32 day_count = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_day_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &day_count_)));
          set_has_day_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_max_exchange;
        break;
      }

      // optional int32 max_exchange = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_max_exchange:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_exchange_)));
          set_has_max_exchange();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_price_type;
        break;
      }

      // optional .app.message.DailyShopDataProto.PriceType price_type = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_price_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::app::message::DailyShopDataProto_PriceType_IsValid(value)) {
            set_price_type(static_cast< ::app::message::DailyShopDataProto_PriceType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_price;
        break;
      }

      // optional int32 price = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &price_)));
          set_has_price();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_price_discount;
        break;
      }

      // optional int32 price_discount = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_price_discount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &price_discount_)));
          set_has_price_discount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DailyShopDataProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .app.message.GoodsWrapperProto goods = 1;
  if (has_goods()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->goods(), output);
  }

  // optional int32 day_count = 2;
  if (has_day_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->day_count(), output);
  }

  // optional int32 max_exchange = 3;
  if (has_max_exchange()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->max_exchange(), output);
  }

  // optional .app.message.DailyShopDataProto.PriceType price_type = 4;
  if (has_price_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->price_type(), output);
  }

  // optional int32 price = 5;
  if (has_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->price(), output);
  }

  // optional int32 price_discount = 6;
  if (has_price_discount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->price_discount(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DailyShopDataProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .app.message.GoodsWrapperProto goods = 1;
  if (has_goods()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->goods(), target);
  }

  // optional int32 day_count = 2;
  if (has_day_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->day_count(), target);
  }

  // optional int32 max_exchange = 3;
  if (has_max_exchange()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->max_exchange(), target);
  }

  // optional .app.message.DailyShopDataProto.PriceType price_type = 4;
  if (has_price_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->price_type(), target);
  }

  // optional int32 price = 5;
  if (has_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->price(), target);
  }

  // optional int32 price_discount = 6;
  if (has_price_discount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->price_discount(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DailyShopDataProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .app.message.GoodsWrapperProto goods = 1;
    if (has_goods()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->goods());
    }

    // optional int32 day_count = 2;
    if (has_day_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->day_count());
    }

    // optional int32 max_exchange = 3;
    if (has_max_exchange()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_exchange());
    }

    // optional .app.message.DailyShopDataProto.PriceType price_type = 4;
    if (has_price_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->price_type());
    }

    // optional int32 price = 5;
    if (has_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->price());
    }

    // optional int32 price_discount = 6;
    if (has_price_discount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->price_discount());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DailyShopDataProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DailyShopDataProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DailyShopDataProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DailyShopDataProto::MergeFrom(const DailyShopDataProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_goods()) {
      mutable_goods()->::app::message::GoodsWrapperProto::MergeFrom(from.goods());
    }
    if (from.has_day_count()) {
      set_day_count(from.day_count());
    }
    if (from.has_max_exchange()) {
      set_max_exchange(from.max_exchange());
    }
    if (from.has_price_type()) {
      set_price_type(from.price_type());
    }
    if (from.has_price()) {
      set_price(from.price());
    }
    if (from.has_price_discount()) {
      set_price_discount(from.price_discount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DailyShopDataProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DailyShopDataProto::CopyFrom(const DailyShopDataProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyShopDataProto::IsInitialized() const {

  return true;
}

void DailyShopDataProto::Swap(DailyShopDataProto* other) {
  if (other != this) {
    std::swap(goods_, other->goods_);
    std::swap(day_count_, other->day_count_);
    std::swap(max_exchange_, other->max_exchange_);
    std::swap(price_type_, other->price_type_);
    std::swap(price_, other->price_);
    std::swap(price_discount_, other->price_discount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DailyShopDataProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DailyShopDataProto_descriptor_;
  metadata.reflection = DailyShopDataProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuYuCreditsShopDatasProto::kStartTimeFieldNumber;
const int BuYuCreditsShopDatasProto::kEndTimeFieldNumber;
const int BuYuCreditsShopDatasProto::kDataFieldNumber;
#endif  // !_MSC_VER

BuYuCreditsShopDatasProto::BuYuCreditsShopDatasProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BuYuCreditsShopDatasProto::InitAsDefaultInstance() {
}

BuYuCreditsShopDatasProto::BuYuCreditsShopDatasProto(const BuYuCreditsShopDatasProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BuYuCreditsShopDatasProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuYuCreditsShopDatasProto::~BuYuCreditsShopDatasProto() {
  SharedDtor();
}

void BuYuCreditsShopDatasProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BuYuCreditsShopDatasProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuYuCreditsShopDatasProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuYuCreditsShopDatasProto_descriptor_;
}

const BuYuCreditsShopDatasProto& BuYuCreditsShopDatasProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

BuYuCreditsShopDatasProto* BuYuCreditsShopDatasProto::default_instance_ = NULL;

BuYuCreditsShopDatasProto* BuYuCreditsShopDatasProto::New() const {
  return new BuYuCreditsShopDatasProto;
}

void BuYuCreditsShopDatasProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuYuCreditsShopDatasProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_data;
        break;
      }

      // repeated .app.message.BuYuCreditsShopDataProto data = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BuYuCreditsShopDatasProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // repeated .app.message.BuYuCreditsShopDataProto data = 3;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BuYuCreditsShopDatasProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // repeated .app.message.BuYuCreditsShopDataProto data = 3;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BuYuCreditsShopDatasProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

  }
  // repeated .app.message.BuYuCreditsShopDataProto data = 3;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuYuCreditsShopDatasProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuYuCreditsShopDatasProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuYuCreditsShopDatasProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuYuCreditsShopDatasProto::MergeFrom(const BuYuCreditsShopDatasProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuYuCreditsShopDatasProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuYuCreditsShopDatasProto::CopyFrom(const BuYuCreditsShopDatasProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuYuCreditsShopDatasProto::IsInitialized() const {

  return true;
}

void BuYuCreditsShopDatasProto::Swap(BuYuCreditsShopDatasProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuYuCreditsShopDatasProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuYuCreditsShopDatasProto_descriptor_;
  metadata.reflection = BuYuCreditsShopDatasProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BuYuCreditsShopDataProto::kGoodsFieldNumber;
const int BuYuCreditsShopDataProto::kSaleStartTimeFieldNumber;
const int BuYuCreditsShopDataProto::kSaleEndTimeFieldNumber;
const int BuYuCreditsShopDataProto::kCreditsFieldNumber;
const int BuYuCreditsShopDataProto::kCreditsDiscountFieldNumber;
const int BuYuCreditsShopDataProto::kMaxExchangeFieldNumber;
const int BuYuCreditsShopDataProto::kYuanbaoFieldNumber;
const int BuYuCreditsShopDataProto::kYuanbaoDiscountFieldNumber;
#endif  // !_MSC_VER

BuYuCreditsShopDataProto::BuYuCreditsShopDataProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BuYuCreditsShopDataProto::InitAsDefaultInstance() {
  goods_ = const_cast< ::app::message::GoodsWrapperProto*>(&::app::message::GoodsWrapperProto::default_instance());
}

BuYuCreditsShopDataProto::BuYuCreditsShopDataProto(const BuYuCreditsShopDataProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BuYuCreditsShopDataProto::SharedCtor() {
  _cached_size_ = 0;
  goods_ = NULL;
  sale_start_time_ = 0;
  sale_end_time_ = 0;
  credits_ = 0;
  credits_discount_ = 0;
  max_exchange_ = 0;
  yuanbao_ = 0;
  yuanbao_discount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BuYuCreditsShopDataProto::~BuYuCreditsShopDataProto() {
  SharedDtor();
}

void BuYuCreditsShopDataProto::SharedDtor() {
  if (this != default_instance_) {
    delete goods_;
  }
}

void BuYuCreditsShopDataProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuYuCreditsShopDataProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BuYuCreditsShopDataProto_descriptor_;
}

const BuYuCreditsShopDataProto& BuYuCreditsShopDataProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

BuYuCreditsShopDataProto* BuYuCreditsShopDataProto::default_instance_ = NULL;

BuYuCreditsShopDataProto* BuYuCreditsShopDataProto::New() const {
  return new BuYuCreditsShopDataProto;
}

void BuYuCreditsShopDataProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_goods()) {
      if (goods_ != NULL) goods_->::app::message::GoodsWrapperProto::Clear();
    }
    sale_start_time_ = 0;
    sale_end_time_ = 0;
    credits_ = 0;
    credits_discount_ = 0;
    max_exchange_ = 0;
    yuanbao_ = 0;
    yuanbao_discount_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BuYuCreditsShopDataProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .app.message.GoodsWrapperProto goods = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_goods()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_sale_start_time;
        break;
      }

      // optional int32 sale_start_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sale_start_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sale_start_time_)));
          set_has_sale_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_sale_end_time;
        break;
      }

      // optional int32 sale_end_time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sale_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sale_end_time_)));
          set_has_sale_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_credits;
        break;
      }

      // optional int32 credits = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_credits:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &credits_)));
          set_has_credits();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_credits_discount;
        break;
      }

      // optional int32 credits_discount = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_credits_discount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &credits_discount_)));
          set_has_credits_discount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_max_exchange;
        break;
      }

      // optional int32 max_exchange = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_max_exchange:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_exchange_)));
          set_has_max_exchange();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_yuanbao;
        break;
      }

      // optional int32 yuanbao = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_yuanbao:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yuanbao_)));
          set_has_yuanbao();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_yuanbao_discount;
        break;
      }

      // optional int32 yuanbao_discount = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_yuanbao_discount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yuanbao_discount_)));
          set_has_yuanbao_discount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BuYuCreditsShopDataProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .app.message.GoodsWrapperProto goods = 1;
  if (has_goods()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->goods(), output);
  }

  // optional int32 sale_start_time = 2;
  if (has_sale_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sale_start_time(), output);
  }

  // optional int32 sale_end_time = 3;
  if (has_sale_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->sale_end_time(), output);
  }

  // optional int32 credits = 4;
  if (has_credits()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->credits(), output);
  }

  // optional int32 credits_discount = 5;
  if (has_credits_discount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->credits_discount(), output);
  }

  // optional int32 max_exchange = 6;
  if (has_max_exchange()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->max_exchange(), output);
  }

  // optional int32 yuanbao = 7;
  if (has_yuanbao()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->yuanbao(), output);
  }

  // optional int32 yuanbao_discount = 8;
  if (has_yuanbao_discount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->yuanbao_discount(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BuYuCreditsShopDataProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .app.message.GoodsWrapperProto goods = 1;
  if (has_goods()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->goods(), target);
  }

  // optional int32 sale_start_time = 2;
  if (has_sale_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sale_start_time(), target);
  }

  // optional int32 sale_end_time = 3;
  if (has_sale_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->sale_end_time(), target);
  }

  // optional int32 credits = 4;
  if (has_credits()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->credits(), target);
  }

  // optional int32 credits_discount = 5;
  if (has_credits_discount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->credits_discount(), target);
  }

  // optional int32 max_exchange = 6;
  if (has_max_exchange()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->max_exchange(), target);
  }

  // optional int32 yuanbao = 7;
  if (has_yuanbao()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->yuanbao(), target);
  }

  // optional int32 yuanbao_discount = 8;
  if (has_yuanbao_discount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->yuanbao_discount(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BuYuCreditsShopDataProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .app.message.GoodsWrapperProto goods = 1;
    if (has_goods()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->goods());
    }

    // optional int32 sale_start_time = 2;
    if (has_sale_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sale_start_time());
    }

    // optional int32 sale_end_time = 3;
    if (has_sale_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sale_end_time());
    }

    // optional int32 credits = 4;
    if (has_credits()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->credits());
    }

    // optional int32 credits_discount = 5;
    if (has_credits_discount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->credits_discount());
    }

    // optional int32 max_exchange = 6;
    if (has_max_exchange()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_exchange());
    }

    // optional int32 yuanbao = 7;
    if (has_yuanbao()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->yuanbao());
    }

    // optional int32 yuanbao_discount = 8;
    if (has_yuanbao_discount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->yuanbao_discount());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuYuCreditsShopDataProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BuYuCreditsShopDataProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BuYuCreditsShopDataProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BuYuCreditsShopDataProto::MergeFrom(const BuYuCreditsShopDataProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_goods()) {
      mutable_goods()->::app::message::GoodsWrapperProto::MergeFrom(from.goods());
    }
    if (from.has_sale_start_time()) {
      set_sale_start_time(from.sale_start_time());
    }
    if (from.has_sale_end_time()) {
      set_sale_end_time(from.sale_end_time());
    }
    if (from.has_credits()) {
      set_credits(from.credits());
    }
    if (from.has_credits_discount()) {
      set_credits_discount(from.credits_discount());
    }
    if (from.has_max_exchange()) {
      set_max_exchange(from.max_exchange());
    }
    if (from.has_yuanbao()) {
      set_yuanbao(from.yuanbao());
    }
    if (from.has_yuanbao_discount()) {
      set_yuanbao_discount(from.yuanbao_discount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BuYuCreditsShopDataProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuYuCreditsShopDataProto::CopyFrom(const BuYuCreditsShopDataProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuYuCreditsShopDataProto::IsInitialized() const {

  return true;
}

void BuYuCreditsShopDataProto::Swap(BuYuCreditsShopDataProto* other) {
  if (other != this) {
    std::swap(goods_, other->goods_);
    std::swap(sale_start_time_, other->sale_start_time_);
    std::swap(sale_end_time_, other->sale_end_time_);
    std::swap(credits_, other->credits_);
    std::swap(credits_discount_, other->credits_discount_);
    std::swap(max_exchange_, other->max_exchange_);
    std::swap(yuanbao_, other->yuanbao_);
    std::swap(yuanbao_discount_, other->yuanbao_discount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BuYuCreditsShopDataProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BuYuCreditsShopDataProto_descriptor_;
  metadata.reflection = BuYuCreditsShopDataProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DailyFirstRechargePromotionDatasProto::kStartTimeFieldNumber;
const int DailyFirstRechargePromotionDatasProto::kEndTimeFieldNumber;
const int DailyFirstRechargePromotionDatasProto::kDailyPrizeFieldNumber;
const int DailyFirstRechargePromotionDatasProto::kFinalPrizeFieldNumber;
const int DailyFirstRechargePromotionDatasProto::kPromotionTypeFieldNumber;
#endif  // !_MSC_VER

DailyFirstRechargePromotionDatasProto::DailyFirstRechargePromotionDatasProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DailyFirstRechargePromotionDatasProto::InitAsDefaultInstance() {
  final_prize_ = const_cast< ::app::message::DailyFirstRechargePromotionDataProto*>(&::app::message::DailyFirstRechargePromotionDataProto::default_instance());
}

DailyFirstRechargePromotionDatasProto::DailyFirstRechargePromotionDatasProto(const DailyFirstRechargePromotionDatasProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DailyFirstRechargePromotionDatasProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  final_prize_ = NULL;
  promotion_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DailyFirstRechargePromotionDatasProto::~DailyFirstRechargePromotionDatasProto() {
  SharedDtor();
}

void DailyFirstRechargePromotionDatasProto::SharedDtor() {
  if (this != default_instance_) {
    delete final_prize_;
  }
}

void DailyFirstRechargePromotionDatasProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DailyFirstRechargePromotionDatasProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DailyFirstRechargePromotionDatasProto_descriptor_;
}

const DailyFirstRechargePromotionDatasProto& DailyFirstRechargePromotionDatasProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

DailyFirstRechargePromotionDatasProto* DailyFirstRechargePromotionDatasProto::default_instance_ = NULL;

DailyFirstRechargePromotionDatasProto* DailyFirstRechargePromotionDatasProto::New() const {
  return new DailyFirstRechargePromotionDatasProto;
}

void DailyFirstRechargePromotionDatasProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    if (has_final_prize()) {
      if (final_prize_ != NULL) final_prize_->::app::message::DailyFirstRechargePromotionDataProto::Clear();
    }
    promotion_type_ = 0;
  }
  daily_prize_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DailyFirstRechargePromotionDatasProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_daily_prize;
        break;
      }

      // repeated .app.message.DailyFirstRechargePromotionDataProto daily_prize = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_daily_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_daily_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_daily_prize;
        if (input->ExpectTag(34)) goto parse_final_prize;
        break;
      }

      // optional .app.message.DailyFirstRechargePromotionDataProto final_prize = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_final_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_final_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_promotion_type;
        break;
      }

      // optional int32 promotion_type = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_promotion_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &promotion_type_)));
          set_has_promotion_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DailyFirstRechargePromotionDatasProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // repeated .app.message.DailyFirstRechargePromotionDataProto daily_prize = 3;
  for (int i = 0; i < this->daily_prize_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->daily_prize(i), output);
  }

  // optional .app.message.DailyFirstRechargePromotionDataProto final_prize = 4;
  if (has_final_prize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->final_prize(), output);
  }

  // optional int32 promotion_type = 5;
  if (has_promotion_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->promotion_type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DailyFirstRechargePromotionDatasProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // repeated .app.message.DailyFirstRechargePromotionDataProto daily_prize = 3;
  for (int i = 0; i < this->daily_prize_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->daily_prize(i), target);
  }

  // optional .app.message.DailyFirstRechargePromotionDataProto final_prize = 4;
  if (has_final_prize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->final_prize(), target);
  }

  // optional int32 promotion_type = 5;
  if (has_promotion_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->promotion_type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DailyFirstRechargePromotionDatasProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional .app.message.DailyFirstRechargePromotionDataProto final_prize = 4;
    if (has_final_prize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->final_prize());
    }

    // optional int32 promotion_type = 5;
    if (has_promotion_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->promotion_type());
    }

  }
  // repeated .app.message.DailyFirstRechargePromotionDataProto daily_prize = 3;
  total_size += 1 * this->daily_prize_size();
  for (int i = 0; i < this->daily_prize_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->daily_prize(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DailyFirstRechargePromotionDatasProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DailyFirstRechargePromotionDatasProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DailyFirstRechargePromotionDatasProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DailyFirstRechargePromotionDatasProto::MergeFrom(const DailyFirstRechargePromotionDatasProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  daily_prize_.MergeFrom(from.daily_prize_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_final_prize()) {
      mutable_final_prize()->::app::message::DailyFirstRechargePromotionDataProto::MergeFrom(from.final_prize());
    }
    if (from.has_promotion_type()) {
      set_promotion_type(from.promotion_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DailyFirstRechargePromotionDatasProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DailyFirstRechargePromotionDatasProto::CopyFrom(const DailyFirstRechargePromotionDatasProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyFirstRechargePromotionDatasProto::IsInitialized() const {

  return true;
}

void DailyFirstRechargePromotionDatasProto::Swap(DailyFirstRechargePromotionDatasProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    daily_prize_.Swap(&other->daily_prize_);
    std::swap(final_prize_, other->final_prize_);
    std::swap(promotion_type_, other->promotion_type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DailyFirstRechargePromotionDatasProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DailyFirstRechargePromotionDatasProto_descriptor_;
  metadata.reflection = DailyFirstRechargePromotionDatasProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DailyFirstRechargePromotionDataProto::kGoodsFieldNumber;
const int DailyFirstRechargePromotionDataProto::kRechargeYuanbaoFieldNumber;
const int DailyFirstRechargePromotionDataProto::kGoodsShowFieldNumber;
#endif  // !_MSC_VER

DailyFirstRechargePromotionDataProto::DailyFirstRechargePromotionDataProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DailyFirstRechargePromotionDataProto::InitAsDefaultInstance() {
}

DailyFirstRechargePromotionDataProto::DailyFirstRechargePromotionDataProto(const DailyFirstRechargePromotionDataProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DailyFirstRechargePromotionDataProto::SharedCtor() {
  _cached_size_ = 0;
  recharge_yuanbao_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DailyFirstRechargePromotionDataProto::~DailyFirstRechargePromotionDataProto() {
  SharedDtor();
}

void DailyFirstRechargePromotionDataProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DailyFirstRechargePromotionDataProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DailyFirstRechargePromotionDataProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DailyFirstRechargePromotionDataProto_descriptor_;
}

const DailyFirstRechargePromotionDataProto& DailyFirstRechargePromotionDataProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

DailyFirstRechargePromotionDataProto* DailyFirstRechargePromotionDataProto::default_instance_ = NULL;

DailyFirstRechargePromotionDataProto* DailyFirstRechargePromotionDataProto::New() const {
  return new DailyFirstRechargePromotionDataProto;
}

void DailyFirstRechargePromotionDataProto::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    recharge_yuanbao_ = 0;
  }
  goods_.Clear();
  goods_show_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DailyFirstRechargePromotionDataProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .app.message.GoodsWrapperProto goods = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_goods:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_goods()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_goods;
        if (input->ExpectTag(16)) goto parse_recharge_yuanbao;
        break;
      }

      // optional int32 recharge_yuanbao = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_recharge_yuanbao:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &recharge_yuanbao_)));
          set_has_recharge_yuanbao();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_goods_show;
        break;
      }

      // repeated .app.message.GoodsWrapperProto goods_show = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_goods_show:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_goods_show()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_goods_show;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DailyFirstRechargePromotionDataProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .app.message.GoodsWrapperProto goods = 1;
  for (int i = 0; i < this->goods_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->goods(i), output);
  }

  // optional int32 recharge_yuanbao = 2;
  if (has_recharge_yuanbao()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->recharge_yuanbao(), output);
  }

  // repeated .app.message.GoodsWrapperProto goods_show = 3;
  for (int i = 0; i < this->goods_show_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->goods_show(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DailyFirstRechargePromotionDataProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .app.message.GoodsWrapperProto goods = 1;
  for (int i = 0; i < this->goods_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->goods(i), target);
  }

  // optional int32 recharge_yuanbao = 2;
  if (has_recharge_yuanbao()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->recharge_yuanbao(), target);
  }

  // repeated .app.message.GoodsWrapperProto goods_show = 3;
  for (int i = 0; i < this->goods_show_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->goods_show(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DailyFirstRechargePromotionDataProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 recharge_yuanbao = 2;
    if (has_recharge_yuanbao()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->recharge_yuanbao());
    }

  }
  // repeated .app.message.GoodsWrapperProto goods = 1;
  total_size += 1 * this->goods_size();
  for (int i = 0; i < this->goods_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->goods(i));
  }

  // repeated .app.message.GoodsWrapperProto goods_show = 3;
  total_size += 1 * this->goods_show_size();
  for (int i = 0; i < this->goods_show_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->goods_show(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DailyFirstRechargePromotionDataProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DailyFirstRechargePromotionDataProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DailyFirstRechargePromotionDataProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DailyFirstRechargePromotionDataProto::MergeFrom(const DailyFirstRechargePromotionDataProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  goods_.MergeFrom(from.goods_);
  goods_show_.MergeFrom(from.goods_show_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_recharge_yuanbao()) {
      set_recharge_yuanbao(from.recharge_yuanbao());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DailyFirstRechargePromotionDataProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DailyFirstRechargePromotionDataProto::CopyFrom(const DailyFirstRechargePromotionDataProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyFirstRechargePromotionDataProto::IsInitialized() const {

  return true;
}

void DailyFirstRechargePromotionDataProto::Swap(DailyFirstRechargePromotionDataProto* other) {
  if (other != this) {
    goods_.Swap(&other->goods_);
    std::swap(recharge_yuanbao_, other->recharge_yuanbao_);
    goods_show_.Swap(&other->goods_show_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DailyFirstRechargePromotionDataProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DailyFirstRechargePromotionDataProto_descriptor_;
  metadata.reflection = DailyFirstRechargePromotionDataProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FireworkPromotionDatasProto::kStartTimeFieldNumber;
const int FireworkPromotionDatasProto::kEndTimeFieldNumber;
const int FireworkPromotionDatasProto::kDataFieldNumber;
#endif  // !_MSC_VER

FireworkPromotionDatasProto::FireworkPromotionDatasProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FireworkPromotionDatasProto::InitAsDefaultInstance() {
}

FireworkPromotionDatasProto::FireworkPromotionDatasProto(const FireworkPromotionDatasProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FireworkPromotionDatasProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FireworkPromotionDatasProto::~FireworkPromotionDatasProto() {
  SharedDtor();
}

void FireworkPromotionDatasProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FireworkPromotionDatasProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FireworkPromotionDatasProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FireworkPromotionDatasProto_descriptor_;
}

const FireworkPromotionDatasProto& FireworkPromotionDatasProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

FireworkPromotionDatasProto* FireworkPromotionDatasProto::default_instance_ = NULL;

FireworkPromotionDatasProto* FireworkPromotionDatasProto::New() const {
  return new FireworkPromotionDatasProto;
}

void FireworkPromotionDatasProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FireworkPromotionDatasProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_data;
        break;
      }

      // repeated .app.message.FireworkPromotionDataProto data = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FireworkPromotionDatasProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // repeated .app.message.FireworkPromotionDataProto data = 3;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FireworkPromotionDatasProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // repeated .app.message.FireworkPromotionDataProto data = 3;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FireworkPromotionDatasProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

  }
  // repeated .app.message.FireworkPromotionDataProto data = 3;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FireworkPromotionDatasProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FireworkPromotionDatasProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FireworkPromotionDatasProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FireworkPromotionDatasProto::MergeFrom(const FireworkPromotionDatasProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FireworkPromotionDatasProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FireworkPromotionDatasProto::CopyFrom(const FireworkPromotionDatasProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FireworkPromotionDatasProto::IsInitialized() const {

  return true;
}

void FireworkPromotionDatasProto::Swap(FireworkPromotionDatasProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FireworkPromotionDatasProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FireworkPromotionDatasProto_descriptor_;
  metadata.reflection = FireworkPromotionDatasProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FireworkPromotionDataProto::kGoodsFieldNumber;
const int FireworkPromotionDataProto::kColorTypeFieldNumber;
const int FireworkPromotionDataProto::kGetPrizeValueFieldNumber;
#endif  // !_MSC_VER

FireworkPromotionDataProto::FireworkPromotionDataProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FireworkPromotionDataProto::InitAsDefaultInstance() {
}

FireworkPromotionDataProto::FireworkPromotionDataProto(const FireworkPromotionDataProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FireworkPromotionDataProto::SharedCtor() {
  _cached_size_ = 0;
  color_type_ = 0;
  get_prize_value_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FireworkPromotionDataProto::~FireworkPromotionDataProto() {
  SharedDtor();
}

void FireworkPromotionDataProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FireworkPromotionDataProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FireworkPromotionDataProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FireworkPromotionDataProto_descriptor_;
}

const FireworkPromotionDataProto& FireworkPromotionDataProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

FireworkPromotionDataProto* FireworkPromotionDataProto::default_instance_ = NULL;

FireworkPromotionDataProto* FireworkPromotionDataProto::New() const {
  return new FireworkPromotionDataProto;
}

void FireworkPromotionDataProto::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    color_type_ = 0;
    get_prize_value_ = 0;
  }
  goods_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FireworkPromotionDataProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .app.message.GoodsWrapperProto goods = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_goods:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_goods()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_goods;
        if (input->ExpectTag(16)) goto parse_color_type;
        break;
      }

      // optional int32 color_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_color_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &color_type_)));
          set_has_color_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_get_prize_value;
        break;
      }

      // optional int32 get_prize_value = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_get_prize_value:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &get_prize_value_)));
          set_has_get_prize_value();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FireworkPromotionDataProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .app.message.GoodsWrapperProto goods = 1;
  for (int i = 0; i < this->goods_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->goods(i), output);
  }

  // optional int32 color_type = 2;
  if (has_color_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->color_type(), output);
  }

  // optional int32 get_prize_value = 3;
  if (has_get_prize_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->get_prize_value(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FireworkPromotionDataProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .app.message.GoodsWrapperProto goods = 1;
  for (int i = 0; i < this->goods_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->goods(i), target);
  }

  // optional int32 color_type = 2;
  if (has_color_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->color_type(), target);
  }

  // optional int32 get_prize_value = 3;
  if (has_get_prize_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->get_prize_value(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FireworkPromotionDataProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 color_type = 2;
    if (has_color_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->color_type());
    }

    // optional int32 get_prize_value = 3;
    if (has_get_prize_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->get_prize_value());
    }

  }
  // repeated .app.message.GoodsWrapperProto goods = 1;
  total_size += 1 * this->goods_size();
  for (int i = 0; i < this->goods_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->goods(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FireworkPromotionDataProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FireworkPromotionDataProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FireworkPromotionDataProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FireworkPromotionDataProto::MergeFrom(const FireworkPromotionDataProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  goods_.MergeFrom(from.goods_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_color_type()) {
      set_color_type(from.color_type());
    }
    if (from.has_get_prize_value()) {
      set_get_prize_value(from.get_prize_value());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FireworkPromotionDataProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FireworkPromotionDataProto::CopyFrom(const FireworkPromotionDataProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FireworkPromotionDataProto::IsInitialized() const {

  return true;
}

void FireworkPromotionDataProto::Swap(FireworkPromotionDataProto* other) {
  if (other != this) {
    goods_.Swap(&other->goods_);
    std::swap(color_type_, other->color_type_);
    std::swap(get_prize_value_, other->get_prize_value_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FireworkPromotionDataProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FireworkPromotionDataProto_descriptor_;
  metadata.reflection = FireworkPromotionDataProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SecretShopDatasProto::kStartTimeFieldNumber;
const int SecretShopDatasProto::kEndTimeFieldNumber;
const int SecretShopDatasProto::kRefreshCostFieldNumber;
const int SecretShopDatasProto::kRefreshTimeFieldNumber;
const int SecretShopDatasProto::kDataFieldNumber;
#endif  // !_MSC_VER

SecretShopDatasProto::SecretShopDatasProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SecretShopDatasProto::InitAsDefaultInstance() {
}

SecretShopDatasProto::SecretShopDatasProto(const SecretShopDatasProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SecretShopDatasProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SecretShopDatasProto::~SecretShopDatasProto() {
  SharedDtor();
}

void SecretShopDatasProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SecretShopDatasProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SecretShopDatasProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SecretShopDatasProto_descriptor_;
}

const SecretShopDatasProto& SecretShopDatasProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

SecretShopDatasProto* SecretShopDatasProto::default_instance_ = NULL;

SecretShopDatasProto* SecretShopDatasProto::New() const {
  return new SecretShopDatasProto;
}

void SecretShopDatasProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
  }
  refresh_cost_.Clear();
  refresh_time_.Clear();
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SecretShopDatasProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_refresh_cost;
        break;
      }

      // repeated int32 refresh_cost = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_refresh_cost:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_refresh_cost())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_refresh_cost())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_refresh_cost;
        if (input->ExpectTag(32)) goto parse_refresh_time;
        break;
      }

      // repeated int64 refresh_time = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_refresh_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 32, input, this->mutable_refresh_time())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_refresh_time())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_refresh_time;
        if (input->ExpectTag(42)) goto parse_data;
        break;
      }

      // repeated .app.message.SecretShopDataProto data = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SecretShopDatasProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // repeated int32 refresh_cost = 3;
  for (int i = 0; i < this->refresh_cost_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->refresh_cost(i), output);
  }

  // repeated int64 refresh_time = 4;
  for (int i = 0; i < this->refresh_time_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      4, this->refresh_time(i), output);
  }

  // repeated .app.message.SecretShopDataProto data = 5;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SecretShopDatasProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // repeated int32 refresh_cost = 3;
  for (int i = 0; i < this->refresh_cost_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->refresh_cost(i), target);
  }

  // repeated int64 refresh_time = 4;
  for (int i = 0; i < this->refresh_time_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(4, this->refresh_time(i), target);
  }

  // repeated .app.message.SecretShopDataProto data = 5;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SecretShopDatasProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

  }
  // repeated int32 refresh_cost = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->refresh_cost_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->refresh_cost(i));
    }
    total_size += 1 * this->refresh_cost_size() + data_size;
  }

  // repeated int64 refresh_time = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->refresh_time_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->refresh_time(i));
    }
    total_size += 1 * this->refresh_time_size() + data_size;
  }

  // repeated .app.message.SecretShopDataProto data = 5;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SecretShopDatasProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SecretShopDatasProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SecretShopDatasProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SecretShopDatasProto::MergeFrom(const SecretShopDatasProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  refresh_cost_.MergeFrom(from.refresh_cost_);
  refresh_time_.MergeFrom(from.refresh_time_);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SecretShopDatasProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SecretShopDatasProto::CopyFrom(const SecretShopDatasProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SecretShopDatasProto::IsInitialized() const {

  return true;
}

void SecretShopDatasProto::Swap(SecretShopDatasProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    refresh_cost_.Swap(&other->refresh_cost_);
    refresh_time_.Swap(&other->refresh_time_);
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SecretShopDatasProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SecretShopDatasProto_descriptor_;
  metadata.reflection = SecretShopDatasProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SecretShopDataProto::kGoodsFieldNumber;
const int SecretShopDataProto::kRandomTypeFieldNumber;
const int SecretShopDataProto::kPrizeTypeFieldNumber;
const int SecretShopDataProto::kPrizeFieldNumber;
const int SecretShopDataProto::kPrizeShowFieldNumber;
#endif  // !_MSC_VER

SecretShopDataProto::SecretShopDataProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SecretShopDataProto::InitAsDefaultInstance() {
  goods_ = const_cast< ::app::message::GoodsWrapperProto*>(&::app::message::GoodsWrapperProto::default_instance());
}

SecretShopDataProto::SecretShopDataProto(const SecretShopDataProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SecretShopDataProto::SharedCtor() {
  _cached_size_ = 0;
  goods_ = NULL;
  random_type_ = 0;
  prize_type_ = 0;
  prize_ = 0;
  prize_show_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SecretShopDataProto::~SecretShopDataProto() {
  SharedDtor();
}

void SecretShopDataProto::SharedDtor() {
  if (this != default_instance_) {
    delete goods_;
  }
}

void SecretShopDataProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SecretShopDataProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SecretShopDataProto_descriptor_;
}

const SecretShopDataProto& SecretShopDataProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

SecretShopDataProto* SecretShopDataProto::default_instance_ = NULL;

SecretShopDataProto* SecretShopDataProto::New() const {
  return new SecretShopDataProto;
}

void SecretShopDataProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_goods()) {
      if (goods_ != NULL) goods_->::app::message::GoodsWrapperProto::Clear();
    }
    random_type_ = 0;
    prize_type_ = 0;
    prize_ = 0;
    prize_show_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SecretShopDataProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .app.message.GoodsWrapperProto goods = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_goods()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_random_type;
        break;
      }

      // optional int32 random_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_random_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &random_type_)));
          set_has_random_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_prize_type;
        break;
      }

      // optional int32 prize_type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_prize_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &prize_type_)));
          set_has_prize_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_prize;
        break;
      }

      // optional int32 prize = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_prize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &prize_)));
          set_has_prize();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_prize_show;
        break;
      }

      // optional int32 prize_show = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_prize_show:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &prize_show_)));
          set_has_prize_show();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SecretShopDataProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .app.message.GoodsWrapperProto goods = 1;
  if (has_goods()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->goods(), output);
  }

  // optional int32 random_type = 2;
  if (has_random_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->random_type(), output);
  }

  // optional int32 prize_type = 3;
  if (has_prize_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->prize_type(), output);
  }

  // optional int32 prize = 4;
  if (has_prize()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->prize(), output);
  }

  // optional int32 prize_show = 5;
  if (has_prize_show()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->prize_show(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SecretShopDataProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .app.message.GoodsWrapperProto goods = 1;
  if (has_goods()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->goods(), target);
  }

  // optional int32 random_type = 2;
  if (has_random_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->random_type(), target);
  }

  // optional int32 prize_type = 3;
  if (has_prize_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->prize_type(), target);
  }

  // optional int32 prize = 4;
  if (has_prize()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->prize(), target);
  }

  // optional int32 prize_show = 5;
  if (has_prize_show()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->prize_show(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SecretShopDataProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .app.message.GoodsWrapperProto goods = 1;
    if (has_goods()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->goods());
    }

    // optional int32 random_type = 2;
    if (has_random_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->random_type());
    }

    // optional int32 prize_type = 3;
    if (has_prize_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->prize_type());
    }

    // optional int32 prize = 4;
    if (has_prize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->prize());
    }

    // optional int32 prize_show = 5;
    if (has_prize_show()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->prize_show());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SecretShopDataProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SecretShopDataProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SecretShopDataProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SecretShopDataProto::MergeFrom(const SecretShopDataProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_goods()) {
      mutable_goods()->::app::message::GoodsWrapperProto::MergeFrom(from.goods());
    }
    if (from.has_random_type()) {
      set_random_type(from.random_type());
    }
    if (from.has_prize_type()) {
      set_prize_type(from.prize_type());
    }
    if (from.has_prize()) {
      set_prize(from.prize());
    }
    if (from.has_prize_show()) {
      set_prize_show(from.prize_show());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SecretShopDataProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SecretShopDataProto::CopyFrom(const SecretShopDataProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SecretShopDataProto::IsInitialized() const {

  return true;
}

void SecretShopDataProto::Swap(SecretShopDataProto* other) {
  if (other != this) {
    std::swap(goods_, other->goods_);
    std::swap(random_type_, other->random_type_);
    std::swap(prize_type_, other->prize_type_);
    std::swap(prize_, other->prize_);
    std::swap(prize_show_, other->prize_show_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SecretShopDataProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SecretShopDataProto_descriptor_;
  metadata.reflection = SecretShopDataProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MonopolyConfigProto::kCellsFieldNumber;
const int MonopolyConfigProto::kRandomDiceCostFieldNumber;
const int MonopolyConfigProto::kControllableDiceCostFieldNumber;
const int MonopolyConfigProto::kStartTimeFieldNumber;
const int MonopolyConfigProto::kEndTimeFieldNumber;
const int MonopolyConfigProto::kDailyRollCountFieldNumber;
const int MonopolyConfigProto::kFirstAddOnceCostFieldNumber;
const int MonopolyConfigProto::kRollCdFieldNumber;
#endif  // !_MSC_VER

MonopolyConfigProto::MonopolyConfigProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MonopolyConfigProto::InitAsDefaultInstance() {
  random_dice_cost_ = const_cast< ::app::message::UpgradeProto*>(&::app::message::UpgradeProto::default_instance());
  controllable_dice_cost_ = const_cast< ::app::message::UpgradeProto*>(&::app::message::UpgradeProto::default_instance());
}

MonopolyConfigProto::MonopolyConfigProto(const MonopolyConfigProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MonopolyConfigProto::SharedCtor() {
  _cached_size_ = 0;
  random_dice_cost_ = NULL;
  controllable_dice_cost_ = NULL;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  daily_roll_count_ = 0;
  first_add_once_cost_ = 0;
  roll_cd_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MonopolyConfigProto::~MonopolyConfigProto() {
  SharedDtor();
}

void MonopolyConfigProto::SharedDtor() {
  if (this != default_instance_) {
    delete random_dice_cost_;
    delete controllable_dice_cost_;
  }
}

void MonopolyConfigProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MonopolyConfigProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MonopolyConfigProto_descriptor_;
}

const MonopolyConfigProto& MonopolyConfigProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

MonopolyConfigProto* MonopolyConfigProto::default_instance_ = NULL;

MonopolyConfigProto* MonopolyConfigProto::New() const {
  return new MonopolyConfigProto;
}

void MonopolyConfigProto::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_random_dice_cost()) {
      if (random_dice_cost_ != NULL) random_dice_cost_->::app::message::UpgradeProto::Clear();
    }
    if (has_controllable_dice_cost()) {
      if (controllable_dice_cost_ != NULL) controllable_dice_cost_->::app::message::UpgradeProto::Clear();
    }
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    daily_roll_count_ = 0;
    first_add_once_cost_ = 0;
    roll_cd_ = 0;
  }
  cells_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MonopolyConfigProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .app.message.MonopolyCellProto cells = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cells:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cells()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_cells;
        if (input->ExpectTag(18)) goto parse_random_dice_cost;
        break;
      }

      // optional .app.message.UpgradeProto random_dice_cost = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_random_dice_cost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_random_dice_cost()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_controllable_dice_cost;
        break;
      }

      // optional .app.message.UpgradeProto controllable_dice_cost = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_controllable_dice_cost:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_controllable_dice_cost()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_start_time;
        break;
      }

      // optional int64 start_time = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_start_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_daily_roll_count;
        break;
      }

      // optional int32 daily_roll_count = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_daily_roll_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &daily_roll_count_)));
          set_has_daily_roll_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_first_add_once_cost;
        break;
      }

      // optional int32 first_add_once_cost = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_first_add_once_cost:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &first_add_once_cost_)));
          set_has_first_add_once_cost();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_roll_cd;
        break;
      }

      // optional int32 roll_cd = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_roll_cd:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roll_cd_)));
          set_has_roll_cd();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MonopolyConfigProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .app.message.MonopolyCellProto cells = 1;
  for (int i = 0; i < this->cells_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->cells(i), output);
  }

  // optional .app.message.UpgradeProto random_dice_cost = 2;
  if (has_random_dice_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->random_dice_cost(), output);
  }

  // optional .app.message.UpgradeProto controllable_dice_cost = 3;
  if (has_controllable_dice_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->controllable_dice_cost(), output);
  }

  // optional int64 start_time = 4;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->start_time(), output);
  }

  // optional int64 end_time = 5;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->end_time(), output);
  }

  // optional int32 daily_roll_count = 6;
  if (has_daily_roll_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->daily_roll_count(), output);
  }

  // optional int32 first_add_once_cost = 7;
  if (has_first_add_once_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->first_add_once_cost(), output);
  }

  // optional int32 roll_cd = 8;
  if (has_roll_cd()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->roll_cd(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MonopolyConfigProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .app.message.MonopolyCellProto cells = 1;
  for (int i = 0; i < this->cells_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->cells(i), target);
  }

  // optional .app.message.UpgradeProto random_dice_cost = 2;
  if (has_random_dice_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->random_dice_cost(), target);
  }

  // optional .app.message.UpgradeProto controllable_dice_cost = 3;
  if (has_controllable_dice_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->controllable_dice_cost(), target);
  }

  // optional int64 start_time = 4;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->start_time(), target);
  }

  // optional int64 end_time = 5;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->end_time(), target);
  }

  // optional int32 daily_roll_count = 6;
  if (has_daily_roll_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->daily_roll_count(), target);
  }

  // optional int32 first_add_once_cost = 7;
  if (has_first_add_once_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->first_add_once_cost(), target);
  }

  // optional int32 roll_cd = 8;
  if (has_roll_cd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->roll_cd(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MonopolyConfigProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .app.message.UpgradeProto random_dice_cost = 2;
    if (has_random_dice_cost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->random_dice_cost());
    }

    // optional .app.message.UpgradeProto controllable_dice_cost = 3;
    if (has_controllable_dice_cost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->controllable_dice_cost());
    }

    // optional int64 start_time = 4;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 5;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional int32 daily_roll_count = 6;
    if (has_daily_roll_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->daily_roll_count());
    }

    // optional int32 first_add_once_cost = 7;
    if (has_first_add_once_cost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->first_add_once_cost());
    }

    // optional int32 roll_cd = 8;
    if (has_roll_cd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roll_cd());
    }

  }
  // repeated .app.message.MonopolyCellProto cells = 1;
  total_size += 1 * this->cells_size();
  for (int i = 0; i < this->cells_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cells(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MonopolyConfigProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MonopolyConfigProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MonopolyConfigProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MonopolyConfigProto::MergeFrom(const MonopolyConfigProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  cells_.MergeFrom(from.cells_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_random_dice_cost()) {
      mutable_random_dice_cost()->::app::message::UpgradeProto::MergeFrom(from.random_dice_cost());
    }
    if (from.has_controllable_dice_cost()) {
      mutable_controllable_dice_cost()->::app::message::UpgradeProto::MergeFrom(from.controllable_dice_cost());
    }
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_daily_roll_count()) {
      set_daily_roll_count(from.daily_roll_count());
    }
    if (from.has_first_add_once_cost()) {
      set_first_add_once_cost(from.first_add_once_cost());
    }
    if (from.has_roll_cd()) {
      set_roll_cd(from.roll_cd());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MonopolyConfigProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MonopolyConfigProto::CopyFrom(const MonopolyConfigProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MonopolyConfigProto::IsInitialized() const {

  return true;
}

void MonopolyConfigProto::Swap(MonopolyConfigProto* other) {
  if (other != this) {
    cells_.Swap(&other->cells_);
    std::swap(random_dice_cost_, other->random_dice_cost_);
    std::swap(controllable_dice_cost_, other->controllable_dice_cost_);
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    std::swap(daily_roll_count_, other->daily_roll_count_);
    std::swap(first_add_once_cost_, other->first_add_once_cost_);
    std::swap(roll_cd_, other->roll_cd_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MonopolyConfigProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MonopolyConfigProto_descriptor_;
  metadata.reflection = MonopolyConfigProto_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* MonopolyCellProto_PrizeType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MonopolyCellProto_PrizeType_descriptor_;
}
bool MonopolyCellProto_PrizeType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const MonopolyCellProto_PrizeType MonopolyCellProto::NOTHING;
const MonopolyCellProto_PrizeType MonopolyCellProto::GOODS;
const MonopolyCellProto_PrizeType MonopolyCellProto::STEP;
const MonopolyCellProto_PrizeType MonopolyCellProto::PrizeType_MIN;
const MonopolyCellProto_PrizeType MonopolyCellProto::PrizeType_MAX;
const int MonopolyCellProto::PrizeType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int MonopolyCellProto::kIdFieldNumber;
const int MonopolyCellProto::kTypeFieldNumber;
const int MonopolyCellProto::kPrizeFieldNumber;
const int MonopolyCellProto::kStepsFieldNumber;
const int MonopolyCellProto::kIconFieldNumber;
#endif  // !_MSC_VER

MonopolyCellProto::MonopolyCellProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MonopolyCellProto::InitAsDefaultInstance() {
  prize_ = const_cast< ::app::message::GoodsWrapperProto*>(&::app::message::GoodsWrapperProto::default_instance());
}

MonopolyCellProto::MonopolyCellProto(const MonopolyCellProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MonopolyCellProto::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  type_ = 1;
  prize_ = NULL;
  steps_ = 0;
  icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MonopolyCellProto::~MonopolyCellProto() {
  SharedDtor();
}

void MonopolyCellProto::SharedDtor() {
  if (icon_ != &::google::protobuf::internal::kEmptyString) {
    delete icon_;
  }
  if (this != default_instance_) {
    delete prize_;
  }
}

void MonopolyCellProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MonopolyCellProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MonopolyCellProto_descriptor_;
}

const MonopolyCellProto& MonopolyCellProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

MonopolyCellProto* MonopolyCellProto::default_instance_ = NULL;

MonopolyCellProto* MonopolyCellProto::New() const {
  return new MonopolyCellProto;
}

void MonopolyCellProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    type_ = 1;
    if (has_prize()) {
      if (prize_ != NULL) prize_->::app::message::GoodsWrapperProto::Clear();
    }
    steps_ = 0;
    if (has_icon()) {
      if (icon_ != &::google::protobuf::internal::kEmptyString) {
        icon_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MonopolyCellProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // optional .app.message.MonopolyCellProto.PrizeType type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::app::message::MonopolyCellProto_PrizeType_IsValid(value)) {
            set_type(static_cast< ::app::message::MonopolyCellProto_PrizeType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_prize;
        break;
      }

      // optional .app.message.GoodsWrapperProto prize = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_steps;
        break;
      }

      // optional int32 steps = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_steps:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &steps_)));
          set_has_steps();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_icon;
        break;
      }

      // optional string icon = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_icon:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_icon()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->icon().data(), this->icon().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MonopolyCellProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional .app.message.MonopolyCellProto.PrizeType type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // optional .app.message.GoodsWrapperProto prize = 3;
  if (has_prize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->prize(), output);
  }

  // optional int32 steps = 4;
  if (has_steps()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->steps(), output);
  }

  // optional string icon = 5;
  if (has_icon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->icon().data(), this->icon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->icon(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MonopolyCellProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional .app.message.MonopolyCellProto.PrizeType type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // optional .app.message.GoodsWrapperProto prize = 3;
  if (has_prize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->prize(), target);
  }

  // optional int32 steps = 4;
  if (has_steps()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->steps(), target);
  }

  // optional string icon = 5;
  if (has_icon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->icon().data(), this->icon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->icon(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MonopolyCellProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional .app.message.MonopolyCellProto.PrizeType type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional .app.message.GoodsWrapperProto prize = 3;
    if (has_prize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prize());
    }

    // optional int32 steps = 4;
    if (has_steps()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->steps());
    }

    // optional string icon = 5;
    if (has_icon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->icon());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MonopolyCellProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MonopolyCellProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MonopolyCellProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MonopolyCellProto::MergeFrom(const MonopolyCellProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_prize()) {
      mutable_prize()->::app::message::GoodsWrapperProto::MergeFrom(from.prize());
    }
    if (from.has_steps()) {
      set_steps(from.steps());
    }
    if (from.has_icon()) {
      set_icon(from.icon());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MonopolyCellProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MonopolyCellProto::CopyFrom(const MonopolyCellProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MonopolyCellProto::IsInitialized() const {

  return true;
}

void MonopolyCellProto::Swap(MonopolyCellProto* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(type_, other->type_);
    std::swap(prize_, other->prize_);
    std::swap(steps_, other->steps_);
    std::swap(icon_, other->icon_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MonopolyCellProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MonopolyCellProto_descriptor_;
  metadata.reflection = MonopolyCellProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CollectShenzhuangRuleProto::kTypeFieldNumber;
const int CollectShenzhuangRuleProto::kPrizeFieldNumber;
const int CollectShenzhuangRuleProto::kRequireCountFieldNumber;
#endif  // !_MSC_VER

CollectShenzhuangRuleProto::CollectShenzhuangRuleProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CollectShenzhuangRuleProto::InitAsDefaultInstance() {
  prize_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
}

CollectShenzhuangRuleProto::CollectShenzhuangRuleProto(const CollectShenzhuangRuleProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CollectShenzhuangRuleProto::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  prize_ = NULL;
  require_count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CollectShenzhuangRuleProto::~CollectShenzhuangRuleProto() {
  SharedDtor();
}

void CollectShenzhuangRuleProto::SharedDtor() {
  if (this != default_instance_) {
    delete prize_;
  }
}

void CollectShenzhuangRuleProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CollectShenzhuangRuleProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CollectShenzhuangRuleProto_descriptor_;
}

const CollectShenzhuangRuleProto& CollectShenzhuangRuleProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

CollectShenzhuangRuleProto* CollectShenzhuangRuleProto::default_instance_ = NULL;

CollectShenzhuangRuleProto* CollectShenzhuangRuleProto::New() const {
  return new CollectShenzhuangRuleProto;
}

void CollectShenzhuangRuleProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    if (has_prize()) {
      if (prize_ != NULL) prize_->::app::message::PrizeProto::Clear();
    }
    require_count_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CollectShenzhuangRuleProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_prize;
        break;
      }

      // optional .app.message.PrizeProto prize = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_require_count;
        break;
      }

      // optional int32 require_count = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_require_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &require_count_)));
          set_has_require_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CollectShenzhuangRuleProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional .app.message.PrizeProto prize = 2;
  if (has_prize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->prize(), output);
  }

  // optional int32 require_count = 3;
  if (has_require_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->require_count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CollectShenzhuangRuleProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional .app.message.PrizeProto prize = 2;
  if (has_prize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->prize(), target);
  }

  // optional int32 require_count = 3;
  if (has_require_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->require_count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CollectShenzhuangRuleProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional .app.message.PrizeProto prize = 2;
    if (has_prize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prize());
    }

    // optional int32 require_count = 3;
    if (has_require_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->require_count());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CollectShenzhuangRuleProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CollectShenzhuangRuleProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CollectShenzhuangRuleProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CollectShenzhuangRuleProto::MergeFrom(const CollectShenzhuangRuleProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_prize()) {
      mutable_prize()->::app::message::PrizeProto::MergeFrom(from.prize());
    }
    if (from.has_require_count()) {
      set_require_count(from.require_count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CollectShenzhuangRuleProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CollectShenzhuangRuleProto::CopyFrom(const CollectShenzhuangRuleProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CollectShenzhuangRuleProto::IsInitialized() const {

  return true;
}

void CollectShenzhuangRuleProto::Swap(CollectShenzhuangRuleProto* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(prize_, other->prize_);
    std::swap(require_count_, other->require_count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CollectShenzhuangRuleProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CollectShenzhuangRuleProto_descriptor_;
  metadata.reflection = CollectShenzhuangRuleProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CollectShenzhuangConfigProto::kStartTimeFieldNumber;
const int CollectShenzhuangConfigProto::kEndTimeFieldNumber;
const int CollectShenzhuangConfigProto::kCollectGoodsFieldNumber;
const int CollectShenzhuangConfigProto::kRuleListFieldNumber;
#endif  // !_MSC_VER

CollectShenzhuangConfigProto::CollectShenzhuangConfigProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CollectShenzhuangConfigProto::InitAsDefaultInstance() {
}

CollectShenzhuangConfigProto::CollectShenzhuangConfigProto(const CollectShenzhuangConfigProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CollectShenzhuangConfigProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CollectShenzhuangConfigProto::~CollectShenzhuangConfigProto() {
  SharedDtor();
}

void CollectShenzhuangConfigProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CollectShenzhuangConfigProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CollectShenzhuangConfigProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CollectShenzhuangConfigProto_descriptor_;
}

const CollectShenzhuangConfigProto& CollectShenzhuangConfigProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

CollectShenzhuangConfigProto* CollectShenzhuangConfigProto::default_instance_ = NULL;

CollectShenzhuangConfigProto* CollectShenzhuangConfigProto::New() const {
  return new CollectShenzhuangConfigProto;
}

void CollectShenzhuangConfigProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
  }
  collect_goods_.Clear();
  rule_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CollectShenzhuangConfigProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_collect_goods;
        break;
      }

      // repeated .app.message.GoodsWrapperProto collect_goods = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_collect_goods:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_collect_goods()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_collect_goods;
        if (input->ExpectTag(34)) goto parse_rule_list;
        break;
      }

      // repeated .app.message.CollectShenzhuangRuleProto rule_list = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rule_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rule_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_rule_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CollectShenzhuangConfigProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // repeated .app.message.GoodsWrapperProto collect_goods = 3;
  for (int i = 0; i < this->collect_goods_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->collect_goods(i), output);
  }

  // repeated .app.message.CollectShenzhuangRuleProto rule_list = 4;
  for (int i = 0; i < this->rule_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->rule_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CollectShenzhuangConfigProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // repeated .app.message.GoodsWrapperProto collect_goods = 3;
  for (int i = 0; i < this->collect_goods_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->collect_goods(i), target);
  }

  // repeated .app.message.CollectShenzhuangRuleProto rule_list = 4;
  for (int i = 0; i < this->rule_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->rule_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CollectShenzhuangConfigProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

  }
  // repeated .app.message.GoodsWrapperProto collect_goods = 3;
  total_size += 1 * this->collect_goods_size();
  for (int i = 0; i < this->collect_goods_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->collect_goods(i));
  }

  // repeated .app.message.CollectShenzhuangRuleProto rule_list = 4;
  total_size += 1 * this->rule_list_size();
  for (int i = 0; i < this->rule_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rule_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CollectShenzhuangConfigProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CollectShenzhuangConfigProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CollectShenzhuangConfigProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CollectShenzhuangConfigProto::MergeFrom(const CollectShenzhuangConfigProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  collect_goods_.MergeFrom(from.collect_goods_);
  rule_list_.MergeFrom(from.rule_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CollectShenzhuangConfigProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CollectShenzhuangConfigProto::CopyFrom(const CollectShenzhuangConfigProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CollectShenzhuangConfigProto::IsInitialized() const {

  return true;
}

void CollectShenzhuangConfigProto::Swap(CollectShenzhuangConfigProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    collect_goods_.Swap(&other->collect_goods_);
    rule_list_.Swap(&other->rule_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CollectShenzhuangConfigProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CollectShenzhuangConfigProto_descriptor_;
  metadata.reflection = CollectShenzhuangConfigProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FreeExchangeRuleProto::kTypeFieldNumber;
const int FreeExchangeRuleProto::kPrizeFieldNumber;
const int FreeExchangeRuleProto::kRequireCountFieldNumber;
#endif  // !_MSC_VER

FreeExchangeRuleProto::FreeExchangeRuleProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FreeExchangeRuleProto::InitAsDefaultInstance() {
  prize_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
}

FreeExchangeRuleProto::FreeExchangeRuleProto(const FreeExchangeRuleProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FreeExchangeRuleProto::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  prize_ = NULL;
  require_count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FreeExchangeRuleProto::~FreeExchangeRuleProto() {
  SharedDtor();
}

void FreeExchangeRuleProto::SharedDtor() {
  if (this != default_instance_) {
    delete prize_;
  }
}

void FreeExchangeRuleProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FreeExchangeRuleProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FreeExchangeRuleProto_descriptor_;
}

const FreeExchangeRuleProto& FreeExchangeRuleProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

FreeExchangeRuleProto* FreeExchangeRuleProto::default_instance_ = NULL;

FreeExchangeRuleProto* FreeExchangeRuleProto::New() const {
  return new FreeExchangeRuleProto;
}

void FreeExchangeRuleProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    if (has_prize()) {
      if (prize_ != NULL) prize_->::app::message::PrizeProto::Clear();
    }
    require_count_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FreeExchangeRuleProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_prize;
        break;
      }

      // optional .app.message.PrizeProto prize = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_require_count;
        break;
      }

      // optional int32 require_count = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_require_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &require_count_)));
          set_has_require_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FreeExchangeRuleProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional .app.message.PrizeProto prize = 2;
  if (has_prize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->prize(), output);
  }

  // optional int32 require_count = 3;
  if (has_require_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->require_count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FreeExchangeRuleProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional .app.message.PrizeProto prize = 2;
  if (has_prize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->prize(), target);
  }

  // optional int32 require_count = 3;
  if (has_require_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->require_count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FreeExchangeRuleProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional .app.message.PrizeProto prize = 2;
    if (has_prize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prize());
    }

    // optional int32 require_count = 3;
    if (has_require_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->require_count());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FreeExchangeRuleProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FreeExchangeRuleProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FreeExchangeRuleProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FreeExchangeRuleProto::MergeFrom(const FreeExchangeRuleProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_prize()) {
      mutable_prize()->::app::message::PrizeProto::MergeFrom(from.prize());
    }
    if (from.has_require_count()) {
      set_require_count(from.require_count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FreeExchangeRuleProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FreeExchangeRuleProto::CopyFrom(const FreeExchangeRuleProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FreeExchangeRuleProto::IsInitialized() const {

  return true;
}

void FreeExchangeRuleProto::Swap(FreeExchangeRuleProto* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(prize_, other->prize_);
    std::swap(require_count_, other->require_count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FreeExchangeRuleProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FreeExchangeRuleProto_descriptor_;
  metadata.reflection = FreeExchangeRuleProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FreeExchangeConfigProto::kStartTimeFieldNumber;
const int FreeExchangeConfigProto::kEndTimeFieldNumber;
const int FreeExchangeConfigProto::kCollectGoodsFieldNumber;
const int FreeExchangeConfigProto::kRuleListFieldNumber;
#endif  // !_MSC_VER

FreeExchangeConfigProto::FreeExchangeConfigProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FreeExchangeConfigProto::InitAsDefaultInstance() {
}

FreeExchangeConfigProto::FreeExchangeConfigProto(const FreeExchangeConfigProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FreeExchangeConfigProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FreeExchangeConfigProto::~FreeExchangeConfigProto() {
  SharedDtor();
}

void FreeExchangeConfigProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FreeExchangeConfigProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FreeExchangeConfigProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FreeExchangeConfigProto_descriptor_;
}

const FreeExchangeConfigProto& FreeExchangeConfigProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

FreeExchangeConfigProto* FreeExchangeConfigProto::default_instance_ = NULL;

FreeExchangeConfigProto* FreeExchangeConfigProto::New() const {
  return new FreeExchangeConfigProto;
}

void FreeExchangeConfigProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
  }
  collect_goods_.Clear();
  rule_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FreeExchangeConfigProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_collect_goods;
        break;
      }

      // repeated .app.message.GoodsWrapperProto collect_goods = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_collect_goods:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_collect_goods()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_collect_goods;
        if (input->ExpectTag(34)) goto parse_rule_list;
        break;
      }

      // repeated .app.message.FreeExchangeRuleProto rule_list = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rule_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rule_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_rule_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FreeExchangeConfigProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // repeated .app.message.GoodsWrapperProto collect_goods = 3;
  for (int i = 0; i < this->collect_goods_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->collect_goods(i), output);
  }

  // repeated .app.message.FreeExchangeRuleProto rule_list = 4;
  for (int i = 0; i < this->rule_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->rule_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FreeExchangeConfigProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // repeated .app.message.GoodsWrapperProto collect_goods = 3;
  for (int i = 0; i < this->collect_goods_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->collect_goods(i), target);
  }

  // repeated .app.message.FreeExchangeRuleProto rule_list = 4;
  for (int i = 0; i < this->rule_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->rule_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FreeExchangeConfigProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

  }
  // repeated .app.message.GoodsWrapperProto collect_goods = 3;
  total_size += 1 * this->collect_goods_size();
  for (int i = 0; i < this->collect_goods_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->collect_goods(i));
  }

  // repeated .app.message.FreeExchangeRuleProto rule_list = 4;
  total_size += 1 * this->rule_list_size();
  for (int i = 0; i < this->rule_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rule_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FreeExchangeConfigProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FreeExchangeConfigProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FreeExchangeConfigProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FreeExchangeConfigProto::MergeFrom(const FreeExchangeConfigProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  collect_goods_.MergeFrom(from.collect_goods_);
  rule_list_.MergeFrom(from.rule_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FreeExchangeConfigProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FreeExchangeConfigProto::CopyFrom(const FreeExchangeConfigProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FreeExchangeConfigProto::IsInitialized() const {

  return true;
}

void FreeExchangeConfigProto::Swap(FreeExchangeConfigProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    collect_goods_.Swap(&other->collect_goods_);
    rule_list_.Swap(&other->rule_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FreeExchangeConfigProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FreeExchangeConfigProto_descriptor_;
  metadata.reflection = FreeExchangeConfigProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LoveDailyPrizeProto::kStartTimeFieldNumber;
const int LoveDailyPrizeProto::kEndTimeFieldNumber;
const int LoveDailyPrizeProto::kPrizeFieldNumber;
const int LoveDailyPrizeProto::kDailyHeroMinLevelFieldNumber;
#endif  // !_MSC_VER

LoveDailyPrizeProto::LoveDailyPrizeProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void LoveDailyPrizeProto::InitAsDefaultInstance() {
  prize_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
}

LoveDailyPrizeProto::LoveDailyPrizeProto(const LoveDailyPrizeProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void LoveDailyPrizeProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  prize_ = NULL;
  daily_hero_min_level_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LoveDailyPrizeProto::~LoveDailyPrizeProto() {
  SharedDtor();
}

void LoveDailyPrizeProto::SharedDtor() {
  if (this != default_instance_) {
    delete prize_;
  }
}

void LoveDailyPrizeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoveDailyPrizeProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoveDailyPrizeProto_descriptor_;
}

const LoveDailyPrizeProto& LoveDailyPrizeProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

LoveDailyPrizeProto* LoveDailyPrizeProto::default_instance_ = NULL;

LoveDailyPrizeProto* LoveDailyPrizeProto::New() const {
  return new LoveDailyPrizeProto;
}

void LoveDailyPrizeProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    if (has_prize()) {
      if (prize_ != NULL) prize_->::app::message::PrizeProto::Clear();
    }
    daily_hero_min_level_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LoveDailyPrizeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_prize;
        break;
      }

      // optional .app.message.PrizeProto prize = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_daily_hero_min_level;
        break;
      }

      // optional int32 daily_hero_min_level = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_daily_hero_min_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &daily_hero_min_level_)));
          set_has_daily_hero_min_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void LoveDailyPrizeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // optional .app.message.PrizeProto prize = 3;
  if (has_prize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->prize(), output);
  }

  // optional int32 daily_hero_min_level = 4;
  if (has_daily_hero_min_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->daily_hero_min_level(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* LoveDailyPrizeProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // optional .app.message.PrizeProto prize = 3;
  if (has_prize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->prize(), target);
  }

  // optional int32 daily_hero_min_level = 4;
  if (has_daily_hero_min_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->daily_hero_min_level(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int LoveDailyPrizeProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional .app.message.PrizeProto prize = 3;
    if (has_prize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prize());
    }

    // optional int32 daily_hero_min_level = 4;
    if (has_daily_hero_min_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->daily_hero_min_level());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoveDailyPrizeProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LoveDailyPrizeProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LoveDailyPrizeProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LoveDailyPrizeProto::MergeFrom(const LoveDailyPrizeProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_prize()) {
      mutable_prize()->::app::message::PrizeProto::MergeFrom(from.prize());
    }
    if (from.has_daily_hero_min_level()) {
      set_daily_hero_min_level(from.daily_hero_min_level());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LoveDailyPrizeProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoveDailyPrizeProto::CopyFrom(const LoveDailyPrizeProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoveDailyPrizeProto::IsInitialized() const {

  return true;
}

void LoveDailyPrizeProto::Swap(LoveDailyPrizeProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    std::swap(prize_, other->prize_);
    std::swap(daily_hero_min_level_, other->daily_hero_min_level_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LoveDailyPrizeProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoveDailyPrizeProto_descriptor_;
  metadata.reflection = LoveDailyPrizeProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LoveOnlinePrizeProto::kStartTimeFieldNumber;
const int LoveOnlinePrizeProto::kEndTimeFieldNumber;
const int LoveOnlinePrizeProto::kMinutesFieldNumber;
const int LoveOnlinePrizeProto::kPrizeFieldNumber;
const int LoveOnlinePrizeProto::kDailyMaxOnlineMinutesFieldNumber;
const int LoveOnlinePrizeProto::kSignFieldNumber;
#endif  // !_MSC_VER

LoveOnlinePrizeProto::LoveOnlinePrizeProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void LoveOnlinePrizeProto::InitAsDefaultInstance() {
}

LoveOnlinePrizeProto::LoveOnlinePrizeProto(const LoveOnlinePrizeProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void LoveOnlinePrizeProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  daily_max_online_minutes_ = 0;
  sign_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LoveOnlinePrizeProto::~LoveOnlinePrizeProto() {
  SharedDtor();
}

void LoveOnlinePrizeProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LoveOnlinePrizeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoveOnlinePrizeProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoveOnlinePrizeProto_descriptor_;
}

const LoveOnlinePrizeProto& LoveOnlinePrizeProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

LoveOnlinePrizeProto* LoveOnlinePrizeProto::default_instance_ = NULL;

LoveOnlinePrizeProto* LoveOnlinePrizeProto::New() const {
  return new LoveOnlinePrizeProto;
}

void LoveOnlinePrizeProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    daily_max_online_minutes_ = 0;
    sign_ = 0;
  }
  minutes_.Clear();
  prize_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LoveOnlinePrizeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_minutes;
        break;
      }

      // repeated int32 minutes = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_minutes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_minutes())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_minutes())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_minutes;
        if (input->ExpectTag(34)) goto parse_prize;
        break;
      }

      // repeated .app.message.GoodsWrapperProto prize = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_prize;
        if (input->ExpectTag(40)) goto parse_daily_max_online_minutes;
        break;
      }

      // optional int32 daily_max_online_minutes = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_daily_max_online_minutes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &daily_max_online_minutes_)));
          set_has_daily_max_online_minutes();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_sign;
        break;
      }

      // optional int32 sign = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sign:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sign_)));
          set_has_sign();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void LoveOnlinePrizeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // repeated int32 minutes = 3;
  for (int i = 0; i < this->minutes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->minutes(i), output);
  }

  // repeated .app.message.GoodsWrapperProto prize = 4;
  for (int i = 0; i < this->prize_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->prize(i), output);
  }

  // optional int32 daily_max_online_minutes = 5;
  if (has_daily_max_online_minutes()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->daily_max_online_minutes(), output);
  }

  // optional int32 sign = 6;
  if (has_sign()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->sign(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* LoveOnlinePrizeProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // repeated int32 minutes = 3;
  for (int i = 0; i < this->minutes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->minutes(i), target);
  }

  // repeated .app.message.GoodsWrapperProto prize = 4;
  for (int i = 0; i < this->prize_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->prize(i), target);
  }

  // optional int32 daily_max_online_minutes = 5;
  if (has_daily_max_online_minutes()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->daily_max_online_minutes(), target);
  }

  // optional int32 sign = 6;
  if (has_sign()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->sign(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int LoveOnlinePrizeProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional int32 daily_max_online_minutes = 5;
    if (has_daily_max_online_minutes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->daily_max_online_minutes());
    }

    // optional int32 sign = 6;
    if (has_sign()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sign());
    }

  }
  // repeated int32 minutes = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->minutes_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->minutes(i));
    }
    total_size += 1 * this->minutes_size() + data_size;
  }

  // repeated .app.message.GoodsWrapperProto prize = 4;
  total_size += 1 * this->prize_size();
  for (int i = 0; i < this->prize_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->prize(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoveOnlinePrizeProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LoveOnlinePrizeProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LoveOnlinePrizeProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LoveOnlinePrizeProto::MergeFrom(const LoveOnlinePrizeProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  minutes_.MergeFrom(from.minutes_);
  prize_.MergeFrom(from.prize_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_daily_max_online_minutes()) {
      set_daily_max_online_minutes(from.daily_max_online_minutes());
    }
    if (from.has_sign()) {
      set_sign(from.sign());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LoveOnlinePrizeProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoveOnlinePrizeProto::CopyFrom(const LoveOnlinePrizeProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoveOnlinePrizeProto::IsInitialized() const {

  return true;
}

void LoveOnlinePrizeProto::Swap(LoveOnlinePrizeProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    minutes_.Swap(&other->minutes_);
    prize_.Swap(&other->prize_);
    std::swap(daily_max_online_minutes_, other->daily_max_online_minutes_);
    std::swap(sign_, other->sign_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LoveOnlinePrizeProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoveOnlinePrizeProto_descriptor_;
  metadata.reflection = LoveOnlinePrizeProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LoveExchangeProto::kStartTimeFieldNumber;
const int LoveExchangeProto::kEndTimeFieldNumber;
const int LoveExchangeProto::kAdPercentFieldNumber;
const int LoveExchangeProto::kPointGoodsFieldNumber;
const int LoveExchangeProto::kPointFieldNumber;
const int LoveExchangeProto::kItemsFieldNumber;
#endif  // !_MSC_VER

LoveExchangeProto::LoveExchangeProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void LoveExchangeProto::InitAsDefaultInstance() {
}

LoveExchangeProto::LoveExchangeProto(const LoveExchangeProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void LoveExchangeProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  ad_percent_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LoveExchangeProto::~LoveExchangeProto() {
  SharedDtor();
}

void LoveExchangeProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LoveExchangeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoveExchangeProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoveExchangeProto_descriptor_;
}

const LoveExchangeProto& LoveExchangeProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

LoveExchangeProto* LoveExchangeProto::default_instance_ = NULL;

LoveExchangeProto* LoveExchangeProto::New() const {
  return new LoveExchangeProto;
}

void LoveExchangeProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    ad_percent_ = 0;
  }
  point_goods_.Clear();
  point_.Clear();
  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LoveExchangeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_ad_percent;
        break;
      }

      // optional int32 ad_percent = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_ad_percent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ad_percent_)));
          set_has_ad_percent();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_point_goods;
        break;
      }

      // repeated .app.message.GoodsWrapperProto point_goods = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_point_goods:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_point_goods()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_point_goods;
        if (input->ExpectTag(40)) goto parse_point;
        break;
      }

      // repeated int32 point = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_point:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_point())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_point())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_point;
        if (input->ExpectTag(50)) goto parse_items;
        break;
      }

      // repeated .app.message.LoveSingleExchangeProto items = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_items;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void LoveExchangeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // optional int32 ad_percent = 3;
  if (has_ad_percent()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->ad_percent(), output);
  }

  // repeated .app.message.GoodsWrapperProto point_goods = 4;
  for (int i = 0; i < this->point_goods_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->point_goods(i), output);
  }

  // repeated int32 point = 5;
  for (int i = 0; i < this->point_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->point(i), output);
  }

  // repeated .app.message.LoveSingleExchangeProto items = 6;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->items(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* LoveExchangeProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // optional int32 ad_percent = 3;
  if (has_ad_percent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->ad_percent(), target);
  }

  // repeated .app.message.GoodsWrapperProto point_goods = 4;
  for (int i = 0; i < this->point_goods_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->point_goods(i), target);
  }

  // repeated int32 point = 5;
  for (int i = 0; i < this->point_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->point(i), target);
  }

  // repeated .app.message.LoveSingleExchangeProto items = 6;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->items(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int LoveExchangeProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional int32 ad_percent = 3;
    if (has_ad_percent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ad_percent());
    }

  }
  // repeated .app.message.GoodsWrapperProto point_goods = 4;
  total_size += 1 * this->point_goods_size();
  for (int i = 0; i < this->point_goods_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->point_goods(i));
  }

  // repeated int32 point = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->point_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->point(i));
    }
    total_size += 1 * this->point_size() + data_size;
  }

  // repeated .app.message.LoveSingleExchangeProto items = 6;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoveExchangeProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LoveExchangeProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LoveExchangeProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LoveExchangeProto::MergeFrom(const LoveExchangeProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  point_goods_.MergeFrom(from.point_goods_);
  point_.MergeFrom(from.point_);
  items_.MergeFrom(from.items_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_ad_percent()) {
      set_ad_percent(from.ad_percent());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LoveExchangeProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoveExchangeProto::CopyFrom(const LoveExchangeProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoveExchangeProto::IsInitialized() const {

  return true;
}

void LoveExchangeProto::Swap(LoveExchangeProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    std::swap(ad_percent_, other->ad_percent_);
    point_goods_.Swap(&other->point_goods_);
    point_.Swap(&other->point_);
    items_.Swap(&other->items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LoveExchangeProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoveExchangeProto_descriptor_;
  metadata.reflection = LoveExchangeProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LoveSingleExchangeProto::kIdFieldNumber;
const int LoveSingleExchangeProto::kPointFieldNumber;
const int LoveSingleExchangeProto::kGoodsFieldNumber;
const int LoveSingleExchangeProto::kPrizeFieldNumber;
const int LoveSingleExchangeProto::kDailyMaxCountFieldNumber;
#endif  // !_MSC_VER

LoveSingleExchangeProto::LoveSingleExchangeProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void LoveSingleExchangeProto::InitAsDefaultInstance() {
  prize_ = const_cast< ::app::message::GoodsWrapperProto*>(&::app::message::GoodsWrapperProto::default_instance());
}

LoveSingleExchangeProto::LoveSingleExchangeProto(const LoveSingleExchangeProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void LoveSingleExchangeProto::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  point_ = 0;
  prize_ = NULL;
  daily_max_count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LoveSingleExchangeProto::~LoveSingleExchangeProto() {
  SharedDtor();
}

void LoveSingleExchangeProto::SharedDtor() {
  if (this != default_instance_) {
    delete prize_;
  }
}

void LoveSingleExchangeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoveSingleExchangeProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoveSingleExchangeProto_descriptor_;
}

const LoveSingleExchangeProto& LoveSingleExchangeProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

LoveSingleExchangeProto* LoveSingleExchangeProto::default_instance_ = NULL;

LoveSingleExchangeProto* LoveSingleExchangeProto::New() const {
  return new LoveSingleExchangeProto;
}

void LoveSingleExchangeProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    point_ = 0;
    if (has_prize()) {
      if (prize_ != NULL) prize_->::app::message::GoodsWrapperProto::Clear();
    }
    daily_max_count_ = 0;
  }
  goods_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LoveSingleExchangeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_point;
        break;
      }

      // optional int32 point = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_point:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &point_)));
          set_has_point();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_goods;
        break;
      }

      // repeated .app.message.GoodsWrapperProto goods = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_goods:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_goods()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_goods;
        if (input->ExpectTag(34)) goto parse_prize;
        break;
      }

      // optional .app.message.GoodsWrapperProto prize = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_daily_max_count;
        break;
      }

      // optional int32 daily_max_count = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_daily_max_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &daily_max_count_)));
          set_has_daily_max_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void LoveSingleExchangeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional int32 point = 2;
  if (has_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->point(), output);
  }

  // repeated .app.message.GoodsWrapperProto goods = 3;
  for (int i = 0; i < this->goods_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->goods(i), output);
  }

  // optional .app.message.GoodsWrapperProto prize = 4;
  if (has_prize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->prize(), output);
  }

  // optional int32 daily_max_count = 5;
  if (has_daily_max_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->daily_max_count(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* LoveSingleExchangeProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional int32 point = 2;
  if (has_point()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->point(), target);
  }

  // repeated .app.message.GoodsWrapperProto goods = 3;
  for (int i = 0; i < this->goods_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->goods(i), target);
  }

  // optional .app.message.GoodsWrapperProto prize = 4;
  if (has_prize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->prize(), target);
  }

  // optional int32 daily_max_count = 5;
  if (has_daily_max_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->daily_max_count(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int LoveSingleExchangeProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 point = 2;
    if (has_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->point());
    }

    // optional .app.message.GoodsWrapperProto prize = 4;
    if (has_prize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prize());
    }

    // optional int32 daily_max_count = 5;
    if (has_daily_max_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->daily_max_count());
    }

  }
  // repeated .app.message.GoodsWrapperProto goods = 3;
  total_size += 1 * this->goods_size();
  for (int i = 0; i < this->goods_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->goods(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoveSingleExchangeProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LoveSingleExchangeProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LoveSingleExchangeProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LoveSingleExchangeProto::MergeFrom(const LoveSingleExchangeProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  goods_.MergeFrom(from.goods_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_point()) {
      set_point(from.point());
    }
    if (from.has_prize()) {
      mutable_prize()->::app::message::GoodsWrapperProto::MergeFrom(from.prize());
    }
    if (from.has_daily_max_count()) {
      set_daily_max_count(from.daily_max_count());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LoveSingleExchangeProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoveSingleExchangeProto::CopyFrom(const LoveSingleExchangeProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoveSingleExchangeProto::IsInitialized() const {

  return true;
}

void LoveSingleExchangeProto::Swap(LoveSingleExchangeProto* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(point_, other->point_);
    goods_.Swap(&other->goods_);
    std::swap(prize_, other->prize_);
    std::swap(daily_max_count_, other->daily_max_count_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LoveSingleExchangeProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoveSingleExchangeProto_descriptor_;
  metadata.reflection = LoveSingleExchangeProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GlobalMarriageChangeRankDatasProto::kStartTimeFieldNumber;
const int GlobalMarriageChangeRankDatasProto::kEndTimeFieldNumber;
const int GlobalMarriageChangeRankDatasProto::kPageCountFieldNumber;
const int GlobalMarriageChangeRankDatasProto::kTotalPageFieldNumber;
const int GlobalMarriageChangeRankDatasProto::kDataFieldNumber;
const int GlobalMarriageChangeRankDatasProto::kSignFieldNumber;
const int GlobalMarriageChangeRankDatasProto::kDailyPrizeHaoganFieldNumber;
const int GlobalMarriageChangeRankDatasProto::kDailyPrizeFieldNumber;
#endif  // !_MSC_VER

GlobalMarriageChangeRankDatasProto::GlobalMarriageChangeRankDatasProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GlobalMarriageChangeRankDatasProto::InitAsDefaultInstance() {
}

GlobalMarriageChangeRankDatasProto::GlobalMarriageChangeRankDatasProto(const GlobalMarriageChangeRankDatasProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GlobalMarriageChangeRankDatasProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  page_count_ = 0;
  total_page_ = 0;
  sign_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GlobalMarriageChangeRankDatasProto::~GlobalMarriageChangeRankDatasProto() {
  SharedDtor();
}

void GlobalMarriageChangeRankDatasProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GlobalMarriageChangeRankDatasProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GlobalMarriageChangeRankDatasProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GlobalMarriageChangeRankDatasProto_descriptor_;
}

const GlobalMarriageChangeRankDatasProto& GlobalMarriageChangeRankDatasProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

GlobalMarriageChangeRankDatasProto* GlobalMarriageChangeRankDatasProto::default_instance_ = NULL;

GlobalMarriageChangeRankDatasProto* GlobalMarriageChangeRankDatasProto::New() const {
  return new GlobalMarriageChangeRankDatasProto;
}

void GlobalMarriageChangeRankDatasProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    page_count_ = 0;
    total_page_ = 0;
    sign_ = 0;
  }
  data_.Clear();
  daily_prize_haogan_.Clear();
  daily_prize_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GlobalMarriageChangeRankDatasProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_page_count;
        break;
      }

      // optional int32 page_count = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_page_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_count_)));
          set_has_page_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_total_page;
        break;
      }

      // optional int32 total_page = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_page_)));
          set_has_total_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_data;
        break;
      }

      // repeated .app.message.GlobalMarriageChangeRankDataProto data = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_data;
        if (input->ExpectTag(48)) goto parse_sign;
        break;
      }

      // optional int32 sign = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sign:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sign_)));
          set_has_sign();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_daily_prize_haogan;
        break;
      }

      // repeated int32 daily_prize_haogan = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_daily_prize_haogan:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 56, input, this->mutable_daily_prize_haogan())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_daily_prize_haogan())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_daily_prize_haogan;
        if (input->ExpectTag(66)) goto parse_daily_prize;
        break;
      }

      // repeated .app.message.PrizeProto daily_prize = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_daily_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_daily_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_daily_prize;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GlobalMarriageChangeRankDatasProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // optional int32 page_count = 3;
  if (has_page_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_count(), output);
  }

  // optional int32 total_page = 4;
  if (has_total_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->total_page(), output);
  }

  // repeated .app.message.GlobalMarriageChangeRankDataProto data = 5;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->data(i), output);
  }

  // optional int32 sign = 6;
  if (has_sign()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->sign(), output);
  }

  // repeated int32 daily_prize_haogan = 7;
  for (int i = 0; i < this->daily_prize_haogan_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      7, this->daily_prize_haogan(i), output);
  }

  // repeated .app.message.PrizeProto daily_prize = 8;
  for (int i = 0; i < this->daily_prize_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->daily_prize(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GlobalMarriageChangeRankDatasProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // optional int32 page_count = 3;
  if (has_page_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_count(), target);
  }

  // optional int32 total_page = 4;
  if (has_total_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->total_page(), target);
  }

  // repeated .app.message.GlobalMarriageChangeRankDataProto data = 5;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->data(i), target);
  }

  // optional int32 sign = 6;
  if (has_sign()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->sign(), target);
  }

  // repeated int32 daily_prize_haogan = 7;
  for (int i = 0; i < this->daily_prize_haogan_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(7, this->daily_prize_haogan(i), target);
  }

  // repeated .app.message.PrizeProto daily_prize = 8;
  for (int i = 0; i < this->daily_prize_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->daily_prize(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GlobalMarriageChangeRankDatasProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional int32 page_count = 3;
    if (has_page_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->page_count());
    }

    // optional int32 total_page = 4;
    if (has_total_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_page());
    }

    // optional int32 sign = 6;
    if (has_sign()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sign());
    }

  }
  // repeated .app.message.GlobalMarriageChangeRankDataProto data = 5;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  // repeated int32 daily_prize_haogan = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->daily_prize_haogan_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->daily_prize_haogan(i));
    }
    total_size += 1 * this->daily_prize_haogan_size() + data_size;
  }

  // repeated .app.message.PrizeProto daily_prize = 8;
  total_size += 1 * this->daily_prize_size();
  for (int i = 0; i < this->daily_prize_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->daily_prize(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GlobalMarriageChangeRankDatasProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GlobalMarriageChangeRankDatasProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GlobalMarriageChangeRankDatasProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GlobalMarriageChangeRankDatasProto::MergeFrom(const GlobalMarriageChangeRankDatasProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  daily_prize_haogan_.MergeFrom(from.daily_prize_haogan_);
  daily_prize_.MergeFrom(from.daily_prize_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_page_count()) {
      set_page_count(from.page_count());
    }
    if (from.has_total_page()) {
      set_total_page(from.total_page());
    }
    if (from.has_sign()) {
      set_sign(from.sign());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GlobalMarriageChangeRankDatasProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalMarriageChangeRankDatasProto::CopyFrom(const GlobalMarriageChangeRankDatasProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalMarriageChangeRankDatasProto::IsInitialized() const {

  return true;
}

void GlobalMarriageChangeRankDatasProto::Swap(GlobalMarriageChangeRankDatasProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    std::swap(page_count_, other->page_count_);
    std::swap(total_page_, other->total_page_);
    data_.Swap(&other->data_);
    std::swap(sign_, other->sign_);
    daily_prize_haogan_.Swap(&other->daily_prize_haogan_);
    daily_prize_.Swap(&other->daily_prize_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GlobalMarriageChangeRankDatasProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GlobalMarriageChangeRankDatasProto_descriptor_;
  metadata.reflection = GlobalMarriageChangeRankDatasProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GlobalMarriageChangeRankDataProto::kLastRankFieldNumber;
const int GlobalMarriageChangeRankDataProto::kFinalPrizeFieldNumber;
#endif  // !_MSC_VER

GlobalMarriageChangeRankDataProto::GlobalMarriageChangeRankDataProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GlobalMarriageChangeRankDataProto::InitAsDefaultInstance() {
  finalprize_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
}

GlobalMarriageChangeRankDataProto::GlobalMarriageChangeRankDataProto(const GlobalMarriageChangeRankDataProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GlobalMarriageChangeRankDataProto::SharedCtor() {
  _cached_size_ = 0;
  last_rank_ = 0;
  finalprize_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GlobalMarriageChangeRankDataProto::~GlobalMarriageChangeRankDataProto() {
  SharedDtor();
}

void GlobalMarriageChangeRankDataProto::SharedDtor() {
  if (this != default_instance_) {
    delete finalprize_;
  }
}

void GlobalMarriageChangeRankDataProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GlobalMarriageChangeRankDataProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GlobalMarriageChangeRankDataProto_descriptor_;
}

const GlobalMarriageChangeRankDataProto& GlobalMarriageChangeRankDataProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

GlobalMarriageChangeRankDataProto* GlobalMarriageChangeRankDataProto::default_instance_ = NULL;

GlobalMarriageChangeRankDataProto* GlobalMarriageChangeRankDataProto::New() const {
  return new GlobalMarriageChangeRankDataProto;
}

void GlobalMarriageChangeRankDataProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    last_rank_ = 0;
    if (has_finalprize()) {
      if (finalprize_ != NULL) finalprize_->::app::message::PrizeProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GlobalMarriageChangeRankDataProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 last_rank = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_rank_)));
          set_has_last_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_finalPrize;
        break;
      }

      // optional .app.message.PrizeProto finalPrize = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_finalPrize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_finalprize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GlobalMarriageChangeRankDataProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 last_rank = 1;
  if (has_last_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->last_rank(), output);
  }

  // optional .app.message.PrizeProto finalPrize = 3;
  if (has_finalprize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->finalprize(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GlobalMarriageChangeRankDataProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 last_rank = 1;
  if (has_last_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->last_rank(), target);
  }

  // optional .app.message.PrizeProto finalPrize = 3;
  if (has_finalprize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->finalprize(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GlobalMarriageChangeRankDataProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 last_rank = 1;
    if (has_last_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->last_rank());
    }

    // optional .app.message.PrizeProto finalPrize = 3;
    if (has_finalprize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->finalprize());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GlobalMarriageChangeRankDataProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GlobalMarriageChangeRankDataProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GlobalMarriageChangeRankDataProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GlobalMarriageChangeRankDataProto::MergeFrom(const GlobalMarriageChangeRankDataProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_last_rank()) {
      set_last_rank(from.last_rank());
    }
    if (from.has_finalprize()) {
      mutable_finalprize()->::app::message::PrizeProto::MergeFrom(from.finalprize());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GlobalMarriageChangeRankDataProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalMarriageChangeRankDataProto::CopyFrom(const GlobalMarriageChangeRankDataProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalMarriageChangeRankDataProto::IsInitialized() const {

  return true;
}

void GlobalMarriageChangeRankDataProto::Swap(GlobalMarriageChangeRankDataProto* other) {
  if (other != this) {
    std::swap(last_rank_, other->last_rank_);
    std::swap(finalprize_, other->finalprize_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GlobalMarriageChangeRankDataProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GlobalMarriageChangeRankDataProto_descriptor_;
  metadata.reflection = GlobalMarriageChangeRankDataProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NianshouDatasProto::kBaseDataFieldNumber;
const int NianshouDatasProto::kRankDataFieldNumber;
const int NianshouDatasProto::kCountPerPageFieldNumber;
#endif  // !_MSC_VER

NianshouDatasProto::NianshouDatasProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NianshouDatasProto::InitAsDefaultInstance() {
  base_data_ = const_cast< ::app::message::NianshouDataProto*>(&::app::message::NianshouDataProto::default_instance());
}

NianshouDatasProto::NianshouDatasProto(const NianshouDatasProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NianshouDatasProto::SharedCtor() {
  _cached_size_ = 0;
  base_data_ = NULL;
  count_per_page_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NianshouDatasProto::~NianshouDatasProto() {
  SharedDtor();
}

void NianshouDatasProto::SharedDtor() {
  if (this != default_instance_) {
    delete base_data_;
  }
}

void NianshouDatasProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NianshouDatasProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NianshouDatasProto_descriptor_;
}

const NianshouDatasProto& NianshouDatasProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

NianshouDatasProto* NianshouDatasProto::default_instance_ = NULL;

NianshouDatasProto* NianshouDatasProto::New() const {
  return new NianshouDatasProto;
}

void NianshouDatasProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_base_data()) {
      if (base_data_ != NULL) base_data_->::app::message::NianshouDataProto::Clear();
    }
    count_per_page_ = 0;
  }
  rank_data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NianshouDatasProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .app.message.NianshouDataProto base_data = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_base_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_rank_data;
        break;
      }

      // repeated .app.message.NianshouRankProto rank_data = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rank_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rank_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_rank_data;
        if (input->ExpectTag(24)) goto parse_count_per_page;
        break;
      }

      // optional int32 count_per_page = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_count_per_page:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_per_page_)));
          set_has_count_per_page();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void NianshouDatasProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .app.message.NianshouDataProto base_data = 1;
  if (has_base_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->base_data(), output);
  }

  // repeated .app.message.NianshouRankProto rank_data = 2;
  for (int i = 0; i < this->rank_data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->rank_data(i), output);
  }

  // optional int32 count_per_page = 3;
  if (has_count_per_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->count_per_page(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NianshouDatasProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .app.message.NianshouDataProto base_data = 1;
  if (has_base_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->base_data(), target);
  }

  // repeated .app.message.NianshouRankProto rank_data = 2;
  for (int i = 0; i < this->rank_data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->rank_data(i), target);
  }

  // optional int32 count_per_page = 3;
  if (has_count_per_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->count_per_page(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NianshouDatasProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .app.message.NianshouDataProto base_data = 1;
    if (has_base_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->base_data());
    }

    // optional int32 count_per_page = 3;
    if (has_count_per_page()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count_per_page());
    }

  }
  // repeated .app.message.NianshouRankProto rank_data = 2;
  total_size += 1 * this->rank_data_size();
  for (int i = 0; i < this->rank_data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rank_data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NianshouDatasProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NianshouDatasProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NianshouDatasProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NianshouDatasProto::MergeFrom(const NianshouDatasProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  rank_data_.MergeFrom(from.rank_data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_base_data()) {
      mutable_base_data()->::app::message::NianshouDataProto::MergeFrom(from.base_data());
    }
    if (from.has_count_per_page()) {
      set_count_per_page(from.count_per_page());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NianshouDatasProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NianshouDatasProto::CopyFrom(const NianshouDatasProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NianshouDatasProto::IsInitialized() const {

  return true;
}

void NianshouDatasProto::Swap(NianshouDatasProto* other) {
  if (other != this) {
    std::swap(base_data_, other->base_data_);
    rank_data_.Swap(&other->rank_data_);
    std::swap(count_per_page_, other->count_per_page_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NianshouDatasProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NianshouDatasProto_descriptor_;
  metadata.reflection = NianshouDatasProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NianshouDataProto::kStartDateMillisFieldNumber;
const int NianshouDataProto::kKeepDaysFieldNumber;
const int NianshouDataProto::kDayStartMinutesFieldNumber;
const int NianshouDataProto::kSceneIdFieldNumber;
const int NianshouDataProto::kBigNianshouPrizeGoodsFieldNumber;
const int NianshouDataProto::kBianpaoGoodsFieldNumber;
const int NianshouDataProto::kBigNianshouMaxLifeFieldNumber;
const int NianshouDataProto::kSmallNianshouMaxCountFieldNumber;
const int NianshouDataProto::kBigNianshouMonsterIdFieldNumber;
const int NianshouDataProto::kSmallNianshouMonsterIdFieldNumber;
const int NianshouDataProto::kBigNianshouXFieldNumber;
const int NianshouDataProto::kBigNianshouYFieldNumber;
#endif  // !_MSC_VER

NianshouDataProto::NianshouDataProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NianshouDataProto::InitAsDefaultInstance() {
}

NianshouDataProto::NianshouDataProto(const NianshouDataProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NianshouDataProto::SharedCtor() {
  _cached_size_ = 0;
  start_date_millis_ = GOOGLE_LONGLONG(0);
  keep_days_ = 0;
  scene_id_ = 0;
  bianpao_goods_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  big_nianshou_max_life_ = GOOGLE_LONGLONG(0);
  small_nianshou_max_count_ = 0;
  big_nianshou_monster_id_ = 0;
  small_nianshou_monster_id_ = 0;
  big_nianshou_x_ = 0;
  big_nianshou_y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NianshouDataProto::~NianshouDataProto() {
  SharedDtor();
}

void NianshouDataProto::SharedDtor() {
  if (bianpao_goods_ != &::google::protobuf::internal::kEmptyString) {
    delete bianpao_goods_;
  }
  if (this != default_instance_) {
  }
}

void NianshouDataProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NianshouDataProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NianshouDataProto_descriptor_;
}

const NianshouDataProto& NianshouDataProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

NianshouDataProto* NianshouDataProto::default_instance_ = NULL;

NianshouDataProto* NianshouDataProto::New() const {
  return new NianshouDataProto;
}

void NianshouDataProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_date_millis_ = GOOGLE_LONGLONG(0);
    keep_days_ = 0;
    scene_id_ = 0;
    if (has_bianpao_goods()) {
      if (bianpao_goods_ != &::google::protobuf::internal::kEmptyString) {
        bianpao_goods_->clear();
      }
    }
    big_nianshou_max_life_ = GOOGLE_LONGLONG(0);
    small_nianshou_max_count_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    big_nianshou_monster_id_ = 0;
    small_nianshou_monster_id_ = 0;
    big_nianshou_x_ = 0;
    big_nianshou_y_ = 0;
  }
  day_start_minutes_.Clear();
  big_nianshou_prize_goods_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NianshouDataProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_date_millis = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_date_millis_)));
          set_has_start_date_millis();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_keep_days;
        break;
      }

      // optional int32 keep_days = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_keep_days:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &keep_days_)));
          set_has_keep_days();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_day_start_minutes;
        break;
      }

      // repeated int32 day_start_minutes = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_day_start_minutes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_day_start_minutes())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_day_start_minutes())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_day_start_minutes;
        if (input->ExpectTag(40)) goto parse_scene_id;
        break;
      }

      // optional int32 scene_id = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_scene_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_id_)));
          set_has_scene_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_big_nianshou_prize_goods;
        break;
      }

      // repeated .app.message.GoodsWrapperProto big_nianshou_prize_goods = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_big_nianshou_prize_goods:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_big_nianshou_prize_goods()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_big_nianshou_prize_goods;
        if (input->ExpectTag(58)) goto parse_bianpao_goods;
        break;
      }

      // optional bytes bianpao_goods = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bianpao_goods:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bianpao_goods()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_big_nianshou_max_life;
        break;
      }

      // optional int64 big_nianshou_max_life = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_big_nianshou_max_life:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &big_nianshou_max_life_)));
          set_has_big_nianshou_max_life();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_small_nianshou_max_count;
        break;
      }

      // optional int32 small_nianshou_max_count = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_small_nianshou_max_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &small_nianshou_max_count_)));
          set_has_small_nianshou_max_count();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_big_nianshou_monster_id;
        break;
      }

      // optional int32 big_nianshou_monster_id = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_big_nianshou_monster_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &big_nianshou_monster_id_)));
          set_has_big_nianshou_monster_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_small_nianshou_monster_id;
        break;
      }

      // optional int32 small_nianshou_monster_id = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_small_nianshou_monster_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &small_nianshou_monster_id_)));
          set_has_small_nianshou_monster_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_big_nianshou_x;
        break;
      }

      // optional int32 big_nianshou_x = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_big_nianshou_x:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &big_nianshou_x_)));
          set_has_big_nianshou_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_big_nianshou_y;
        break;
      }

      // optional int32 big_nianshou_y = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_big_nianshou_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &big_nianshou_y_)));
          set_has_big_nianshou_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void NianshouDataProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_date_millis = 1;
  if (has_start_date_millis()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_date_millis(), output);
  }

  // optional int32 keep_days = 2;
  if (has_keep_days()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->keep_days(), output);
  }

  // repeated int32 day_start_minutes = 3;
  for (int i = 0; i < this->day_start_minutes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->day_start_minutes(i), output);
  }

  // optional int32 scene_id = 5;
  if (has_scene_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->scene_id(), output);
  }

  // repeated .app.message.GoodsWrapperProto big_nianshou_prize_goods = 6;
  for (int i = 0; i < this->big_nianshou_prize_goods_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->big_nianshou_prize_goods(i), output);
  }

  // optional bytes bianpao_goods = 7;
  if (has_bianpao_goods()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      7, this->bianpao_goods(), output);
  }

  // optional int64 big_nianshou_max_life = 8;
  if (has_big_nianshou_max_life()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->big_nianshou_max_life(), output);
  }

  // optional int32 small_nianshou_max_count = 9;
  if (has_small_nianshou_max_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->small_nianshou_max_count(), output);
  }

  // optional int32 big_nianshou_monster_id = 10;
  if (has_big_nianshou_monster_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->big_nianshou_monster_id(), output);
  }

  // optional int32 small_nianshou_monster_id = 11;
  if (has_small_nianshou_monster_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->small_nianshou_monster_id(), output);
  }

  // optional int32 big_nianshou_x = 12;
  if (has_big_nianshou_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->big_nianshou_x(), output);
  }

  // optional int32 big_nianshou_y = 13;
  if (has_big_nianshou_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->big_nianshou_y(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NianshouDataProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_date_millis = 1;
  if (has_start_date_millis()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_date_millis(), target);
  }

  // optional int32 keep_days = 2;
  if (has_keep_days()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->keep_days(), target);
  }

  // repeated int32 day_start_minutes = 3;
  for (int i = 0; i < this->day_start_minutes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->day_start_minutes(i), target);
  }

  // optional int32 scene_id = 5;
  if (has_scene_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->scene_id(), target);
  }

  // repeated .app.message.GoodsWrapperProto big_nianshou_prize_goods = 6;
  for (int i = 0; i < this->big_nianshou_prize_goods_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->big_nianshou_prize_goods(i), target);
  }

  // optional bytes bianpao_goods = 7;
  if (has_bianpao_goods()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->bianpao_goods(), target);
  }

  // optional int64 big_nianshou_max_life = 8;
  if (has_big_nianshou_max_life()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->big_nianshou_max_life(), target);
  }

  // optional int32 small_nianshou_max_count = 9;
  if (has_small_nianshou_max_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->small_nianshou_max_count(), target);
  }

  // optional int32 big_nianshou_monster_id = 10;
  if (has_big_nianshou_monster_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->big_nianshou_monster_id(), target);
  }

  // optional int32 small_nianshou_monster_id = 11;
  if (has_small_nianshou_monster_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->small_nianshou_monster_id(), target);
  }

  // optional int32 big_nianshou_x = 12;
  if (has_big_nianshou_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->big_nianshou_x(), target);
  }

  // optional int32 big_nianshou_y = 13;
  if (has_big_nianshou_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->big_nianshou_y(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NianshouDataProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_date_millis = 1;
    if (has_start_date_millis()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_date_millis());
    }

    // optional int32 keep_days = 2;
    if (has_keep_days()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->keep_days());
    }

    // optional int32 scene_id = 5;
    if (has_scene_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene_id());
    }

    // optional bytes bianpao_goods = 7;
    if (has_bianpao_goods()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bianpao_goods());
    }

    // optional int64 big_nianshou_max_life = 8;
    if (has_big_nianshou_max_life()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->big_nianshou_max_life());
    }

    // optional int32 small_nianshou_max_count = 9;
    if (has_small_nianshou_max_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->small_nianshou_max_count());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 big_nianshou_monster_id = 10;
    if (has_big_nianshou_monster_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->big_nianshou_monster_id());
    }

    // optional int32 small_nianshou_monster_id = 11;
    if (has_small_nianshou_monster_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->small_nianshou_monster_id());
    }

    // optional int32 big_nianshou_x = 12;
    if (has_big_nianshou_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->big_nianshou_x());
    }

    // optional int32 big_nianshou_y = 13;
    if (has_big_nianshou_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->big_nianshou_y());
    }

  }
  // repeated int32 day_start_minutes = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->day_start_minutes_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->day_start_minutes(i));
    }
    total_size += 1 * this->day_start_minutes_size() + data_size;
  }

  // repeated .app.message.GoodsWrapperProto big_nianshou_prize_goods = 6;
  total_size += 1 * this->big_nianshou_prize_goods_size();
  for (int i = 0; i < this->big_nianshou_prize_goods_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->big_nianshou_prize_goods(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NianshouDataProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NianshouDataProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NianshouDataProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NianshouDataProto::MergeFrom(const NianshouDataProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  day_start_minutes_.MergeFrom(from.day_start_minutes_);
  big_nianshou_prize_goods_.MergeFrom(from.big_nianshou_prize_goods_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_date_millis()) {
      set_start_date_millis(from.start_date_millis());
    }
    if (from.has_keep_days()) {
      set_keep_days(from.keep_days());
    }
    if (from.has_scene_id()) {
      set_scene_id(from.scene_id());
    }
    if (from.has_bianpao_goods()) {
      set_bianpao_goods(from.bianpao_goods());
    }
    if (from.has_big_nianshou_max_life()) {
      set_big_nianshou_max_life(from.big_nianshou_max_life());
    }
    if (from.has_small_nianshou_max_count()) {
      set_small_nianshou_max_count(from.small_nianshou_max_count());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_big_nianshou_monster_id()) {
      set_big_nianshou_monster_id(from.big_nianshou_monster_id());
    }
    if (from.has_small_nianshou_monster_id()) {
      set_small_nianshou_monster_id(from.small_nianshou_monster_id());
    }
    if (from.has_big_nianshou_x()) {
      set_big_nianshou_x(from.big_nianshou_x());
    }
    if (from.has_big_nianshou_y()) {
      set_big_nianshou_y(from.big_nianshou_y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NianshouDataProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NianshouDataProto::CopyFrom(const NianshouDataProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NianshouDataProto::IsInitialized() const {

  return true;
}

void NianshouDataProto::Swap(NianshouDataProto* other) {
  if (other != this) {
    std::swap(start_date_millis_, other->start_date_millis_);
    std::swap(keep_days_, other->keep_days_);
    day_start_minutes_.Swap(&other->day_start_minutes_);
    std::swap(scene_id_, other->scene_id_);
    big_nianshou_prize_goods_.Swap(&other->big_nianshou_prize_goods_);
    std::swap(bianpao_goods_, other->bianpao_goods_);
    std::swap(big_nianshou_max_life_, other->big_nianshou_max_life_);
    std::swap(small_nianshou_max_count_, other->small_nianshou_max_count_);
    std::swap(big_nianshou_monster_id_, other->big_nianshou_monster_id_);
    std::swap(small_nianshou_monster_id_, other->small_nianshou_monster_id_);
    std::swap(big_nianshou_x_, other->big_nianshou_x_);
    std::swap(big_nianshou_y_, other->big_nianshou_y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NianshouDataProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NianshouDataProto_descriptor_;
  metadata.reflection = NianshouDataProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NianshouRankProto::kLastRankFieldNumber;
const int NianshouRankProto::kDailyPrizeFieldNumber;
#endif  // !_MSC_VER

NianshouRankProto::NianshouRankProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NianshouRankProto::InitAsDefaultInstance() {
  dailyprize_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
}

NianshouRankProto::NianshouRankProto(const NianshouRankProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NianshouRankProto::SharedCtor() {
  _cached_size_ = 0;
  last_rank_ = 0;
  dailyprize_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NianshouRankProto::~NianshouRankProto() {
  SharedDtor();
}

void NianshouRankProto::SharedDtor() {
  if (this != default_instance_) {
    delete dailyprize_;
  }
}

void NianshouRankProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NianshouRankProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NianshouRankProto_descriptor_;
}

const NianshouRankProto& NianshouRankProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

NianshouRankProto* NianshouRankProto::default_instance_ = NULL;

NianshouRankProto* NianshouRankProto::New() const {
  return new NianshouRankProto;
}

void NianshouRankProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    last_rank_ = 0;
    if (has_dailyprize()) {
      if (dailyprize_ != NULL) dailyprize_->::app::message::PrizeProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NianshouRankProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 last_rank = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &last_rank_)));
          set_has_last_rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_dailyPrize;
        break;
      }

      // optional .app.message.PrizeProto dailyPrize = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_dailyPrize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dailyprize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void NianshouRankProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 last_rank = 1;
  if (has_last_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->last_rank(), output);
  }

  // optional .app.message.PrizeProto dailyPrize = 2;
  if (has_dailyprize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->dailyprize(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NianshouRankProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 last_rank = 1;
  if (has_last_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->last_rank(), target);
  }

  // optional .app.message.PrizeProto dailyPrize = 2;
  if (has_dailyprize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->dailyprize(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NianshouRankProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 last_rank = 1;
    if (has_last_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->last_rank());
    }

    // optional .app.message.PrizeProto dailyPrize = 2;
    if (has_dailyprize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dailyprize());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NianshouRankProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NianshouRankProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NianshouRankProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NianshouRankProto::MergeFrom(const NianshouRankProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_last_rank()) {
      set_last_rank(from.last_rank());
    }
    if (from.has_dailyprize()) {
      mutable_dailyprize()->::app::message::PrizeProto::MergeFrom(from.dailyprize());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NianshouRankProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NianshouRankProto::CopyFrom(const NianshouRankProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NianshouRankProto::IsInitialized() const {

  return true;
}

void NianshouRankProto::Swap(NianshouRankProto* other) {
  if (other != this) {
    std::swap(last_rank_, other->last_rank_);
    std::swap(dailyprize_, other->dailyprize_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NianshouRankProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NianshouRankProto_descriptor_;
  metadata.reflection = NianshouRankProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AnniversaryRechargeFanliProto::kStartTimeFieldNumber;
const int AnniversaryRechargeFanliProto::kEndTimeFieldNumber;
const int AnniversaryRechargeFanliProto::kSignFieldNumber;
const int AnniversaryRechargeFanliProto::kYuanbaoFieldNumber;
const int AnniversaryRechargeFanliProto::kPercentFieldNumber;
#endif  // !_MSC_VER

AnniversaryRechargeFanliProto::AnniversaryRechargeFanliProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AnniversaryRechargeFanliProto::InitAsDefaultInstance() {
}

AnniversaryRechargeFanliProto::AnniversaryRechargeFanliProto(const AnniversaryRechargeFanliProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AnniversaryRechargeFanliProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  sign_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AnniversaryRechargeFanliProto::~AnniversaryRechargeFanliProto() {
  SharedDtor();
}

void AnniversaryRechargeFanliProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AnniversaryRechargeFanliProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnniversaryRechargeFanliProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AnniversaryRechargeFanliProto_descriptor_;
}

const AnniversaryRechargeFanliProto& AnniversaryRechargeFanliProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

AnniversaryRechargeFanliProto* AnniversaryRechargeFanliProto::default_instance_ = NULL;

AnniversaryRechargeFanliProto* AnniversaryRechargeFanliProto::New() const {
  return new AnniversaryRechargeFanliProto;
}

void AnniversaryRechargeFanliProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    sign_ = GOOGLE_LONGLONG(0);
  }
  yuanbao_.Clear();
  percent_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AnniversaryRechargeFanliProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_yuanbao;
        break;
      }

      // repeated int32 yuanbao = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_yuanbao:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_yuanbao())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_yuanbao())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_yuanbao;
        if (input->ExpectTag(32)) goto parse_percent;
        break;
      }

      // repeated int32 percent = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_percent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_percent())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_percent())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_percent;
        if (input->ExpectTag(40)) goto parse_sign;
        break;
      }

      // optional int64 sign = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sign:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &sign_)));
          set_has_sign();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AnniversaryRechargeFanliProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // repeated int32 yuanbao = 3;
  for (int i = 0; i < this->yuanbao_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->yuanbao(i), output);
  }

  // repeated int32 percent = 4;
  for (int i = 0; i < this->percent_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->percent(i), output);
  }

  // optional int64 sign = 5;
  if (has_sign()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->sign(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AnniversaryRechargeFanliProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // repeated int32 yuanbao = 3;
  for (int i = 0; i < this->yuanbao_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->yuanbao(i), target);
  }

  // repeated int32 percent = 4;
  for (int i = 0; i < this->percent_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->percent(i), target);
  }

  // optional int64 sign = 5;
  if (has_sign()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->sign(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AnniversaryRechargeFanliProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional int64 sign = 5;
    if (has_sign()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->sign());
    }

  }
  // repeated int32 yuanbao = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->yuanbao_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->yuanbao(i));
    }
    total_size += 1 * this->yuanbao_size() + data_size;
  }

  // repeated int32 percent = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->percent_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->percent(i));
    }
    total_size += 1 * this->percent_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnniversaryRechargeFanliProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AnniversaryRechargeFanliProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AnniversaryRechargeFanliProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AnniversaryRechargeFanliProto::MergeFrom(const AnniversaryRechargeFanliProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  yuanbao_.MergeFrom(from.yuanbao_);
  percent_.MergeFrom(from.percent_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_sign()) {
      set_sign(from.sign());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AnniversaryRechargeFanliProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnniversaryRechargeFanliProto::CopyFrom(const AnniversaryRechargeFanliProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnniversaryRechargeFanliProto::IsInitialized() const {

  return true;
}

void AnniversaryRechargeFanliProto::Swap(AnniversaryRechargeFanliProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    std::swap(sign_, other->sign_);
    yuanbao_.Swap(&other->yuanbao_);
    percent_.Swap(&other->percent_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AnniversaryRechargeFanliProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AnniversaryRechargeFanliProto_descriptor_;
  metadata.reflection = AnniversaryRechargeFanliProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AnniversaryCakeProto::kStartTimeFieldNumber;
const int AnniversaryCakeProto::kEndTimeFieldNumber;
const int AnniversaryCakeProto::kCakesFieldNumber;
const int AnniversaryCakeProto::kNpcFieldNumber;
#endif  // !_MSC_VER

AnniversaryCakeProto::AnniversaryCakeProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AnniversaryCakeProto::InitAsDefaultInstance() {
}

AnniversaryCakeProto::AnniversaryCakeProto(const AnniversaryCakeProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AnniversaryCakeProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  npc_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AnniversaryCakeProto::~AnniversaryCakeProto() {
  SharedDtor();
}

void AnniversaryCakeProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AnniversaryCakeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnniversaryCakeProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AnniversaryCakeProto_descriptor_;
}

const AnniversaryCakeProto& AnniversaryCakeProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

AnniversaryCakeProto* AnniversaryCakeProto::default_instance_ = NULL;

AnniversaryCakeProto* AnniversaryCakeProto::New() const {
  return new AnniversaryCakeProto;
}

void AnniversaryCakeProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    npc_ = 0;
  }
  cakes_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AnniversaryCakeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_cakes;
        break;
      }

      // repeated .app.message.GoodsWrapperProto cakes = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cakes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cakes()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_cakes;
        if (input->ExpectTag(32)) goto parse_npc;
        break;
      }

      // optional int32 npc = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_npc:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &npc_)));
          set_has_npc();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AnniversaryCakeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // repeated .app.message.GoodsWrapperProto cakes = 3;
  for (int i = 0; i < this->cakes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->cakes(i), output);
  }

  // optional int32 npc = 4;
  if (has_npc()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->npc(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AnniversaryCakeProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // repeated .app.message.GoodsWrapperProto cakes = 3;
  for (int i = 0; i < this->cakes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->cakes(i), target);
  }

  // optional int32 npc = 4;
  if (has_npc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->npc(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AnniversaryCakeProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional int32 npc = 4;
    if (has_npc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->npc());
    }

  }
  // repeated .app.message.GoodsWrapperProto cakes = 3;
  total_size += 1 * this->cakes_size();
  for (int i = 0; i < this->cakes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cakes(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnniversaryCakeProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AnniversaryCakeProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AnniversaryCakeProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AnniversaryCakeProto::MergeFrom(const AnniversaryCakeProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  cakes_.MergeFrom(from.cakes_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_npc()) {
      set_npc(from.npc());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AnniversaryCakeProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnniversaryCakeProto::CopyFrom(const AnniversaryCakeProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnniversaryCakeProto::IsInitialized() const {

  return true;
}

void AnniversaryCakeProto::Swap(AnniversaryCakeProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    cakes_.Swap(&other->cakes_);
    std::swap(npc_, other->npc_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AnniversaryCakeProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AnniversaryCakeProto_descriptor_;
  metadata.reflection = AnniversaryCakeProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AnniversaryDailyPrizeProto::kStartTimeFieldNumber;
const int AnniversaryDailyPrizeProto::kEndTimeFieldNumber;
const int AnniversaryDailyPrizeProto::kNormalPrizeFieldNumber;
const int AnniversaryDailyPrizeProto::kVipPrizeFieldNumber;
const int AnniversaryDailyPrizeProto::kMinVipLevelFieldNumber;
const int AnniversaryDailyPrizeProto::kTypeFieldNumber;
#endif  // !_MSC_VER

AnniversaryDailyPrizeProto::AnniversaryDailyPrizeProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AnniversaryDailyPrizeProto::InitAsDefaultInstance() {
  normal_prize_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
  vip_prize_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
}

AnniversaryDailyPrizeProto::AnniversaryDailyPrizeProto(const AnniversaryDailyPrizeProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AnniversaryDailyPrizeProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  normal_prize_ = NULL;
  vip_prize_ = NULL;
  min_vip_level_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AnniversaryDailyPrizeProto::~AnniversaryDailyPrizeProto() {
  SharedDtor();
}

void AnniversaryDailyPrizeProto::SharedDtor() {
  if (this != default_instance_) {
    delete normal_prize_;
    delete vip_prize_;
  }
}

void AnniversaryDailyPrizeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnniversaryDailyPrizeProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AnniversaryDailyPrizeProto_descriptor_;
}

const AnniversaryDailyPrizeProto& AnniversaryDailyPrizeProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

AnniversaryDailyPrizeProto* AnniversaryDailyPrizeProto::default_instance_ = NULL;

AnniversaryDailyPrizeProto* AnniversaryDailyPrizeProto::New() const {
  return new AnniversaryDailyPrizeProto;
}

void AnniversaryDailyPrizeProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    if (has_normal_prize()) {
      if (normal_prize_ != NULL) normal_prize_->::app::message::PrizeProto::Clear();
    }
    if (has_vip_prize()) {
      if (vip_prize_ != NULL) vip_prize_->::app::message::PrizeProto::Clear();
    }
    min_vip_level_ = 0;
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AnniversaryDailyPrizeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_normal_prize;
        break;
      }

      // optional .app.message.PrizeProto normal_prize = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_normal_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_normal_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_vip_prize;
        break;
      }

      // optional .app.message.PrizeProto vip_prize = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_vip_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_vip_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_min_vip_level;
        break;
      }

      // optional int32 min_vip_level = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_min_vip_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &min_vip_level_)));
          set_has_min_vip_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_type;
        break;
      }

      // optional int32 type = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AnniversaryDailyPrizeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // optional .app.message.PrizeProto normal_prize = 3;
  if (has_normal_prize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->normal_prize(), output);
  }

  // optional .app.message.PrizeProto vip_prize = 4;
  if (has_vip_prize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->vip_prize(), output);
  }

  // optional int32 min_vip_level = 5;
  if (has_min_vip_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->min_vip_level(), output);
  }

  // optional int32 type = 6;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AnniversaryDailyPrizeProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // optional .app.message.PrizeProto normal_prize = 3;
  if (has_normal_prize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->normal_prize(), target);
  }

  // optional .app.message.PrizeProto vip_prize = 4;
  if (has_vip_prize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->vip_prize(), target);
  }

  // optional int32 min_vip_level = 5;
  if (has_min_vip_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->min_vip_level(), target);
  }

  // optional int32 type = 6;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AnniversaryDailyPrizeProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional .app.message.PrizeProto normal_prize = 3;
    if (has_normal_prize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->normal_prize());
    }

    // optional .app.message.PrizeProto vip_prize = 4;
    if (has_vip_prize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->vip_prize());
    }

    // optional int32 min_vip_level = 5;
    if (has_min_vip_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->min_vip_level());
    }

    // optional int32 type = 6;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnniversaryDailyPrizeProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AnniversaryDailyPrizeProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AnniversaryDailyPrizeProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AnniversaryDailyPrizeProto::MergeFrom(const AnniversaryDailyPrizeProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_normal_prize()) {
      mutable_normal_prize()->::app::message::PrizeProto::MergeFrom(from.normal_prize());
    }
    if (from.has_vip_prize()) {
      mutable_vip_prize()->::app::message::PrizeProto::MergeFrom(from.vip_prize());
    }
    if (from.has_min_vip_level()) {
      set_min_vip_level(from.min_vip_level());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AnniversaryDailyPrizeProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnniversaryDailyPrizeProto::CopyFrom(const AnniversaryDailyPrizeProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnniversaryDailyPrizeProto::IsInitialized() const {

  return true;
}

void AnniversaryDailyPrizeProto::Swap(AnniversaryDailyPrizeProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    std::swap(normal_prize_, other->normal_prize_);
    std::swap(vip_prize_, other->vip_prize_);
    std::swap(min_vip_level_, other->min_vip_level_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AnniversaryDailyPrizeProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AnniversaryDailyPrizeProto_descriptor_;
  metadata.reflection = AnniversaryDailyPrizeProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ComebackPrizeProto::kStartTimeFieldNumber;
const int ComebackPrizeProto::kEndTimeFieldNumber;
const int ComebackPrizeProto::kNormalPrizeFieldNumber;
const int ComebackPrizeProto::kVipPrizeFieldNumber;
const int ComebackPrizeProto::kMinVipLevelFieldNumber;
const int ComebackPrizeProto::kTypeFieldNumber;
#endif  // !_MSC_VER

ComebackPrizeProto::ComebackPrizeProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ComebackPrizeProto::InitAsDefaultInstance() {
  normal_prize_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
  vip_prize_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
}

ComebackPrizeProto::ComebackPrizeProto(const ComebackPrizeProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ComebackPrizeProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  normal_prize_ = NULL;
  vip_prize_ = NULL;
  min_vip_level_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ComebackPrizeProto::~ComebackPrizeProto() {
  SharedDtor();
}

void ComebackPrizeProto::SharedDtor() {
  if (this != default_instance_) {
    delete normal_prize_;
    delete vip_prize_;
  }
}

void ComebackPrizeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComebackPrizeProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ComebackPrizeProto_descriptor_;
}

const ComebackPrizeProto& ComebackPrizeProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

ComebackPrizeProto* ComebackPrizeProto::default_instance_ = NULL;

ComebackPrizeProto* ComebackPrizeProto::New() const {
  return new ComebackPrizeProto;
}

void ComebackPrizeProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    if (has_normal_prize()) {
      if (normal_prize_ != NULL) normal_prize_->::app::message::PrizeProto::Clear();
    }
    if (has_vip_prize()) {
      if (vip_prize_ != NULL) vip_prize_->::app::message::PrizeProto::Clear();
    }
    min_vip_level_ = 0;
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ComebackPrizeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_normal_prize;
        break;
      }

      // optional .app.message.PrizeProto normal_prize = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_normal_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_normal_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_vip_prize;
        break;
      }

      // optional .app.message.PrizeProto vip_prize = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_vip_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_vip_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_min_vip_level;
        break;
      }

      // optional int32 min_vip_level = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_min_vip_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &min_vip_level_)));
          set_has_min_vip_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_type;
        break;
      }

      // optional int32 type = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ComebackPrizeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // optional .app.message.PrizeProto normal_prize = 3;
  if (has_normal_prize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->normal_prize(), output);
  }

  // optional .app.message.PrizeProto vip_prize = 4;
  if (has_vip_prize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->vip_prize(), output);
  }

  // optional int32 min_vip_level = 5;
  if (has_min_vip_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->min_vip_level(), output);
  }

  // optional int32 type = 6;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ComebackPrizeProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // optional .app.message.PrizeProto normal_prize = 3;
  if (has_normal_prize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->normal_prize(), target);
  }

  // optional .app.message.PrizeProto vip_prize = 4;
  if (has_vip_prize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->vip_prize(), target);
  }

  // optional int32 min_vip_level = 5;
  if (has_min_vip_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->min_vip_level(), target);
  }

  // optional int32 type = 6;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ComebackPrizeProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional .app.message.PrizeProto normal_prize = 3;
    if (has_normal_prize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->normal_prize());
    }

    // optional .app.message.PrizeProto vip_prize = 4;
    if (has_vip_prize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->vip_prize());
    }

    // optional int32 min_vip_level = 5;
    if (has_min_vip_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->min_vip_level());
    }

    // optional int32 type = 6;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComebackPrizeProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ComebackPrizeProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ComebackPrizeProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ComebackPrizeProto::MergeFrom(const ComebackPrizeProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_normal_prize()) {
      mutable_normal_prize()->::app::message::PrizeProto::MergeFrom(from.normal_prize());
    }
    if (from.has_vip_prize()) {
      mutable_vip_prize()->::app::message::PrizeProto::MergeFrom(from.vip_prize());
    }
    if (from.has_min_vip_level()) {
      set_min_vip_level(from.min_vip_level());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ComebackPrizeProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComebackPrizeProto::CopyFrom(const ComebackPrizeProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComebackPrizeProto::IsInitialized() const {

  return true;
}

void ComebackPrizeProto::Swap(ComebackPrizeProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    std::swap(normal_prize_, other->normal_prize_);
    std::swap(vip_prize_, other->vip_prize_);
    std::swap(min_vip_level_, other->min_vip_level_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ComebackPrizeProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ComebackPrizeProto_descriptor_;
  metadata.reflection = ComebackPrizeProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AnniversaryDailyTaskProto::kStartTimeFieldNumber;
const int AnniversaryDailyTaskProto::kEndTimeFieldNumber;
const int AnniversaryDailyTaskProto::kFinalPrizeFieldNumber;
const int AnniversaryDailyTaskProto::kSizeFieldNumber;
const int AnniversaryDailyTaskProto::kGroupFieldNumber;
const int AnniversaryDailyTaskProto::kRefreshCostFieldNumber;
const int AnniversaryDailyTaskProto::kRefreshAddCostFieldNumber;
#endif  // !_MSC_VER

AnniversaryDailyTaskProto::AnniversaryDailyTaskProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AnniversaryDailyTaskProto::InitAsDefaultInstance() {
  final_prize_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
}

AnniversaryDailyTaskProto::AnniversaryDailyTaskProto(const AnniversaryDailyTaskProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AnniversaryDailyTaskProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  final_prize_ = NULL;
  size_ = 0;
  refresh_cost_ = 0;
  refresh_add_cost_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AnniversaryDailyTaskProto::~AnniversaryDailyTaskProto() {
  SharedDtor();
}

void AnniversaryDailyTaskProto::SharedDtor() {
  if (this != default_instance_) {
    delete final_prize_;
  }
}

void AnniversaryDailyTaskProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AnniversaryDailyTaskProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AnniversaryDailyTaskProto_descriptor_;
}

const AnniversaryDailyTaskProto& AnniversaryDailyTaskProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

AnniversaryDailyTaskProto* AnniversaryDailyTaskProto::default_instance_ = NULL;

AnniversaryDailyTaskProto* AnniversaryDailyTaskProto::New() const {
  return new AnniversaryDailyTaskProto;
}

void AnniversaryDailyTaskProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    if (has_final_prize()) {
      if (final_prize_ != NULL) final_prize_->::app::message::PrizeProto::Clear();
    }
    size_ = 0;
    refresh_cost_ = 0;
    refresh_add_cost_ = 0;
  }
  group_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AnniversaryDailyTaskProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_final_prize;
        break;
      }

      // optional .app.message.PrizeProto final_prize = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_final_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_final_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_size;
        break;
      }

      // optional int32 size = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_size:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
          set_has_size();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_group;
        break;
      }

      // repeated int32 group = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_group:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_group())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_group())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_group;
        if (input->ExpectTag(48)) goto parse_refresh_cost;
        break;
      }

      // optional int32 refresh_cost = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_refresh_cost:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refresh_cost_)));
          set_has_refresh_cost();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_refresh_add_cost;
        break;
      }

      // optional int32 refresh_add_cost = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_refresh_add_cost:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refresh_add_cost_)));
          set_has_refresh_add_cost();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AnniversaryDailyTaskProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // optional .app.message.PrizeProto final_prize = 3;
  if (has_final_prize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->final_prize(), output);
  }

  // optional int32 size = 4;
  if (has_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->size(), output);
  }

  // repeated int32 group = 5;
  for (int i = 0; i < this->group_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->group(i), output);
  }

  // optional int32 refresh_cost = 6;
  if (has_refresh_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->refresh_cost(), output);
  }

  // optional int32 refresh_add_cost = 7;
  if (has_refresh_add_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->refresh_add_cost(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AnniversaryDailyTaskProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // optional .app.message.PrizeProto final_prize = 3;
  if (has_final_prize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->final_prize(), target);
  }

  // optional int32 size = 4;
  if (has_size()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->size(), target);
  }

  // repeated int32 group = 5;
  for (int i = 0; i < this->group_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->group(i), target);
  }

  // optional int32 refresh_cost = 6;
  if (has_refresh_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->refresh_cost(), target);
  }

  // optional int32 refresh_add_cost = 7;
  if (has_refresh_add_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->refresh_add_cost(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AnniversaryDailyTaskProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional .app.message.PrizeProto final_prize = 3;
    if (has_final_prize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->final_prize());
    }

    // optional int32 size = 4;
    if (has_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->size());
    }

    // optional int32 refresh_cost = 6;
    if (has_refresh_cost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->refresh_cost());
    }

    // optional int32 refresh_add_cost = 7;
    if (has_refresh_add_cost()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->refresh_add_cost());
    }

  }
  // repeated int32 group = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->group_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->group(i));
    }
    total_size += 1 * this->group_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AnniversaryDailyTaskProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AnniversaryDailyTaskProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AnniversaryDailyTaskProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AnniversaryDailyTaskProto::MergeFrom(const AnniversaryDailyTaskProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  group_.MergeFrom(from.group_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_final_prize()) {
      mutable_final_prize()->::app::message::PrizeProto::MergeFrom(from.final_prize());
    }
    if (from.has_size()) {
      set_size(from.size());
    }
    if (from.has_refresh_cost()) {
      set_refresh_cost(from.refresh_cost());
    }
    if (from.has_refresh_add_cost()) {
      set_refresh_add_cost(from.refresh_add_cost());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AnniversaryDailyTaskProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnniversaryDailyTaskProto::CopyFrom(const AnniversaryDailyTaskProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnniversaryDailyTaskProto::IsInitialized() const {

  return true;
}

void AnniversaryDailyTaskProto::Swap(AnniversaryDailyTaskProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    std::swap(final_prize_, other->final_prize_);
    std::swap(size_, other->size_);
    group_.Swap(&other->group_);
    std::swap(refresh_cost_, other->refresh_cost_);
    std::swap(refresh_add_cost_, other->refresh_add_cost_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AnniversaryDailyTaskProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AnniversaryDailyTaskProto_descriptor_;
  metadata.reflection = AnniversaryDailyTaskProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LoginPromotion2DatasProto::kStartTimeFieldNumber;
const int LoginPromotion2DatasProto::kEndTimeFieldNumber;
const int LoginPromotion2DatasProto::kDailyPrizeFieldNumber;
#endif  // !_MSC_VER

LoginPromotion2DatasProto::LoginPromotion2DatasProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void LoginPromotion2DatasProto::InitAsDefaultInstance() {
}

LoginPromotion2DatasProto::LoginPromotion2DatasProto(const LoginPromotion2DatasProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void LoginPromotion2DatasProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LoginPromotion2DatasProto::~LoginPromotion2DatasProto() {
  SharedDtor();
}

void LoginPromotion2DatasProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LoginPromotion2DatasProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginPromotion2DatasProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginPromotion2DatasProto_descriptor_;
}

const LoginPromotion2DatasProto& LoginPromotion2DatasProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

LoginPromotion2DatasProto* LoginPromotion2DatasProto::default_instance_ = NULL;

LoginPromotion2DatasProto* LoginPromotion2DatasProto::New() const {
  return new LoginPromotion2DatasProto;
}

void LoginPromotion2DatasProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
  }
  daily_prize_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LoginPromotion2DatasProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_daily_prize;
        break;
      }

      // repeated .app.message.LoginPromotion2DataProto daily_prize = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_daily_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_daily_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_daily_prize;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void LoginPromotion2DatasProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // repeated .app.message.LoginPromotion2DataProto daily_prize = 3;
  for (int i = 0; i < this->daily_prize_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->daily_prize(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* LoginPromotion2DatasProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // repeated .app.message.LoginPromotion2DataProto daily_prize = 3;
  for (int i = 0; i < this->daily_prize_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->daily_prize(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int LoginPromotion2DatasProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

  }
  // repeated .app.message.LoginPromotion2DataProto daily_prize = 3;
  total_size += 1 * this->daily_prize_size();
  for (int i = 0; i < this->daily_prize_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->daily_prize(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginPromotion2DatasProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LoginPromotion2DatasProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LoginPromotion2DatasProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LoginPromotion2DatasProto::MergeFrom(const LoginPromotion2DatasProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  daily_prize_.MergeFrom(from.daily_prize_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LoginPromotion2DatasProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginPromotion2DatasProto::CopyFrom(const LoginPromotion2DatasProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginPromotion2DatasProto::IsInitialized() const {

  return true;
}

void LoginPromotion2DatasProto::Swap(LoginPromotion2DatasProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    daily_prize_.Swap(&other->daily_prize_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LoginPromotion2DatasProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginPromotion2DatasProto_descriptor_;
  metadata.reflection = LoginPromotion2DatasProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LoginPromotion2DataProto::kGoodsFieldNumber;
#endif  // !_MSC_VER

LoginPromotion2DataProto::LoginPromotion2DataProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void LoginPromotion2DataProto::InitAsDefaultInstance() {
}

LoginPromotion2DataProto::LoginPromotion2DataProto(const LoginPromotion2DataProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void LoginPromotion2DataProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LoginPromotion2DataProto::~LoginPromotion2DataProto() {
  SharedDtor();
}

void LoginPromotion2DataProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LoginPromotion2DataProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginPromotion2DataProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginPromotion2DataProto_descriptor_;
}

const LoginPromotion2DataProto& LoginPromotion2DataProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

LoginPromotion2DataProto* LoginPromotion2DataProto::default_instance_ = NULL;

LoginPromotion2DataProto* LoginPromotion2DataProto::New() const {
  return new LoginPromotion2DataProto;
}

void LoginPromotion2DataProto::Clear() {
  goods_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LoginPromotion2DataProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .app.message.GoodsWrapperProto goods = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_goods:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_goods()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_goods;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void LoginPromotion2DataProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .app.message.GoodsWrapperProto goods = 1;
  for (int i = 0; i < this->goods_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->goods(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* LoginPromotion2DataProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .app.message.GoodsWrapperProto goods = 1;
  for (int i = 0; i < this->goods_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->goods(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int LoginPromotion2DataProto::ByteSize() const {
  int total_size = 0;

  // repeated .app.message.GoodsWrapperProto goods = 1;
  total_size += 1 * this->goods_size();
  for (int i = 0; i < this->goods_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->goods(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginPromotion2DataProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LoginPromotion2DataProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LoginPromotion2DataProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LoginPromotion2DataProto::MergeFrom(const LoginPromotion2DataProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  goods_.MergeFrom(from.goods_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LoginPromotion2DataProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginPromotion2DataProto::CopyFrom(const LoginPromotion2DataProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginPromotion2DataProto::IsInitialized() const {

  return true;
}

void LoginPromotion2DataProto::Swap(LoginPromotion2DataProto* other) {
  if (other != this) {
    goods_.Swap(&other->goods_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LoginPromotion2DataProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginPromotion2DataProto_descriptor_;
  metadata.reflection = LoginPromotion2DataProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MonthlyCardTaskProto::kIdFieldNumber;
const int MonthlyCardTaskProto::kTaskNameFieldNumber;
const int MonthlyCardTaskProto::kGoalTargetFieldNumber;
const int MonthlyCardTaskProto::kDescFieldNumber;
const int MonthlyCardTaskProto::kTypeFieldNumber;
#endif  // !_MSC_VER

MonthlyCardTaskProto::MonthlyCardTaskProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MonthlyCardTaskProto::InitAsDefaultInstance() {
}

MonthlyCardTaskProto::MonthlyCardTaskProto(const MonthlyCardTaskProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MonthlyCardTaskProto::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  task_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  goal_target_ = 0;
  desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MonthlyCardTaskProto::~MonthlyCardTaskProto() {
  SharedDtor();
}

void MonthlyCardTaskProto::SharedDtor() {
  if (task_name_ != &::google::protobuf::internal::kEmptyString) {
    delete task_name_;
  }
  if (desc_ != &::google::protobuf::internal::kEmptyString) {
    delete desc_;
  }
  if (this != default_instance_) {
  }
}

void MonthlyCardTaskProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MonthlyCardTaskProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MonthlyCardTaskProto_descriptor_;
}

const MonthlyCardTaskProto& MonthlyCardTaskProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

MonthlyCardTaskProto* MonthlyCardTaskProto::default_instance_ = NULL;

MonthlyCardTaskProto* MonthlyCardTaskProto::New() const {
  return new MonthlyCardTaskProto;
}

void MonthlyCardTaskProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    if (has_task_name()) {
      if (task_name_ != &::google::protobuf::internal::kEmptyString) {
        task_name_->clear();
      }
    }
    goal_target_ = 0;
    if (has_desc()) {
      if (desc_ != &::google::protobuf::internal::kEmptyString) {
        desc_->clear();
      }
    }
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MonthlyCardTaskProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_task_name;
        break;
      }

      // optional string task_name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_task_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_task_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->task_name().data(), this->task_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_goal_target;
        break;
      }

      // optional int32 goal_target = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_goal_target:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &goal_target_)));
          set_has_goal_target();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_desc;
        break;
      }

      // optional string desc = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_desc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->desc().data(), this->desc().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_type;
        break;
      }

      // optional int32 type = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MonthlyCardTaskProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string task_name = 2;
  if (has_task_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->task_name().data(), this->task_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->task_name(), output);
  }

  // optional int32 goal_target = 3;
  if (has_goal_target()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->goal_target(), output);
  }

  // optional string desc = 4;
  if (has_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->desc(), output);
  }

  // optional int32 type = 5;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MonthlyCardTaskProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string task_name = 2;
  if (has_task_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->task_name().data(), this->task_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->task_name(), target);
  }

  // optional int32 goal_target = 3;
  if (has_goal_target()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->goal_target(), target);
  }

  // optional string desc = 4;
  if (has_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->desc(), target);
  }

  // optional int32 type = 5;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MonthlyCardTaskProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional string task_name = 2;
    if (has_task_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->task_name());
    }

    // optional int32 goal_target = 3;
    if (has_goal_target()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->goal_target());
    }

    // optional string desc = 4;
    if (has_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->desc());
    }

    // optional int32 type = 5;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MonthlyCardTaskProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MonthlyCardTaskProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MonthlyCardTaskProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MonthlyCardTaskProto::MergeFrom(const MonthlyCardTaskProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_task_name()) {
      set_task_name(from.task_name());
    }
    if (from.has_goal_target()) {
      set_goal_target(from.goal_target());
    }
    if (from.has_desc()) {
      set_desc(from.desc());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MonthlyCardTaskProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MonthlyCardTaskProto::CopyFrom(const MonthlyCardTaskProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MonthlyCardTaskProto::IsInitialized() const {

  return true;
}

void MonthlyCardTaskProto::Swap(MonthlyCardTaskProto* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(task_name_, other->task_name_);
    std::swap(goal_target_, other->goal_target_);
    std::swap(desc_, other->desc_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MonthlyCardTaskProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MonthlyCardTaskProto_descriptor_;
  metadata.reflection = MonthlyCardTaskProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MonthlyCardPrizeProto::kStartTimeFieldNumber;
const int MonthlyCardPrizeProto::kEndTimeFieldNumber;
const int MonthlyCardPrizeProto::kVipLvFieldNumber;
const int MonthlyCardPrizeProto::kMutipleFieldNumber;
const int MonthlyCardPrizeProto::kDailyPrizeFieldNumber;
const int MonthlyCardPrizeProto::kTaskPrizeFieldNumber;
#endif  // !_MSC_VER

MonthlyCardPrizeProto::MonthlyCardPrizeProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MonthlyCardPrizeProto::InitAsDefaultInstance() {
  task_prize_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
}

MonthlyCardPrizeProto::MonthlyCardPrizeProto(const MonthlyCardPrizeProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MonthlyCardPrizeProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  task_prize_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MonthlyCardPrizeProto::~MonthlyCardPrizeProto() {
  SharedDtor();
}

void MonthlyCardPrizeProto::SharedDtor() {
  if (this != default_instance_) {
    delete task_prize_;
  }
}

void MonthlyCardPrizeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MonthlyCardPrizeProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MonthlyCardPrizeProto_descriptor_;
}

const MonthlyCardPrizeProto& MonthlyCardPrizeProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

MonthlyCardPrizeProto* MonthlyCardPrizeProto::default_instance_ = NULL;

MonthlyCardPrizeProto* MonthlyCardPrizeProto::New() const {
  return new MonthlyCardPrizeProto;
}

void MonthlyCardPrizeProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    if (has_task_prize()) {
      if (task_prize_ != NULL) task_prize_->::app::message::PrizeProto::Clear();
    }
  }
  vip_lv_.Clear();
  mutiple_.Clear();
  daily_prize_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MonthlyCardPrizeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_vip_lv;
        break;
      }

      // repeated int32 vip_lv = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vip_lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_vip_lv())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_vip_lv())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_vip_lv;
        if (input->ExpectTag(32)) goto parse_mutiple;
        break;
      }

      // repeated int32 mutiple = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_mutiple:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_mutiple())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_mutiple())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_mutiple;
        if (input->ExpectTag(42)) goto parse_daily_prize;
        break;
      }

      // repeated .app.message.GoodsWrapperProto daily_prize = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_daily_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_daily_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_daily_prize;
        if (input->ExpectTag(50)) goto parse_task_prize;
        break;
      }

      // optional .app.message.PrizeProto task_prize = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_task_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_task_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MonthlyCardPrizeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // repeated int32 vip_lv = 3;
  for (int i = 0; i < this->vip_lv_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->vip_lv(i), output);
  }

  // repeated int32 mutiple = 4;
  for (int i = 0; i < this->mutiple_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->mutiple(i), output);
  }

  // repeated .app.message.GoodsWrapperProto daily_prize = 5;
  for (int i = 0; i < this->daily_prize_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->daily_prize(i), output);
  }

  // optional .app.message.PrizeProto task_prize = 6;
  if (has_task_prize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->task_prize(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MonthlyCardPrizeProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // repeated int32 vip_lv = 3;
  for (int i = 0; i < this->vip_lv_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->vip_lv(i), target);
  }

  // repeated int32 mutiple = 4;
  for (int i = 0; i < this->mutiple_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->mutiple(i), target);
  }

  // repeated .app.message.GoodsWrapperProto daily_prize = 5;
  for (int i = 0; i < this->daily_prize_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->daily_prize(i), target);
  }

  // optional .app.message.PrizeProto task_prize = 6;
  if (has_task_prize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->task_prize(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MonthlyCardPrizeProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional .app.message.PrizeProto task_prize = 6;
    if (has_task_prize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->task_prize());
    }

  }
  // repeated int32 vip_lv = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->vip_lv_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->vip_lv(i));
    }
    total_size += 1 * this->vip_lv_size() + data_size;
  }

  // repeated int32 mutiple = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->mutiple_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->mutiple(i));
    }
    total_size += 1 * this->mutiple_size() + data_size;
  }

  // repeated .app.message.GoodsWrapperProto daily_prize = 5;
  total_size += 1 * this->daily_prize_size();
  for (int i = 0; i < this->daily_prize_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->daily_prize(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MonthlyCardPrizeProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MonthlyCardPrizeProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MonthlyCardPrizeProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MonthlyCardPrizeProto::MergeFrom(const MonthlyCardPrizeProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  vip_lv_.MergeFrom(from.vip_lv_);
  mutiple_.MergeFrom(from.mutiple_);
  daily_prize_.MergeFrom(from.daily_prize_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_task_prize()) {
      mutable_task_prize()->::app::message::PrizeProto::MergeFrom(from.task_prize());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MonthlyCardPrizeProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MonthlyCardPrizeProto::CopyFrom(const MonthlyCardPrizeProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MonthlyCardPrizeProto::IsInitialized() const {

  return true;
}

void MonthlyCardPrizeProto::Swap(MonthlyCardPrizeProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    vip_lv_.Swap(&other->vip_lv_);
    mutiple_.Swap(&other->mutiple_);
    daily_prize_.Swap(&other->daily_prize_);
    std::swap(task_prize_, other->task_prize_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MonthlyCardPrizeProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MonthlyCardPrizeProto_descriptor_;
  metadata.reflection = MonthlyCardPrizeProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DoublePrizeProto::kSingleFieldNumber;
#endif  // !_MSC_VER

DoublePrizeProto::DoublePrizeProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DoublePrizeProto::InitAsDefaultInstance() {
}

DoublePrizeProto::DoublePrizeProto(const DoublePrizeProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DoublePrizeProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DoublePrizeProto::~DoublePrizeProto() {
  SharedDtor();
}

void DoublePrizeProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DoublePrizeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DoublePrizeProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DoublePrizeProto_descriptor_;
}

const DoublePrizeProto& DoublePrizeProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

DoublePrizeProto* DoublePrizeProto::default_instance_ = NULL;

DoublePrizeProto* DoublePrizeProto::New() const {
  return new DoublePrizeProto;
}

void DoublePrizeProto::Clear() {
  single_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DoublePrizeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .app.message.SingleDoublePrizeProto single = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_single:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_single()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_single;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DoublePrizeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .app.message.SingleDoublePrizeProto single = 1;
  for (int i = 0; i < this->single_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->single(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DoublePrizeProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .app.message.SingleDoublePrizeProto single = 1;
  for (int i = 0; i < this->single_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->single(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DoublePrizeProto::ByteSize() const {
  int total_size = 0;

  // repeated .app.message.SingleDoublePrizeProto single = 1;
  total_size += 1 * this->single_size();
  for (int i = 0; i < this->single_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->single(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DoublePrizeProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DoublePrizeProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DoublePrizeProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DoublePrizeProto::MergeFrom(const DoublePrizeProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  single_.MergeFrom(from.single_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DoublePrizeProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DoublePrizeProto::CopyFrom(const DoublePrizeProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DoublePrizeProto::IsInitialized() const {

  return true;
}

void DoublePrizeProto::Swap(DoublePrizeProto* other) {
  if (other != this) {
    single_.Swap(&other->single_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DoublePrizeProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DoublePrizeProto_descriptor_;
  metadata.reflection = DoublePrizeProto_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* SingleDoublePrizeProto_DoublePrizeType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SingleDoublePrizeProto_DoublePrizeType_descriptor_;
}
bool SingleDoublePrizeProto_DoublePrizeType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const SingleDoublePrizeProto_DoublePrizeType SingleDoublePrizeProto::ZHONG_QIU;
const SingleDoublePrizeProto_DoublePrizeType SingleDoublePrizeProto::GUO_QING;
const SingleDoublePrizeProto_DoublePrizeType SingleDoublePrizeProto::DoublePrizeType_MIN;
const SingleDoublePrizeProto_DoublePrizeType SingleDoublePrizeProto::DoublePrizeType_MAX;
const int SingleDoublePrizeProto::DoublePrizeType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int SingleDoublePrizeProto::kStartTimeFieldNumber;
const int SingleDoublePrizeProto::kEndTimeFieldNumber;
const int SingleDoublePrizeProto::kTypeFieldNumber;
#endif  // !_MSC_VER

SingleDoublePrizeProto::SingleDoublePrizeProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SingleDoublePrizeProto::InitAsDefaultInstance() {
}

SingleDoublePrizeProto::SingleDoublePrizeProto(const SingleDoublePrizeProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SingleDoublePrizeProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  type_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SingleDoublePrizeProto::~SingleDoublePrizeProto() {
  SharedDtor();
}

void SingleDoublePrizeProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SingleDoublePrizeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SingleDoublePrizeProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SingleDoublePrizeProto_descriptor_;
}

const SingleDoublePrizeProto& SingleDoublePrizeProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

SingleDoublePrizeProto* SingleDoublePrizeProto::default_instance_ = NULL;

SingleDoublePrizeProto* SingleDoublePrizeProto::New() const {
  return new SingleDoublePrizeProto;
}

void SingleDoublePrizeProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    type_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SingleDoublePrizeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }

      // optional .app.message.SingleDoublePrizeProto.DoublePrizeType type = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::app::message::SingleDoublePrizeProto_DoublePrizeType_IsValid(value)) {
            set_type(static_cast< ::app::message::SingleDoublePrizeProto_DoublePrizeType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SingleDoublePrizeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // optional .app.message.SingleDoublePrizeProto.DoublePrizeType type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SingleDoublePrizeProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // optional .app.message.SingleDoublePrizeProto.DoublePrizeType type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SingleDoublePrizeProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional .app.message.SingleDoublePrizeProto.DoublePrizeType type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SingleDoublePrizeProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SingleDoublePrizeProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SingleDoublePrizeProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SingleDoublePrizeProto::MergeFrom(const SingleDoublePrizeProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SingleDoublePrizeProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SingleDoublePrizeProto::CopyFrom(const SingleDoublePrizeProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SingleDoublePrizeProto::IsInitialized() const {

  return true;
}

void SingleDoublePrizeProto::Swap(SingleDoublePrizeProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SingleDoublePrizeProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SingleDoublePrizeProto_descriptor_;
  metadata.reflection = SingleDoublePrizeProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GlobalMaxFightingAmountRankDataProto::kStartTimeFieldNumber;
const int GlobalMaxFightingAmountRankDataProto::kEndTimeFieldNumber;
const int GlobalMaxFightingAmountRankDataProto::kRankFieldNumber;
const int GlobalMaxFightingAmountRankDataProto::kPrizesFieldNumber;
#endif  // !_MSC_VER

GlobalMaxFightingAmountRankDataProto::GlobalMaxFightingAmountRankDataProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GlobalMaxFightingAmountRankDataProto::InitAsDefaultInstance() {
}

GlobalMaxFightingAmountRankDataProto::GlobalMaxFightingAmountRankDataProto(const GlobalMaxFightingAmountRankDataProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GlobalMaxFightingAmountRankDataProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GlobalMaxFightingAmountRankDataProto::~GlobalMaxFightingAmountRankDataProto() {
  SharedDtor();
}

void GlobalMaxFightingAmountRankDataProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GlobalMaxFightingAmountRankDataProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GlobalMaxFightingAmountRankDataProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GlobalMaxFightingAmountRankDataProto_descriptor_;
}

const GlobalMaxFightingAmountRankDataProto& GlobalMaxFightingAmountRankDataProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

GlobalMaxFightingAmountRankDataProto* GlobalMaxFightingAmountRankDataProto::default_instance_ = NULL;

GlobalMaxFightingAmountRankDataProto* GlobalMaxFightingAmountRankDataProto::New() const {
  return new GlobalMaxFightingAmountRankDataProto;
}

void GlobalMaxFightingAmountRankDataProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
  }
  rank_.Clear();
  prizes_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GlobalMaxFightingAmountRankDataProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_rank;
        break;
      }

      // repeated string rank = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rank:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_rank()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rank(this->rank_size() - 1).data(),
            this->rank(this->rank_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_rank;
        if (input->ExpectTag(34)) goto parse_prizes;
        break;
      }

      // repeated .app.message.PrizeProto prizes = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prizes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_prizes()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_prizes;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GlobalMaxFightingAmountRankDataProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // repeated string rank = 3;
  for (int i = 0; i < this->rank_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->rank(i).data(), this->rank(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->rank(i), output);
  }

  // repeated .app.message.PrizeProto prizes = 4;
  for (int i = 0; i < this->prizes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->prizes(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GlobalMaxFightingAmountRankDataProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // repeated string rank = 3;
  for (int i = 0; i < this->rank_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rank(i).data(), this->rank(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->rank(i), target);
  }

  // repeated .app.message.PrizeProto prizes = 4;
  for (int i = 0; i < this->prizes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->prizes(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GlobalMaxFightingAmountRankDataProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

  }
  // repeated string rank = 3;
  total_size += 1 * this->rank_size();
  for (int i = 0; i < this->rank_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->rank(i));
  }

  // repeated .app.message.PrizeProto prizes = 4;
  total_size += 1 * this->prizes_size();
  for (int i = 0; i < this->prizes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->prizes(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GlobalMaxFightingAmountRankDataProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GlobalMaxFightingAmountRankDataProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GlobalMaxFightingAmountRankDataProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GlobalMaxFightingAmountRankDataProto::MergeFrom(const GlobalMaxFightingAmountRankDataProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  rank_.MergeFrom(from.rank_);
  prizes_.MergeFrom(from.prizes_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GlobalMaxFightingAmountRankDataProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalMaxFightingAmountRankDataProto::CopyFrom(const GlobalMaxFightingAmountRankDataProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalMaxFightingAmountRankDataProto::IsInitialized() const {

  return true;
}

void GlobalMaxFightingAmountRankDataProto::Swap(GlobalMaxFightingAmountRankDataProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    rank_.Swap(&other->rank_);
    prizes_.Swap(&other->prizes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GlobalMaxFightingAmountRankDataProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GlobalMaxFightingAmountRankDataProto_descriptor_;
  metadata.reflection = GlobalMaxFightingAmountRankDataProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ComebackProto::kStartTimeFieldNumber;
const int ComebackProto::kEndTimeFieldNumber;
const int ComebackProto::kPrizeFieldNumber;
#endif  // !_MSC_VER

ComebackProto::ComebackProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ComebackProto::InitAsDefaultInstance() {
}

ComebackProto::ComebackProto(const ComebackProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ComebackProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ComebackProto::~ComebackProto() {
  SharedDtor();
}

void ComebackProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ComebackProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComebackProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ComebackProto_descriptor_;
}

const ComebackProto& ComebackProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

ComebackProto* ComebackProto::default_instance_ = NULL;

ComebackProto* ComebackProto::New() const {
  return new ComebackProto;
}

void ComebackProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
  }
  prize_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ComebackProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_prize;
        break;
      }

      // repeated .app.message.PrizeProto prize = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_prize;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ComebackProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // repeated .app.message.PrizeProto prize = 3;
  for (int i = 0; i < this->prize_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->prize(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ComebackProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // repeated .app.message.PrizeProto prize = 3;
  for (int i = 0; i < this->prize_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->prize(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ComebackProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

  }
  // repeated .app.message.PrizeProto prize = 3;
  total_size += 1 * this->prize_size();
  for (int i = 0; i < this->prize_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->prize(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComebackProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ComebackProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ComebackProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ComebackProto::MergeFrom(const ComebackProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  prize_.MergeFrom(from.prize_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ComebackProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComebackProto::CopyFrom(const ComebackProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComebackProto::IsInitialized() const {

  return true;
}

void ComebackProto::Swap(ComebackProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    prize_.Swap(&other->prize_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ComebackProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ComebackProto_descriptor_;
  metadata.reflection = ComebackProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DaDiShuRankProto::kSignleFieldNumber;
#endif  // !_MSC_VER

DaDiShuRankProto::DaDiShuRankProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DaDiShuRankProto::InitAsDefaultInstance() {
}

DaDiShuRankProto::DaDiShuRankProto(const DaDiShuRankProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DaDiShuRankProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DaDiShuRankProto::~DaDiShuRankProto() {
  SharedDtor();
}

void DaDiShuRankProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DaDiShuRankProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DaDiShuRankProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DaDiShuRankProto_descriptor_;
}

const DaDiShuRankProto& DaDiShuRankProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

DaDiShuRankProto* DaDiShuRankProto::default_instance_ = NULL;

DaDiShuRankProto* DaDiShuRankProto::New() const {
  return new DaDiShuRankProto;
}

void DaDiShuRankProto::Clear() {
  signle_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DaDiShuRankProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .app.message.SingleDaDiShuRankProto signle = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_signle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_signle()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_signle;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DaDiShuRankProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .app.message.SingleDaDiShuRankProto signle = 3;
  for (int i = 0; i < this->signle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->signle(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DaDiShuRankProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .app.message.SingleDaDiShuRankProto signle = 3;
  for (int i = 0; i < this->signle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->signle(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DaDiShuRankProto::ByteSize() const {
  int total_size = 0;

  // repeated .app.message.SingleDaDiShuRankProto signle = 3;
  total_size += 1 * this->signle_size();
  for (int i = 0; i < this->signle_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->signle(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DaDiShuRankProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DaDiShuRankProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DaDiShuRankProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DaDiShuRankProto::MergeFrom(const DaDiShuRankProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  signle_.MergeFrom(from.signle_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DaDiShuRankProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DaDiShuRankProto::CopyFrom(const DaDiShuRankProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DaDiShuRankProto::IsInitialized() const {

  return true;
}

void DaDiShuRankProto::Swap(DaDiShuRankProto* other) {
  if (other != this) {
    signle_.Swap(&other->signle_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DaDiShuRankProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DaDiShuRankProto_descriptor_;
  metadata.reflection = DaDiShuRankProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SingleDaDiShuRankProto::kBeginFieldNumber;
const int SingleDaDiShuRankProto::kEndFieldNumber;
const int SingleDaDiShuRankProto::kPrizeFieldNumber;
#endif  // !_MSC_VER

SingleDaDiShuRankProto::SingleDaDiShuRankProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SingleDaDiShuRankProto::InitAsDefaultInstance() {
  prize_ = const_cast< ::app::message::PrizeProto*>(&::app::message::PrizeProto::default_instance());
}

SingleDaDiShuRankProto::SingleDaDiShuRankProto(const SingleDaDiShuRankProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SingleDaDiShuRankProto::SharedCtor() {
  _cached_size_ = 0;
  begin_ = 0;
  end_ = 0;
  prize_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SingleDaDiShuRankProto::~SingleDaDiShuRankProto() {
  SharedDtor();
}

void SingleDaDiShuRankProto::SharedDtor() {
  if (this != default_instance_) {
    delete prize_;
  }
}

void SingleDaDiShuRankProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SingleDaDiShuRankProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SingleDaDiShuRankProto_descriptor_;
}

const SingleDaDiShuRankProto& SingleDaDiShuRankProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

SingleDaDiShuRankProto* SingleDaDiShuRankProto::default_instance_ = NULL;

SingleDaDiShuRankProto* SingleDaDiShuRankProto::New() const {
  return new SingleDaDiShuRankProto;
}

void SingleDaDiShuRankProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    begin_ = 0;
    end_ = 0;
    if (has_prize()) {
      if (prize_ != NULL) prize_->::app::message::PrizeProto::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SingleDaDiShuRankProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 begin = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &begin_)));
          set_has_begin();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end;
        break;
      }

      // optional int32 end = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &end_)));
          set_has_end();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_prize;
        break;
      }

      // optional .app.message.PrizeProto prize = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SingleDaDiShuRankProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 begin = 1;
  if (has_begin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->begin(), output);
  }

  // optional int32 end = 2;
  if (has_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->end(), output);
  }

  // optional .app.message.PrizeProto prize = 3;
  if (has_prize()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->prize(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SingleDaDiShuRankProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 begin = 1;
  if (has_begin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->begin(), target);
  }

  // optional int32 end = 2;
  if (has_end()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->end(), target);
  }

  // optional .app.message.PrizeProto prize = 3;
  if (has_prize()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->prize(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SingleDaDiShuRankProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 begin = 1;
    if (has_begin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->begin());
    }

    // optional int32 end = 2;
    if (has_end()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->end());
    }

    // optional .app.message.PrizeProto prize = 3;
    if (has_prize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->prize());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SingleDaDiShuRankProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SingleDaDiShuRankProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SingleDaDiShuRankProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SingleDaDiShuRankProto::MergeFrom(const SingleDaDiShuRankProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_begin()) {
      set_begin(from.begin());
    }
    if (from.has_end()) {
      set_end(from.end());
    }
    if (from.has_prize()) {
      mutable_prize()->::app::message::PrizeProto::MergeFrom(from.prize());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SingleDaDiShuRankProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SingleDaDiShuRankProto::CopyFrom(const SingleDaDiShuRankProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SingleDaDiShuRankProto::IsInitialized() const {

  return true;
}

void SingleDaDiShuRankProto::Swap(SingleDaDiShuRankProto* other) {
  if (other != this) {
    std::swap(begin_, other->begin_);
    std::swap(end_, other->end_);
    std::swap(prize_, other->prize_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SingleDaDiShuRankProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SingleDaDiShuRankProto_descriptor_;
  metadata.reflection = SingleDaDiShuRankProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DaDiShuCreditsShopDatasProto::kStartTimeFieldNumber;
const int DaDiShuCreditsShopDatasProto::kEndTimeFieldNumber;
const int DaDiShuCreditsShopDatasProto::kDataFieldNumber;
#endif  // !_MSC_VER

DaDiShuCreditsShopDatasProto::DaDiShuCreditsShopDatasProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DaDiShuCreditsShopDatasProto::InitAsDefaultInstance() {
}

DaDiShuCreditsShopDatasProto::DaDiShuCreditsShopDatasProto(const DaDiShuCreditsShopDatasProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DaDiShuCreditsShopDatasProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DaDiShuCreditsShopDatasProto::~DaDiShuCreditsShopDatasProto() {
  SharedDtor();
}

void DaDiShuCreditsShopDatasProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DaDiShuCreditsShopDatasProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DaDiShuCreditsShopDatasProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DaDiShuCreditsShopDatasProto_descriptor_;
}

const DaDiShuCreditsShopDatasProto& DaDiShuCreditsShopDatasProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

DaDiShuCreditsShopDatasProto* DaDiShuCreditsShopDatasProto::default_instance_ = NULL;

DaDiShuCreditsShopDatasProto* DaDiShuCreditsShopDatasProto::New() const {
  return new DaDiShuCreditsShopDatasProto;
}

void DaDiShuCreditsShopDatasProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
  }
  data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DaDiShuCreditsShopDatasProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_data;
        break;
      }

      // repeated .app.message.DaDiShuCreditsShopDataProto data = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DaDiShuCreditsShopDatasProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // repeated .app.message.DaDiShuCreditsShopDataProto data = 3;
  for (int i = 0; i < this->data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DaDiShuCreditsShopDatasProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // repeated .app.message.DaDiShuCreditsShopDataProto data = 3;
  for (int i = 0; i < this->data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DaDiShuCreditsShopDatasProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

  }
  // repeated .app.message.DaDiShuCreditsShopDataProto data = 3;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DaDiShuCreditsShopDatasProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DaDiShuCreditsShopDatasProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DaDiShuCreditsShopDatasProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DaDiShuCreditsShopDatasProto::MergeFrom(const DaDiShuCreditsShopDatasProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  data_.MergeFrom(from.data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DaDiShuCreditsShopDatasProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DaDiShuCreditsShopDatasProto::CopyFrom(const DaDiShuCreditsShopDatasProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DaDiShuCreditsShopDatasProto::IsInitialized() const {

  return true;
}

void DaDiShuCreditsShopDatasProto::Swap(DaDiShuCreditsShopDatasProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    data_.Swap(&other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DaDiShuCreditsShopDatasProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DaDiShuCreditsShopDatasProto_descriptor_;
  metadata.reflection = DaDiShuCreditsShopDatasProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DaDiShuCreditsShopDataProto::kGoodsFieldNumber;
const int DaDiShuCreditsShopDataProto::kSaleStartTimeFieldNumber;
const int DaDiShuCreditsShopDataProto::kSaleEndTimeFieldNumber;
const int DaDiShuCreditsShopDataProto::kCreditsFieldNumber;
const int DaDiShuCreditsShopDataProto::kCreditsDiscountFieldNumber;
const int DaDiShuCreditsShopDataProto::kMaxExchangeFieldNumber;
const int DaDiShuCreditsShopDataProto::kYuanbaoFieldNumber;
const int DaDiShuCreditsShopDataProto::kYuanbaoDiscountFieldNumber;
#endif  // !_MSC_VER

DaDiShuCreditsShopDataProto::DaDiShuCreditsShopDataProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DaDiShuCreditsShopDataProto::InitAsDefaultInstance() {
  goods_ = const_cast< ::app::message::GoodsWrapperProto*>(&::app::message::GoodsWrapperProto::default_instance());
}

DaDiShuCreditsShopDataProto::DaDiShuCreditsShopDataProto(const DaDiShuCreditsShopDataProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DaDiShuCreditsShopDataProto::SharedCtor() {
  _cached_size_ = 0;
  goods_ = NULL;
  sale_start_time_ = 0;
  sale_end_time_ = 0;
  credits_ = 0;
  credits_discount_ = 0;
  max_exchange_ = 0;
  yuanbao_ = 0;
  yuanbao_discount_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DaDiShuCreditsShopDataProto::~DaDiShuCreditsShopDataProto() {
  SharedDtor();
}

void DaDiShuCreditsShopDataProto::SharedDtor() {
  if (this != default_instance_) {
    delete goods_;
  }
}

void DaDiShuCreditsShopDataProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DaDiShuCreditsShopDataProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DaDiShuCreditsShopDataProto_descriptor_;
}

const DaDiShuCreditsShopDataProto& DaDiShuCreditsShopDataProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

DaDiShuCreditsShopDataProto* DaDiShuCreditsShopDataProto::default_instance_ = NULL;

DaDiShuCreditsShopDataProto* DaDiShuCreditsShopDataProto::New() const {
  return new DaDiShuCreditsShopDataProto;
}

void DaDiShuCreditsShopDataProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_goods()) {
      if (goods_ != NULL) goods_->::app::message::GoodsWrapperProto::Clear();
    }
    sale_start_time_ = 0;
    sale_end_time_ = 0;
    credits_ = 0;
    credits_discount_ = 0;
    max_exchange_ = 0;
    yuanbao_ = 0;
    yuanbao_discount_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DaDiShuCreditsShopDataProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .app.message.GoodsWrapperProto goods = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_goods()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_sale_start_time;
        break;
      }

      // optional int32 sale_start_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sale_start_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sale_start_time_)));
          set_has_sale_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_sale_end_time;
        break;
      }

      // optional int32 sale_end_time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sale_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sale_end_time_)));
          set_has_sale_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_credits;
        break;
      }

      // optional int32 credits = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_credits:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &credits_)));
          set_has_credits();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_credits_discount;
        break;
      }

      // optional int32 credits_discount = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_credits_discount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &credits_discount_)));
          set_has_credits_discount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_max_exchange;
        break;
      }

      // optional int32 max_exchange = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_max_exchange:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_exchange_)));
          set_has_max_exchange();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_yuanbao;
        break;
      }

      // optional int32 yuanbao = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_yuanbao:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yuanbao_)));
          set_has_yuanbao();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_yuanbao_discount;
        break;
      }

      // optional int32 yuanbao_discount = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_yuanbao_discount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yuanbao_discount_)));
          set_has_yuanbao_discount();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DaDiShuCreditsShopDataProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .app.message.GoodsWrapperProto goods = 1;
  if (has_goods()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->goods(), output);
  }

  // optional int32 sale_start_time = 2;
  if (has_sale_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sale_start_time(), output);
  }

  // optional int32 sale_end_time = 3;
  if (has_sale_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->sale_end_time(), output);
  }

  // optional int32 credits = 4;
  if (has_credits()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->credits(), output);
  }

  // optional int32 credits_discount = 5;
  if (has_credits_discount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->credits_discount(), output);
  }

  // optional int32 max_exchange = 6;
  if (has_max_exchange()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->max_exchange(), output);
  }

  // optional int32 yuanbao = 7;
  if (has_yuanbao()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->yuanbao(), output);
  }

  // optional int32 yuanbao_discount = 8;
  if (has_yuanbao_discount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->yuanbao_discount(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DaDiShuCreditsShopDataProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .app.message.GoodsWrapperProto goods = 1;
  if (has_goods()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->goods(), target);
  }

  // optional int32 sale_start_time = 2;
  if (has_sale_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sale_start_time(), target);
  }

  // optional int32 sale_end_time = 3;
  if (has_sale_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->sale_end_time(), target);
  }

  // optional int32 credits = 4;
  if (has_credits()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->credits(), target);
  }

  // optional int32 credits_discount = 5;
  if (has_credits_discount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->credits_discount(), target);
  }

  // optional int32 max_exchange = 6;
  if (has_max_exchange()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->max_exchange(), target);
  }

  // optional int32 yuanbao = 7;
  if (has_yuanbao()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->yuanbao(), target);
  }

  // optional int32 yuanbao_discount = 8;
  if (has_yuanbao_discount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->yuanbao_discount(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DaDiShuCreditsShopDataProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .app.message.GoodsWrapperProto goods = 1;
    if (has_goods()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->goods());
    }

    // optional int32 sale_start_time = 2;
    if (has_sale_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sale_start_time());
    }

    // optional int32 sale_end_time = 3;
    if (has_sale_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sale_end_time());
    }

    // optional int32 credits = 4;
    if (has_credits()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->credits());
    }

    // optional int32 credits_discount = 5;
    if (has_credits_discount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->credits_discount());
    }

    // optional int32 max_exchange = 6;
    if (has_max_exchange()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_exchange());
    }

    // optional int32 yuanbao = 7;
    if (has_yuanbao()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->yuanbao());
    }

    // optional int32 yuanbao_discount = 8;
    if (has_yuanbao_discount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->yuanbao_discount());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DaDiShuCreditsShopDataProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DaDiShuCreditsShopDataProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DaDiShuCreditsShopDataProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DaDiShuCreditsShopDataProto::MergeFrom(const DaDiShuCreditsShopDataProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_goods()) {
      mutable_goods()->::app::message::GoodsWrapperProto::MergeFrom(from.goods());
    }
    if (from.has_sale_start_time()) {
      set_sale_start_time(from.sale_start_time());
    }
    if (from.has_sale_end_time()) {
      set_sale_end_time(from.sale_end_time());
    }
    if (from.has_credits()) {
      set_credits(from.credits());
    }
    if (from.has_credits_discount()) {
      set_credits_discount(from.credits_discount());
    }
    if (from.has_max_exchange()) {
      set_max_exchange(from.max_exchange());
    }
    if (from.has_yuanbao()) {
      set_yuanbao(from.yuanbao());
    }
    if (from.has_yuanbao_discount()) {
      set_yuanbao_discount(from.yuanbao_discount());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DaDiShuCreditsShopDataProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DaDiShuCreditsShopDataProto::CopyFrom(const DaDiShuCreditsShopDataProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DaDiShuCreditsShopDataProto::IsInitialized() const {

  return true;
}

void DaDiShuCreditsShopDataProto::Swap(DaDiShuCreditsShopDataProto* other) {
  if (other != this) {
    std::swap(goods_, other->goods_);
    std::swap(sale_start_time_, other->sale_start_time_);
    std::swap(sale_end_time_, other->sale_end_time_);
    std::swap(credits_, other->credits_);
    std::swap(credits_discount_, other->credits_discount_);
    std::swap(max_exchange_, other->max_exchange_);
    std::swap(yuanbao_, other->yuanbao_);
    std::swap(yuanbao_discount_, other->yuanbao_discount_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DaDiShuCreditsShopDataProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DaDiShuCreditsShopDataProto_descriptor_;
  metadata.reflection = DaDiShuCreditsShopDataProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SysHongBaoDatasProto::kStartTimeFieldNumber;
const int SysHongBaoDatasProto::kEndTimeFieldNumber;
const int SysHongBaoDatasProto::kCollectTimeFieldNumber;
const int SysHongBaoDatasProto::kRecycalTimeFieldNumber;
const int SysHongBaoDatasProto::kOpenLvFieldNumber;
#endif  // !_MSC_VER

SysHongBaoDatasProto::SysHongBaoDatasProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SysHongBaoDatasProto::InitAsDefaultInstance() {
}

SysHongBaoDatasProto::SysHongBaoDatasProto(const SysHongBaoDatasProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SysHongBaoDatasProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  open_lv_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SysHongBaoDatasProto::~SysHongBaoDatasProto() {
  SharedDtor();
}

void SysHongBaoDatasProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SysHongBaoDatasProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SysHongBaoDatasProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SysHongBaoDatasProto_descriptor_;
}

const SysHongBaoDatasProto& SysHongBaoDatasProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

SysHongBaoDatasProto* SysHongBaoDatasProto::default_instance_ = NULL;

SysHongBaoDatasProto* SysHongBaoDatasProto::New() const {
  return new SysHongBaoDatasProto;
}

void SysHongBaoDatasProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    open_lv_ = 0;
  }
  collect_time_.Clear();
  recycal_time_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SysHongBaoDatasProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_collect_time;
        break;
      }

      // repeated int64 collect_time = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_collect_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 32, input, this->mutable_collect_time())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_collect_time())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_collect_time;
        if (input->ExpectTag(40)) goto parse_recycal_time;
        break;
      }

      // repeated int64 recycal_time = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_recycal_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 40, input, this->mutable_recycal_time())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_recycal_time())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_recycal_time;
        if (input->ExpectTag(48)) goto parse_open_lv;
        break;
      }

      // optional int32 open_lv = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_open_lv:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &open_lv_)));
          set_has_open_lv();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SysHongBaoDatasProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // repeated int64 collect_time = 4;
  for (int i = 0; i < this->collect_time_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      4, this->collect_time(i), output);
  }

  // repeated int64 recycal_time = 5;
  for (int i = 0; i < this->recycal_time_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      5, this->recycal_time(i), output);
  }

  // optional int32 open_lv = 6;
  if (has_open_lv()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->open_lv(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SysHongBaoDatasProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // repeated int64 collect_time = 4;
  for (int i = 0; i < this->collect_time_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(4, this->collect_time(i), target);
  }

  // repeated int64 recycal_time = 5;
  for (int i = 0; i < this->recycal_time_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(5, this->recycal_time(i), target);
  }

  // optional int32 open_lv = 6;
  if (has_open_lv()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->open_lv(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SysHongBaoDatasProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional int32 open_lv = 6;
    if (has_open_lv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->open_lv());
    }

  }
  // repeated int64 collect_time = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->collect_time_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->collect_time(i));
    }
    total_size += 1 * this->collect_time_size() + data_size;
  }

  // repeated int64 recycal_time = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->recycal_time_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->recycal_time(i));
    }
    total_size += 1 * this->recycal_time_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SysHongBaoDatasProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SysHongBaoDatasProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SysHongBaoDatasProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SysHongBaoDatasProto::MergeFrom(const SysHongBaoDatasProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  collect_time_.MergeFrom(from.collect_time_);
  recycal_time_.MergeFrom(from.recycal_time_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_open_lv()) {
      set_open_lv(from.open_lv());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SysHongBaoDatasProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SysHongBaoDatasProto::CopyFrom(const SysHongBaoDatasProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SysHongBaoDatasProto::IsInitialized() const {

  return true;
}

void SysHongBaoDatasProto::Swap(SysHongBaoDatasProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    collect_time_.Swap(&other->collect_time_);
    recycal_time_.Swap(&other->recycal_time_);
    std::swap(open_lv_, other->open_lv_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SysHongBaoDatasProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SysHongBaoDatasProto_descriptor_;
  metadata.reflection = SysHongBaoDatasProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ChouJiangFanLiProto::kStartTimeFieldNumber;
const int ChouJiangFanLiProto::kEndTimeFieldNumber;
const int ChouJiangFanLiProto::kPercentFieldNumber;
const int ChouJiangFanLiProto::kYuanbaoFieldNumber;
const int ChouJiangFanLiProto::kChipFieldNumber;
const int ChouJiangFanLiProto::kDrawLimitationFieldNumber;
#endif  // !_MSC_VER

ChouJiangFanLiProto::ChouJiangFanLiProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ChouJiangFanLiProto::InitAsDefaultInstance() {
}

ChouJiangFanLiProto::ChouJiangFanLiProto(const ChouJiangFanLiProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ChouJiangFanLiProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  draw_limitation_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ChouJiangFanLiProto::~ChouJiangFanLiProto() {
  SharedDtor();
}

void ChouJiangFanLiProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ChouJiangFanLiProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChouJiangFanLiProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChouJiangFanLiProto_descriptor_;
}

const ChouJiangFanLiProto& ChouJiangFanLiProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_promotion_2eproto();
  return *default_instance_;
}

ChouJiangFanLiProto* ChouJiangFanLiProto::default_instance_ = NULL;

ChouJiangFanLiProto* ChouJiangFanLiProto::New() const {
  return new ChouJiangFanLiProto;
}

void ChouJiangFanLiProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    draw_limitation_ = 0;
  }
  percent_.Clear();
  yuanbao_.Clear();
  chip_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ChouJiangFanLiProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_percent;
        break;
      }

      // repeated int32 percent = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_percent:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_percent())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_percent())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_percent;
        if (input->ExpectTag(32)) goto parse_yuanbao;
        break;
      }

      // repeated int32 yuanbao = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_yuanbao:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_yuanbao())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_yuanbao())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_yuanbao;
        if (input->ExpectTag(40)) goto parse_chip;
        break;
      }

      // repeated int32 chip = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_chip:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_chip())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_chip())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_chip;
        if (input->ExpectTag(48)) goto parse_draw_limitation;
        break;
      }

      // optional int32 draw_limitation = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_draw_limitation:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &draw_limitation_)));
          set_has_draw_limitation();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ChouJiangFanLiProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // repeated int32 percent = 3;
  for (int i = 0; i < this->percent_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->percent(i), output);
  }

  // repeated int32 yuanbao = 4;
  for (int i = 0; i < this->yuanbao_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->yuanbao(i), output);
  }

  // repeated int32 chip = 5;
  for (int i = 0; i < this->chip_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->chip(i), output);
  }

  // optional int32 draw_limitation = 6;
  if (has_draw_limitation()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->draw_limitation(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ChouJiangFanLiProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // repeated int32 percent = 3;
  for (int i = 0; i < this->percent_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->percent(i), target);
  }

  // repeated int32 yuanbao = 4;
  for (int i = 0; i < this->yuanbao_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->yuanbao(i), target);
  }

  // repeated int32 chip = 5;
  for (int i = 0; i < this->chip_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->chip(i), target);
  }

  // optional int32 draw_limitation = 6;
  if (has_draw_limitation()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->draw_limitation(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ChouJiangFanLiProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional int32 draw_limitation = 6;
    if (has_draw_limitation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->draw_limitation());
    }

  }
  // repeated int32 percent = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->percent_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->percent(i));
    }
    total_size += 1 * this->percent_size() + data_size;
  }

  // repeated int32 yuanbao = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->yuanbao_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->yuanbao(i));
    }
    total_size += 1 * this->yuanbao_size() + data_size;
  }

  // repeated int32 chip = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->chip_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->chip(i));
    }
    total_size += 1 * this->chip_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChouJiangFanLiProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ChouJiangFanLiProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ChouJiangFanLiProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ChouJiangFanLiProto::MergeFrom(const ChouJiangFanLiProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  percent_.MergeFrom(from.percent_);
  yuanbao_.MergeFrom(from.yuanbao_);
  chip_.MergeFrom(from.chip_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_draw_limitation()) {
      set_draw_limitation(from.draw_limitation());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ChouJiangFanLiProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChouJiangFanLiProto::CopyFrom(const ChouJiangFanLiProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChouJiangFanLiProto::IsInitialized() const {

  return true;
}

void ChouJiangFanLiProto::Swap(ChouJiangFanLiProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    percent_.Swap(&other->percent_);
    yuanbao_.Swap(&other->yuanbao_);
    chip_.Swap(&other->chip_);
    std::swap(draw_limitation_, other->draw_limitation_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ChouJiangFanLiProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChouJiangFanLiProto_descriptor_;
  metadata.reflection = ChouJiangFanLiProto_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace app

// @@protoc_insertion_point(global_scope)
