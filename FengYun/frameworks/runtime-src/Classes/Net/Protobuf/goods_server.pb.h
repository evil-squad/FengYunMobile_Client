// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: goods_server.proto

#ifndef PROTOBUF_goods_5fserver_2eproto__INCLUDED
#define PROTOBUF_goods_5fserver_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "spritestat.pb.h"
// @@protoc_insertion_point(includes)

namespace app {
namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_goods_5fserver_2eproto();
void protobuf_AssignDesc_goods_5fserver_2eproto();
void protobuf_ShutdownFile_goods_5fserver_2eproto();

class GoodsServerProto;
class EquipmentServerProto;
class EquipmentBaoShiServerProto;
class MountEquipmentServerProto;
class ShieldEquipmentServerProto;
class PetEquipmentServerProto;
class BaoShiServerProto;

enum GoodsType {
  EQUIPMENT = 1,
  MEDICINE = 2,
  GEM = 3,
  TRANSPORTATION = 4,
  TASK_BOOK = 5,
  SPELL_BOOK = 6,
  PACKAGE = 7,
  SCRIPT = 8,
  PANEL = 9,
  NORMAL = 10,
  TASK = 11,
  MATERIAL = 12,
  MOUNT_EQUIPMENT = 13,
  XINFA = 14,
  YUANBAO_PACKAGE = 15,
  LEGEND_CARD = 16,
  CRIT_CARD = 17,
  REFINED_STAT = 18,
  BLESS = 19,
  PET_EQUIPMENT = 20,
  DAILY_CARD = 21,
  JIN_JIE_DAN = 22,
  JIN_JIE_LUCKY_CARD = 23,
  MARRIAGE_GIFT = 24,
  MULTI_PRIZE_ON_LIMITED_TIME_GOODS = 25,
  FULI_CARD = 26,
  CHRISTMAS = 27,
  SHIELD_EQUIPMENT = 28,
  QIAN_NENG_HUAN_HUA_LIMIT_UP = 29,
  MONTHLY_CARD_ACTIVE = 30,
  BAO_SHI = 31,
  PET_TONG_LING_GIFT_SPELL_EXP_GOODS = 32,
  EXP_GOODS = 50,
  MONEY_GOODS = 51,
  REAL_AIR_GOODS = 52,
  LIJIN_GOODS = 53,
  YUANBAO_GOODS = 54,
  SUPER_WEAPON_GEM = 55,
  BIANPAO_GOODS = 56,
  NI_DAO_QIAN_KUN = 57,
  FIREWORK = 58,
  CAKE = 59,
  LING_GUANG = 61,
  CHOU_JIANG_FAN_LI_CHIPS = 62,
  SPECIAL = 99,
  UPGRADE = 120
};
bool GoodsType_IsValid(int value);
const GoodsType GoodsType_MIN = EQUIPMENT;
const GoodsType GoodsType_MAX = UPGRADE;
const int GoodsType_ARRAYSIZE = GoodsType_MAX + 1;

const ::google::protobuf::EnumDescriptor* GoodsType_descriptor();
inline const ::std::string& GoodsType_Name(GoodsType value) {
  return ::google::protobuf::internal::NameOfEnum(
    GoodsType_descriptor(), value);
}
inline bool GoodsType_Parse(
    const ::std::string& name, GoodsType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GoodsType>(
    GoodsType_descriptor(), name, value);
}
enum Quality {
  WHITE = 0,
  GREEN = 1,
  BLUE = 2,
  PURPLE = 3,
  ORANGE = 4,
  RED = 5,
  GOLDEN = 6
};
bool Quality_IsValid(int value);
const Quality Quality_MIN = WHITE;
const Quality Quality_MAX = GOLDEN;
const int Quality_ARRAYSIZE = Quality_MAX + 1;

const ::google::protobuf::EnumDescriptor* Quality_descriptor();
inline const ::std::string& Quality_Name(Quality value) {
  return ::google::protobuf::internal::NameOfEnum(
    Quality_descriptor(), value);
}
inline bool Quality_Parse(
    const ::std::string& name, Quality* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Quality>(
    Quality_descriptor(), name, value);
}
enum MedicineEfficacy {
  LIFE = 1,
  BUFF = 2,
  PK_AMOUNT = 3,
  EXP = 5,
  REAL_AIR = 6,
  ADD_MONEY = 7,
  ADD_LIJIN = 8,
  GUILD_LILIAN = 9,
  GUILD_CONTRIBUTION = 10,
  STAMINA = 11,
  JUMP_SHIELD = 12,
  ADD_LEVEL = 21,
  ADD_STAT = 22,
  ADD_SPELL_LEVEL_LIMIT = 23,
  ADD_EXP_NEXT_LEVEL = 24,
  ADD_PET_STAT = 25,
  UPGRADE_CLOAK_SMALL_LEVEL = 26,
  UPGRADE_DEMON_SMALL_LEVEL = 27,
  PET_MEIRENZHIXIN = 28
};
bool MedicineEfficacy_IsValid(int value);
const MedicineEfficacy MedicineEfficacy_MIN = LIFE;
const MedicineEfficacy MedicineEfficacy_MAX = PET_MEIRENZHIXIN;
const int MedicineEfficacy_ARRAYSIZE = MedicineEfficacy_MAX + 1;

const ::google::protobuf::EnumDescriptor* MedicineEfficacy_descriptor();
inline const ::std::string& MedicineEfficacy_Name(MedicineEfficacy value) {
  return ::google::protobuf::internal::NameOfEnum(
    MedicineEfficacy_descriptor(), value);
}
inline bool MedicineEfficacy_Parse(
    const ::std::string& name, MedicineEfficacy* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MedicineEfficacy>(
    MedicineEfficacy_descriptor(), name, value);
}
// ===================================================================

class GoodsServerProto : public ::google::protobuf::Message {
 public:
  GoodsServerProto();
  virtual ~GoodsServerProto();

  GoodsServerProto(const GoodsServerProto& from);

  inline GoodsServerProto& operator=(const GoodsServerProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GoodsServerProto& default_instance();

  void Swap(GoodsServerProto* other);

  // implements Message ----------------------------------------------

  GoodsServerProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GoodsServerProto& from);
  void MergeFrom(const GoodsServerProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional int32 type = 2 [deprecated = true];
  inline bool has_type() const PROTOBUF_DEPRECATED;
  inline void clear_type() PROTOBUF_DEPRECATED;
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const PROTOBUF_DEPRECATED;
  inline void set_type(::google::protobuf::int32 value) PROTOBUF_DEPRECATED;

  // optional int32 count = 3;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 3;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // optional bool binded = 4;
  inline bool has_binded() const;
  inline void clear_binded();
  static const int kBindedFieldNumber = 4;
  inline bool binded() const;
  inline void set_binded(bool value);

  // optional int64 expire_time = 5;
  inline bool has_expire_time() const;
  inline void clear_expire_time();
  static const int kExpireTimeFieldNumber = 5;
  inline ::google::protobuf::int64 expire_time() const;
  inline void set_expire_time(::google::protobuf::int64 value);

  // optional int64 can_use_time = 6;
  inline bool has_can_use_time() const;
  inline void clear_can_use_time();
  static const int kCanUseTimeFieldNumber = 6;
  inline ::google::protobuf::int64 can_use_time() const;
  inline void set_can_use_time(::google::protobuf::int64 value);

  GOOGLE_PROTOBUF_EXTENSION_ACCESSORS(GoodsServerProto)
  // @@protoc_insertion_point(class_scope:app.message.GoodsServerProto)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_binded();
  inline void clear_has_binded();
  inline void set_has_expire_time();
  inline void clear_has_expire_time();
  inline void set_has_can_use_time();
  inline void clear_has_can_use_time();

  ::google::protobuf::internal::ExtensionSet _extensions_;

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 count_;
  bool binded_;
  ::google::protobuf::int64 expire_time_;
  ::google::protobuf::int64 can_use_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_goods_5fserver_2eproto();
  friend void protobuf_AssignDesc_goods_5fserver_2eproto();
  friend void protobuf_ShutdownFile_goods_5fserver_2eproto();

  void InitAsDefaultInstance();
  static GoodsServerProto* default_instance_;
};
// -------------------------------------------------------------------

class EquipmentServerProto : public ::google::protobuf::Message {
 public:
  EquipmentServerProto();
  virtual ~EquipmentServerProto();

  EquipmentServerProto(const EquipmentServerProto& from);

  inline EquipmentServerProto& operator=(const EquipmentServerProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipmentServerProto& default_instance();

  void Swap(EquipmentServerProto* other);

  // implements Message ----------------------------------------------

  EquipmentServerProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipmentServerProto& from);
  void MergeFrom(const EquipmentServerProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 refined_times = 1;
  inline bool has_refined_times() const;
  inline void clear_refined_times();
  static const int kRefinedTimesFieldNumber = 1;
  inline ::google::protobuf::int32 refined_times() const;
  inline void set_refined_times(::google::protobuf::int32 value);

  // optional int32 refined_upgrade_times = 5;
  inline bool has_refined_upgrade_times() const;
  inline void clear_refined_upgrade_times();
  static const int kRefinedUpgradeTimesFieldNumber = 5;
  inline ::google::protobuf::int32 refined_upgrade_times() const;
  inline void set_refined_upgrade_times(::google::protobuf::int32 value);

  // optional int32 quality = 7;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 7;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // optional int32 added_stat_type = 8;
  inline bool has_added_stat_type() const;
  inline void clear_added_stat_type();
  static const int kAddedStatTypeFieldNumber = 8;
  inline ::google::protobuf::int32 added_stat_type() const;
  inline void set_added_stat_type(::google::protobuf::int32 value);

  // optional bool is_unmeltable = 9;
  inline bool has_is_unmeltable() const;
  inline void clear_is_unmeltable();
  static const int kIsUnmeltableFieldNumber = 9;
  inline bool is_unmeltable() const;
  inline void set_is_unmeltable(bool value);

  // optional int32 ti_pin_val = 10;
  inline bool has_ti_pin_val() const;
  inline void clear_ti_pin_val();
  static const int kTiPinValFieldNumber = 10;
  inline ::google::protobuf::int32 ti_pin_val() const;
  inline void set_ti_pin_val(::google::protobuf::int32 value);

  // repeated .app.message.SingleStatProto xun_zhang_random_stats = 11;
  inline int xun_zhang_random_stats_size() const;
  inline void clear_xun_zhang_random_stats();
  static const int kXunZhangRandomStatsFieldNumber = 11;
  inline const ::app::message::SingleStatProto& xun_zhang_random_stats(int index) const;
  inline ::app::message::SingleStatProto* mutable_xun_zhang_random_stats(int index);
  inline ::app::message::SingleStatProto* add_xun_zhang_random_stats();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::SingleStatProto >&
      xun_zhang_random_stats() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::SingleStatProto >*
      mutable_xun_zhang_random_stats();

  // repeated .app.message.SingleStatProto fashion_random_stats = 12;
  inline int fashion_random_stats_size() const;
  inline void clear_fashion_random_stats();
  static const int kFashionRandomStatsFieldNumber = 12;
  inline const ::app::message::SingleStatProto& fashion_random_stats(int index) const;
  inline ::app::message::SingleStatProto* mutable_fashion_random_stats(int index);
  inline ::app::message::SingleStatProto* add_fashion_random_stats();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::SingleStatProto >&
      fashion_random_stats() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::SingleStatProto >*
      mutable_fashion_random_stats();

  // optional int64 fashion_expire_time = 13;
  inline bool has_fashion_expire_time() const;
  inline void clear_fashion_expire_time();
  static const int kFashionExpireTimeFieldNumber = 13;
  inline ::google::protobuf::int64 fashion_expire_time() const;
  inline void set_fashion_expire_time(::google::protobuf::int64 value);

  // repeated .app.message.EquipmentBaoShiServerProto bao_shis = 14;
  inline int bao_shis_size() const;
  inline void clear_bao_shis();
  static const int kBaoShisFieldNumber = 14;
  inline const ::app::message::EquipmentBaoShiServerProto& bao_shis(int index) const;
  inline ::app::message::EquipmentBaoShiServerProto* mutable_bao_shis(int index);
  inline ::app::message::EquipmentBaoShiServerProto* add_bao_shis();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::EquipmentBaoShiServerProto >&
      bao_shis() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::EquipmentBaoShiServerProto >*
      mutable_bao_shis();

  // optional int64 bao_shi_version = 15;
  inline bool has_bao_shi_version() const;
  inline void clear_bao_shi_version();
  static const int kBaoShiVersionFieldNumber = 15;
  inline ::google::protobuf::int64 bao_shi_version() const;
  inline void set_bao_shi_version(::google::protobuf::int64 value);

  static const int kGoodsProtoFieldNumber = 51;
  static ::google::protobuf::internal::ExtensionIdentifier< ::app::message::GoodsServerProto,
      ::google::protobuf::internal::MessageTypeTraits< ::app::message::EquipmentServerProto >, 11, false >
    goodsProto;
  // @@protoc_insertion_point(class_scope:app.message.EquipmentServerProto)
 private:
  inline void set_has_refined_times();
  inline void clear_has_refined_times();
  inline void set_has_refined_upgrade_times();
  inline void clear_has_refined_upgrade_times();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_added_stat_type();
  inline void clear_has_added_stat_type();
  inline void set_has_is_unmeltable();
  inline void clear_has_is_unmeltable();
  inline void set_has_ti_pin_val();
  inline void clear_has_ti_pin_val();
  inline void set_has_fashion_expire_time();
  inline void clear_has_fashion_expire_time();
  inline void set_has_bao_shi_version();
  inline void clear_has_bao_shi_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 refined_times_;
  ::google::protobuf::int32 refined_upgrade_times_;
  ::google::protobuf::int32 quality_;
  ::google::protobuf::int32 added_stat_type_;
  bool is_unmeltable_;
  ::google::protobuf::int32 ti_pin_val_;
  ::google::protobuf::RepeatedPtrField< ::app::message::SingleStatProto > xun_zhang_random_stats_;
  ::google::protobuf::RepeatedPtrField< ::app::message::SingleStatProto > fashion_random_stats_;
  ::google::protobuf::int64 fashion_expire_time_;
  ::google::protobuf::RepeatedPtrField< ::app::message::EquipmentBaoShiServerProto > bao_shis_;
  ::google::protobuf::int64 bao_shi_version_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_goods_5fserver_2eproto();
  friend void protobuf_AssignDesc_goods_5fserver_2eproto();
  friend void protobuf_ShutdownFile_goods_5fserver_2eproto();

  void InitAsDefaultInstance();
  static EquipmentServerProto* default_instance_;
};
// -------------------------------------------------------------------

class EquipmentBaoShiServerProto : public ::google::protobuf::Message {
 public:
  EquipmentBaoShiServerProto();
  virtual ~EquipmentBaoShiServerProto();

  EquipmentBaoShiServerProto(const EquipmentBaoShiServerProto& from);

  inline EquipmentBaoShiServerProto& operator=(const EquipmentBaoShiServerProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipmentBaoShiServerProto& default_instance();

  void Swap(EquipmentBaoShiServerProto* other);

  // implements Message ----------------------------------------------

  EquipmentBaoShiServerProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipmentBaoShiServerProto& from);
  void MergeFrom(const EquipmentBaoShiServerProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 hole_num = 1;
  inline bool has_hole_num() const;
  inline void clear_hole_num();
  static const int kHoleNumFieldNumber = 1;
  inline ::google::protobuf::int32 hole_num() const;
  inline void set_hole_num(::google::protobuf::int32 value);

  // optional .app.message.GoodsServerProto bao_shi = 2;
  inline bool has_bao_shi() const;
  inline void clear_bao_shi();
  static const int kBaoShiFieldNumber = 2;
  inline const ::app::message::GoodsServerProto& bao_shi() const;
  inline ::app::message::GoodsServerProto* mutable_bao_shi();
  inline ::app::message::GoodsServerProto* release_bao_shi();
  inline void set_allocated_bao_shi(::app::message::GoodsServerProto* bao_shi);

  // @@protoc_insertion_point(class_scope:app.message.EquipmentBaoShiServerProto)
 private:
  inline void set_has_hole_num();
  inline void clear_has_hole_num();
  inline void set_has_bao_shi();
  inline void clear_has_bao_shi();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::app::message::GoodsServerProto* bao_shi_;
  ::google::protobuf::int32 hole_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_goods_5fserver_2eproto();
  friend void protobuf_AssignDesc_goods_5fserver_2eproto();
  friend void protobuf_ShutdownFile_goods_5fserver_2eproto();

  void InitAsDefaultInstance();
  static EquipmentBaoShiServerProto* default_instance_;
};
// -------------------------------------------------------------------

class MountEquipmentServerProto : public ::google::protobuf::Message {
 public:
  MountEquipmentServerProto();
  virtual ~MountEquipmentServerProto();

  MountEquipmentServerProto(const MountEquipmentServerProto& from);

  inline MountEquipmentServerProto& operator=(const MountEquipmentServerProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MountEquipmentServerProto& default_instance();

  void Swap(MountEquipmentServerProto* other);

  // implements Message ----------------------------------------------

  MountEquipmentServerProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MountEquipmentServerProto& from);
  void MergeFrom(const MountEquipmentServerProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 refined_times = 1;
  inline bool has_refined_times() const;
  inline void clear_refined_times();
  static const int kRefinedTimesFieldNumber = 1;
  inline ::google::protobuf::int32 refined_times() const;
  inline void set_refined_times(::google::protobuf::int32 value);

  // optional int32 added_stat_type = 2;
  inline bool has_added_stat_type() const;
  inline void clear_added_stat_type();
  static const int kAddedStatTypeFieldNumber = 2;
  inline ::google::protobuf::int32 added_stat_type() const;
  inline void set_added_stat_type(::google::protobuf::int32 value);

  // optional int32 quality = 3;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 3;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // optional int32 refined_upgrade_times = 4;
  inline bool has_refined_upgrade_times() const;
  inline void clear_refined_upgrade_times();
  static const int kRefinedUpgradeTimesFieldNumber = 4;
  inline ::google::protobuf::int32 refined_upgrade_times() const;
  inline void set_refined_upgrade_times(::google::protobuf::int32 value);

  // optional int32 ti_pin_val = 5;
  inline bool has_ti_pin_val() const;
  inline void clear_ti_pin_val();
  static const int kTiPinValFieldNumber = 5;
  inline ::google::protobuf::int32 ti_pin_val() const;
  inline void set_ti_pin_val(::google::protobuf::int32 value);

  static const int kGoodsProtoFieldNumber = 52;
  static ::google::protobuf::internal::ExtensionIdentifier< ::app::message::GoodsServerProto,
      ::google::protobuf::internal::MessageTypeTraits< ::app::message::MountEquipmentServerProto >, 11, false >
    goodsProto;
  // @@protoc_insertion_point(class_scope:app.message.MountEquipmentServerProto)
 private:
  inline void set_has_refined_times();
  inline void clear_has_refined_times();
  inline void set_has_added_stat_type();
  inline void clear_has_added_stat_type();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_refined_upgrade_times();
  inline void clear_has_refined_upgrade_times();
  inline void set_has_ti_pin_val();
  inline void clear_has_ti_pin_val();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 refined_times_;
  ::google::protobuf::int32 added_stat_type_;
  ::google::protobuf::int32 quality_;
  ::google::protobuf::int32 refined_upgrade_times_;
  ::google::protobuf::int32 ti_pin_val_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_goods_5fserver_2eproto();
  friend void protobuf_AssignDesc_goods_5fserver_2eproto();
  friend void protobuf_ShutdownFile_goods_5fserver_2eproto();

  void InitAsDefaultInstance();
  static MountEquipmentServerProto* default_instance_;
};
// -------------------------------------------------------------------

class ShieldEquipmentServerProto : public ::google::protobuf::Message {
 public:
  ShieldEquipmentServerProto();
  virtual ~ShieldEquipmentServerProto();

  ShieldEquipmentServerProto(const ShieldEquipmentServerProto& from);

  inline ShieldEquipmentServerProto& operator=(const ShieldEquipmentServerProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShieldEquipmentServerProto& default_instance();

  void Swap(ShieldEquipmentServerProto* other);

  // implements Message ----------------------------------------------

  ShieldEquipmentServerProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ShieldEquipmentServerProto& from);
  void MergeFrom(const ShieldEquipmentServerProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 refined_times = 1;
  inline bool has_refined_times() const;
  inline void clear_refined_times();
  static const int kRefinedTimesFieldNumber = 1;
  inline ::google::protobuf::int32 refined_times() const;
  inline void set_refined_times(::google::protobuf::int32 value);

  // optional int32 added_stat_type = 2;
  inline bool has_added_stat_type() const;
  inline void clear_added_stat_type();
  static const int kAddedStatTypeFieldNumber = 2;
  inline ::google::protobuf::int32 added_stat_type() const;
  inline void set_added_stat_type(::google::protobuf::int32 value);

  // optional int32 quality = 3;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 3;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // optional int32 refined_upgrade_times = 4;
  inline bool has_refined_upgrade_times() const;
  inline void clear_refined_upgrade_times();
  static const int kRefinedUpgradeTimesFieldNumber = 4;
  inline ::google::protobuf::int32 refined_upgrade_times() const;
  inline void set_refined_upgrade_times(::google::protobuf::int32 value);

  // optional int32 ti_pin_val = 5;
  inline bool has_ti_pin_val() const;
  inline void clear_ti_pin_val();
  static const int kTiPinValFieldNumber = 5;
  inline ::google::protobuf::int32 ti_pin_val() const;
  inline void set_ti_pin_val(::google::protobuf::int32 value);

  static const int kGoodsProtoFieldNumber = 54;
  static ::google::protobuf::internal::ExtensionIdentifier< ::app::message::GoodsServerProto,
      ::google::protobuf::internal::MessageTypeTraits< ::app::message::ShieldEquipmentServerProto >, 11, false >
    goodsProto;
  // @@protoc_insertion_point(class_scope:app.message.ShieldEquipmentServerProto)
 private:
  inline void set_has_refined_times();
  inline void clear_has_refined_times();
  inline void set_has_added_stat_type();
  inline void clear_has_added_stat_type();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_refined_upgrade_times();
  inline void clear_has_refined_upgrade_times();
  inline void set_has_ti_pin_val();
  inline void clear_has_ti_pin_val();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 refined_times_;
  ::google::protobuf::int32 added_stat_type_;
  ::google::protobuf::int32 quality_;
  ::google::protobuf::int32 refined_upgrade_times_;
  ::google::protobuf::int32 ti_pin_val_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_goods_5fserver_2eproto();
  friend void protobuf_AssignDesc_goods_5fserver_2eproto();
  friend void protobuf_ShutdownFile_goods_5fserver_2eproto();

  void InitAsDefaultInstance();
  static ShieldEquipmentServerProto* default_instance_;
};
// -------------------------------------------------------------------

class PetEquipmentServerProto : public ::google::protobuf::Message {
 public:
  PetEquipmentServerProto();
  virtual ~PetEquipmentServerProto();

  PetEquipmentServerProto(const PetEquipmentServerProto& from);

  inline PetEquipmentServerProto& operator=(const PetEquipmentServerProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PetEquipmentServerProto& default_instance();

  void Swap(PetEquipmentServerProto* other);

  // implements Message ----------------------------------------------

  PetEquipmentServerProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PetEquipmentServerProto& from);
  void MergeFrom(const PetEquipmentServerProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 refined_times = 1;
  inline bool has_refined_times() const;
  inline void clear_refined_times();
  static const int kRefinedTimesFieldNumber = 1;
  inline ::google::protobuf::int32 refined_times() const;
  inline void set_refined_times(::google::protobuf::int32 value);

  // optional int32 added_stat_type = 2;
  inline bool has_added_stat_type() const;
  inline void clear_added_stat_type();
  static const int kAddedStatTypeFieldNumber = 2;
  inline ::google::protobuf::int32 added_stat_type() const;
  inline void set_added_stat_type(::google::protobuf::int32 value);

  // optional int32 quality = 3;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 3;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // optional int32 refined_upgrade_times = 4;
  inline bool has_refined_upgrade_times() const;
  inline void clear_refined_upgrade_times();
  static const int kRefinedUpgradeTimesFieldNumber = 4;
  inline ::google::protobuf::int32 refined_upgrade_times() const;
  inline void set_refined_upgrade_times(::google::protobuf::int32 value);

  // optional int32 ti_pin_val = 5;
  inline bool has_ti_pin_val() const;
  inline void clear_ti_pin_val();
  static const int kTiPinValFieldNumber = 5;
  inline ::google::protobuf::int32 ti_pin_val() const;
  inline void set_ti_pin_val(::google::protobuf::int32 value);

  static const int kGoodsProtoFieldNumber = 53;
  static ::google::protobuf::internal::ExtensionIdentifier< ::app::message::GoodsServerProto,
      ::google::protobuf::internal::MessageTypeTraits< ::app::message::PetEquipmentServerProto >, 11, false >
    goodsProto;
  // @@protoc_insertion_point(class_scope:app.message.PetEquipmentServerProto)
 private:
  inline void set_has_refined_times();
  inline void clear_has_refined_times();
  inline void set_has_added_stat_type();
  inline void clear_has_added_stat_type();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_refined_upgrade_times();
  inline void clear_has_refined_upgrade_times();
  inline void set_has_ti_pin_val();
  inline void clear_has_ti_pin_val();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 refined_times_;
  ::google::protobuf::int32 added_stat_type_;
  ::google::protobuf::int32 quality_;
  ::google::protobuf::int32 refined_upgrade_times_;
  ::google::protobuf::int32 ti_pin_val_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_goods_5fserver_2eproto();
  friend void protobuf_AssignDesc_goods_5fserver_2eproto();
  friend void protobuf_ShutdownFile_goods_5fserver_2eproto();

  void InitAsDefaultInstance();
  static PetEquipmentServerProto* default_instance_;
};
// -------------------------------------------------------------------

class BaoShiServerProto : public ::google::protobuf::Message {
 public:
  BaoShiServerProto();
  virtual ~BaoShiServerProto();

  BaoShiServerProto(const BaoShiServerProto& from);

  inline BaoShiServerProto& operator=(const BaoShiServerProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BaoShiServerProto& default_instance();

  void Swap(BaoShiServerProto* other);

  // implements Message ----------------------------------------------

  BaoShiServerProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BaoShiServerProto& from);
  void MergeFrom(const BaoShiServerProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string icon = 1;
  inline bool has_icon() const;
  inline void clear_icon();
  static const int kIconFieldNumber = 1;
  inline const ::std::string& icon() const;
  inline void set_icon(const ::std::string& value);
  inline void set_icon(const char* value);
  inline void set_icon(const char* value, size_t size);
  inline ::std::string* mutable_icon();
  inline ::std::string* release_icon();
  inline void set_allocated_icon(::std::string* icon);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // repeated .app.message.SingleStatProto baseStat = 3;
  inline int basestat_size() const;
  inline void clear_basestat();
  static const int kBaseStatFieldNumber = 3;
  inline const ::app::message::SingleStatProto& basestat(int index) const;
  inline ::app::message::SingleStatProto* mutable_basestat(int index);
  inline ::app::message::SingleStatProto* add_basestat();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::SingleStatProto >&
      basestat() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::SingleStatProto >*
      mutable_basestat();

  // optional .app.message.SingleStatProto attachStat = 4;
  inline bool has_attachstat() const;
  inline void clear_attachstat();
  static const int kAttachStatFieldNumber = 4;
  inline const ::app::message::SingleStatProto& attachstat() const;
  inline ::app::message::SingleStatProto* mutable_attachstat();
  inline ::app::message::SingleStatProto* release_attachstat();
  inline void set_allocated_attachstat(::app::message::SingleStatProto* attachstat);

  // optional .app.message.SpriteStatProto totalStat = 5;
  inline bool has_totalstat() const;
  inline void clear_totalstat();
  static const int kTotalStatFieldNumber = 5;
  inline const ::app::message::SpriteStatProto& totalstat() const;
  inline ::app::message::SpriteStatProto* mutable_totalstat();
  inline ::app::message::SpriteStatProto* release_totalstat();
  inline void set_allocated_totalstat(::app::message::SpriteStatProto* totalstat);

  // optional int32 fightingAmount = 6;
  inline bool has_fightingamount() const;
  inline void clear_fightingamount();
  static const int kFightingAmountFieldNumber = 6;
  inline ::google::protobuf::int32 fightingamount() const;
  inline void set_fightingamount(::google::protobuf::int32 value);

  // optional int32 quality = 7;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 7;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // optional int64 bao_shi_version = 8;
  inline bool has_bao_shi_version() const;
  inline void clear_bao_shi_version();
  static const int kBaoShiVersionFieldNumber = 8;
  inline ::google::protobuf::int64 bao_shi_version() const;
  inline void set_bao_shi_version(::google::protobuf::int64 value);

  static const int kGoodsProtoFieldNumber = 55;
  static ::google::protobuf::internal::ExtensionIdentifier< ::app::message::GoodsServerProto,
      ::google::protobuf::internal::MessageTypeTraits< ::app::message::BaoShiServerProto >, 11, false >
    goodsProto;
  // @@protoc_insertion_point(class_scope:app.message.BaoShiServerProto)
 private:
  inline void set_has_icon();
  inline void clear_has_icon();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_attachstat();
  inline void clear_has_attachstat();
  inline void set_has_totalstat();
  inline void clear_has_totalstat();
  inline void set_has_fightingamount();
  inline void clear_has_fightingamount();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_bao_shi_version();
  inline void clear_has_bao_shi_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* icon_;
  ::std::string* name_;
  ::google::protobuf::RepeatedPtrField< ::app::message::SingleStatProto > basestat_;
  ::app::message::SingleStatProto* attachstat_;
  ::app::message::SpriteStatProto* totalstat_;
  ::google::protobuf::int32 fightingamount_;
  ::google::protobuf::int32 quality_;
  ::google::protobuf::int64 bao_shi_version_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_goods_5fserver_2eproto();
  friend void protobuf_AssignDesc_goods_5fserver_2eproto();
  friend void protobuf_ShutdownFile_goods_5fserver_2eproto();

  void InitAsDefaultInstance();
  static BaoShiServerProto* default_instance_;
};
// ===================================================================


// ===================================================================

// GoodsServerProto

// optional int32 id = 1;
inline bool GoodsServerProto::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GoodsServerProto::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GoodsServerProto::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GoodsServerProto::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 GoodsServerProto::id() const {
  return id_;
}
inline void GoodsServerProto::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional int32 type = 2 [deprecated = true];
inline bool GoodsServerProto::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GoodsServerProto::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GoodsServerProto::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GoodsServerProto::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GoodsServerProto::type() const {
  return type_;
}
inline void GoodsServerProto::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 count = 3;
inline bool GoodsServerProto::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GoodsServerProto::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GoodsServerProto::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GoodsServerProto::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 GoodsServerProto::count() const {
  return count_;
}
inline void GoodsServerProto::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// optional bool binded = 4;
inline bool GoodsServerProto::has_binded() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GoodsServerProto::set_has_binded() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GoodsServerProto::clear_has_binded() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GoodsServerProto::clear_binded() {
  binded_ = false;
  clear_has_binded();
}
inline bool GoodsServerProto::binded() const {
  return binded_;
}
inline void GoodsServerProto::set_binded(bool value) {
  set_has_binded();
  binded_ = value;
}

// optional int64 expire_time = 5;
inline bool GoodsServerProto::has_expire_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GoodsServerProto::set_has_expire_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GoodsServerProto::clear_has_expire_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GoodsServerProto::clear_expire_time() {
  expire_time_ = GOOGLE_LONGLONG(0);
  clear_has_expire_time();
}
inline ::google::protobuf::int64 GoodsServerProto::expire_time() const {
  return expire_time_;
}
inline void GoodsServerProto::set_expire_time(::google::protobuf::int64 value) {
  set_has_expire_time();
  expire_time_ = value;
}

// optional int64 can_use_time = 6;
inline bool GoodsServerProto::has_can_use_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GoodsServerProto::set_has_can_use_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GoodsServerProto::clear_has_can_use_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GoodsServerProto::clear_can_use_time() {
  can_use_time_ = GOOGLE_LONGLONG(0);
  clear_has_can_use_time();
}
inline ::google::protobuf::int64 GoodsServerProto::can_use_time() const {
  return can_use_time_;
}
inline void GoodsServerProto::set_can_use_time(::google::protobuf::int64 value) {
  set_has_can_use_time();
  can_use_time_ = value;
}

// -------------------------------------------------------------------

// EquipmentServerProto

// optional int32 refined_times = 1;
inline bool EquipmentServerProto::has_refined_times() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipmentServerProto::set_has_refined_times() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipmentServerProto::clear_has_refined_times() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipmentServerProto::clear_refined_times() {
  refined_times_ = 0;
  clear_has_refined_times();
}
inline ::google::protobuf::int32 EquipmentServerProto::refined_times() const {
  return refined_times_;
}
inline void EquipmentServerProto::set_refined_times(::google::protobuf::int32 value) {
  set_has_refined_times();
  refined_times_ = value;
}

// optional int32 refined_upgrade_times = 5;
inline bool EquipmentServerProto::has_refined_upgrade_times() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipmentServerProto::set_has_refined_upgrade_times() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipmentServerProto::clear_has_refined_upgrade_times() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipmentServerProto::clear_refined_upgrade_times() {
  refined_upgrade_times_ = 0;
  clear_has_refined_upgrade_times();
}
inline ::google::protobuf::int32 EquipmentServerProto::refined_upgrade_times() const {
  return refined_upgrade_times_;
}
inline void EquipmentServerProto::set_refined_upgrade_times(::google::protobuf::int32 value) {
  set_has_refined_upgrade_times();
  refined_upgrade_times_ = value;
}

// optional int32 quality = 7;
inline bool EquipmentServerProto::has_quality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EquipmentServerProto::set_has_quality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EquipmentServerProto::clear_has_quality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EquipmentServerProto::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 EquipmentServerProto::quality() const {
  return quality_;
}
inline void EquipmentServerProto::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// optional int32 added_stat_type = 8;
inline bool EquipmentServerProto::has_added_stat_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EquipmentServerProto::set_has_added_stat_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EquipmentServerProto::clear_has_added_stat_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EquipmentServerProto::clear_added_stat_type() {
  added_stat_type_ = 0;
  clear_has_added_stat_type();
}
inline ::google::protobuf::int32 EquipmentServerProto::added_stat_type() const {
  return added_stat_type_;
}
inline void EquipmentServerProto::set_added_stat_type(::google::protobuf::int32 value) {
  set_has_added_stat_type();
  added_stat_type_ = value;
}

// optional bool is_unmeltable = 9;
inline bool EquipmentServerProto::has_is_unmeltable() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EquipmentServerProto::set_has_is_unmeltable() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EquipmentServerProto::clear_has_is_unmeltable() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EquipmentServerProto::clear_is_unmeltable() {
  is_unmeltable_ = false;
  clear_has_is_unmeltable();
}
inline bool EquipmentServerProto::is_unmeltable() const {
  return is_unmeltable_;
}
inline void EquipmentServerProto::set_is_unmeltable(bool value) {
  set_has_is_unmeltable();
  is_unmeltable_ = value;
}

// optional int32 ti_pin_val = 10;
inline bool EquipmentServerProto::has_ti_pin_val() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void EquipmentServerProto::set_has_ti_pin_val() {
  _has_bits_[0] |= 0x00000020u;
}
inline void EquipmentServerProto::clear_has_ti_pin_val() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void EquipmentServerProto::clear_ti_pin_val() {
  ti_pin_val_ = 0;
  clear_has_ti_pin_val();
}
inline ::google::protobuf::int32 EquipmentServerProto::ti_pin_val() const {
  return ti_pin_val_;
}
inline void EquipmentServerProto::set_ti_pin_val(::google::protobuf::int32 value) {
  set_has_ti_pin_val();
  ti_pin_val_ = value;
}

// repeated .app.message.SingleStatProto xun_zhang_random_stats = 11;
inline int EquipmentServerProto::xun_zhang_random_stats_size() const {
  return xun_zhang_random_stats_.size();
}
inline void EquipmentServerProto::clear_xun_zhang_random_stats() {
  xun_zhang_random_stats_.Clear();
}
inline const ::app::message::SingleStatProto& EquipmentServerProto::xun_zhang_random_stats(int index) const {
  return xun_zhang_random_stats_.Get(index);
}
inline ::app::message::SingleStatProto* EquipmentServerProto::mutable_xun_zhang_random_stats(int index) {
  return xun_zhang_random_stats_.Mutable(index);
}
inline ::app::message::SingleStatProto* EquipmentServerProto::add_xun_zhang_random_stats() {
  return xun_zhang_random_stats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::SingleStatProto >&
EquipmentServerProto::xun_zhang_random_stats() const {
  return xun_zhang_random_stats_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::SingleStatProto >*
EquipmentServerProto::mutable_xun_zhang_random_stats() {
  return &xun_zhang_random_stats_;
}

// repeated .app.message.SingleStatProto fashion_random_stats = 12;
inline int EquipmentServerProto::fashion_random_stats_size() const {
  return fashion_random_stats_.size();
}
inline void EquipmentServerProto::clear_fashion_random_stats() {
  fashion_random_stats_.Clear();
}
inline const ::app::message::SingleStatProto& EquipmentServerProto::fashion_random_stats(int index) const {
  return fashion_random_stats_.Get(index);
}
inline ::app::message::SingleStatProto* EquipmentServerProto::mutable_fashion_random_stats(int index) {
  return fashion_random_stats_.Mutable(index);
}
inline ::app::message::SingleStatProto* EquipmentServerProto::add_fashion_random_stats() {
  return fashion_random_stats_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::SingleStatProto >&
EquipmentServerProto::fashion_random_stats() const {
  return fashion_random_stats_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::SingleStatProto >*
EquipmentServerProto::mutable_fashion_random_stats() {
  return &fashion_random_stats_;
}

// optional int64 fashion_expire_time = 13;
inline bool EquipmentServerProto::has_fashion_expire_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void EquipmentServerProto::set_has_fashion_expire_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void EquipmentServerProto::clear_has_fashion_expire_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void EquipmentServerProto::clear_fashion_expire_time() {
  fashion_expire_time_ = GOOGLE_LONGLONG(0);
  clear_has_fashion_expire_time();
}
inline ::google::protobuf::int64 EquipmentServerProto::fashion_expire_time() const {
  return fashion_expire_time_;
}
inline void EquipmentServerProto::set_fashion_expire_time(::google::protobuf::int64 value) {
  set_has_fashion_expire_time();
  fashion_expire_time_ = value;
}

// repeated .app.message.EquipmentBaoShiServerProto bao_shis = 14;
inline int EquipmentServerProto::bao_shis_size() const {
  return bao_shis_.size();
}
inline void EquipmentServerProto::clear_bao_shis() {
  bao_shis_.Clear();
}
inline const ::app::message::EquipmentBaoShiServerProto& EquipmentServerProto::bao_shis(int index) const {
  return bao_shis_.Get(index);
}
inline ::app::message::EquipmentBaoShiServerProto* EquipmentServerProto::mutable_bao_shis(int index) {
  return bao_shis_.Mutable(index);
}
inline ::app::message::EquipmentBaoShiServerProto* EquipmentServerProto::add_bao_shis() {
  return bao_shis_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::EquipmentBaoShiServerProto >&
EquipmentServerProto::bao_shis() const {
  return bao_shis_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::EquipmentBaoShiServerProto >*
EquipmentServerProto::mutable_bao_shis() {
  return &bao_shis_;
}

// optional int64 bao_shi_version = 15;
inline bool EquipmentServerProto::has_bao_shi_version() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void EquipmentServerProto::set_has_bao_shi_version() {
  _has_bits_[0] |= 0x00000400u;
}
inline void EquipmentServerProto::clear_has_bao_shi_version() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void EquipmentServerProto::clear_bao_shi_version() {
  bao_shi_version_ = GOOGLE_LONGLONG(0);
  clear_has_bao_shi_version();
}
inline ::google::protobuf::int64 EquipmentServerProto::bao_shi_version() const {
  return bao_shi_version_;
}
inline void EquipmentServerProto::set_bao_shi_version(::google::protobuf::int64 value) {
  set_has_bao_shi_version();
  bao_shi_version_ = value;
}

// -------------------------------------------------------------------

// EquipmentBaoShiServerProto

// optional int32 hole_num = 1;
inline bool EquipmentBaoShiServerProto::has_hole_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EquipmentBaoShiServerProto::set_has_hole_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EquipmentBaoShiServerProto::clear_has_hole_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EquipmentBaoShiServerProto::clear_hole_num() {
  hole_num_ = 0;
  clear_has_hole_num();
}
inline ::google::protobuf::int32 EquipmentBaoShiServerProto::hole_num() const {
  return hole_num_;
}
inline void EquipmentBaoShiServerProto::set_hole_num(::google::protobuf::int32 value) {
  set_has_hole_num();
  hole_num_ = value;
}

// optional .app.message.GoodsServerProto bao_shi = 2;
inline bool EquipmentBaoShiServerProto::has_bao_shi() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EquipmentBaoShiServerProto::set_has_bao_shi() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EquipmentBaoShiServerProto::clear_has_bao_shi() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EquipmentBaoShiServerProto::clear_bao_shi() {
  if (bao_shi_ != NULL) bao_shi_->::app::message::GoodsServerProto::Clear();
  clear_has_bao_shi();
}
inline const ::app::message::GoodsServerProto& EquipmentBaoShiServerProto::bao_shi() const {
  return bao_shi_ != NULL ? *bao_shi_ : *default_instance_->bao_shi_;
}
inline ::app::message::GoodsServerProto* EquipmentBaoShiServerProto::mutable_bao_shi() {
  set_has_bao_shi();
  if (bao_shi_ == NULL) bao_shi_ = new ::app::message::GoodsServerProto;
  return bao_shi_;
}
inline ::app::message::GoodsServerProto* EquipmentBaoShiServerProto::release_bao_shi() {
  clear_has_bao_shi();
  ::app::message::GoodsServerProto* temp = bao_shi_;
  bao_shi_ = NULL;
  return temp;
}
inline void EquipmentBaoShiServerProto::set_allocated_bao_shi(::app::message::GoodsServerProto* bao_shi) {
  delete bao_shi_;
  bao_shi_ = bao_shi;
  if (bao_shi) {
    set_has_bao_shi();
  } else {
    clear_has_bao_shi();
  }
}

// -------------------------------------------------------------------

// MountEquipmentServerProto

// optional int32 refined_times = 1;
inline bool MountEquipmentServerProto::has_refined_times() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MountEquipmentServerProto::set_has_refined_times() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MountEquipmentServerProto::clear_has_refined_times() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MountEquipmentServerProto::clear_refined_times() {
  refined_times_ = 0;
  clear_has_refined_times();
}
inline ::google::protobuf::int32 MountEquipmentServerProto::refined_times() const {
  return refined_times_;
}
inline void MountEquipmentServerProto::set_refined_times(::google::protobuf::int32 value) {
  set_has_refined_times();
  refined_times_ = value;
}

// optional int32 added_stat_type = 2;
inline bool MountEquipmentServerProto::has_added_stat_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MountEquipmentServerProto::set_has_added_stat_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MountEquipmentServerProto::clear_has_added_stat_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MountEquipmentServerProto::clear_added_stat_type() {
  added_stat_type_ = 0;
  clear_has_added_stat_type();
}
inline ::google::protobuf::int32 MountEquipmentServerProto::added_stat_type() const {
  return added_stat_type_;
}
inline void MountEquipmentServerProto::set_added_stat_type(::google::protobuf::int32 value) {
  set_has_added_stat_type();
  added_stat_type_ = value;
}

// optional int32 quality = 3;
inline bool MountEquipmentServerProto::has_quality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MountEquipmentServerProto::set_has_quality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MountEquipmentServerProto::clear_has_quality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MountEquipmentServerProto::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 MountEquipmentServerProto::quality() const {
  return quality_;
}
inline void MountEquipmentServerProto::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// optional int32 refined_upgrade_times = 4;
inline bool MountEquipmentServerProto::has_refined_upgrade_times() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MountEquipmentServerProto::set_has_refined_upgrade_times() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MountEquipmentServerProto::clear_has_refined_upgrade_times() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MountEquipmentServerProto::clear_refined_upgrade_times() {
  refined_upgrade_times_ = 0;
  clear_has_refined_upgrade_times();
}
inline ::google::protobuf::int32 MountEquipmentServerProto::refined_upgrade_times() const {
  return refined_upgrade_times_;
}
inline void MountEquipmentServerProto::set_refined_upgrade_times(::google::protobuf::int32 value) {
  set_has_refined_upgrade_times();
  refined_upgrade_times_ = value;
}

// optional int32 ti_pin_val = 5;
inline bool MountEquipmentServerProto::has_ti_pin_val() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MountEquipmentServerProto::set_has_ti_pin_val() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MountEquipmentServerProto::clear_has_ti_pin_val() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MountEquipmentServerProto::clear_ti_pin_val() {
  ti_pin_val_ = 0;
  clear_has_ti_pin_val();
}
inline ::google::protobuf::int32 MountEquipmentServerProto::ti_pin_val() const {
  return ti_pin_val_;
}
inline void MountEquipmentServerProto::set_ti_pin_val(::google::protobuf::int32 value) {
  set_has_ti_pin_val();
  ti_pin_val_ = value;
}

// -------------------------------------------------------------------

// ShieldEquipmentServerProto

// optional int32 refined_times = 1;
inline bool ShieldEquipmentServerProto::has_refined_times() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShieldEquipmentServerProto::set_has_refined_times() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShieldEquipmentServerProto::clear_has_refined_times() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShieldEquipmentServerProto::clear_refined_times() {
  refined_times_ = 0;
  clear_has_refined_times();
}
inline ::google::protobuf::int32 ShieldEquipmentServerProto::refined_times() const {
  return refined_times_;
}
inline void ShieldEquipmentServerProto::set_refined_times(::google::protobuf::int32 value) {
  set_has_refined_times();
  refined_times_ = value;
}

// optional int32 added_stat_type = 2;
inline bool ShieldEquipmentServerProto::has_added_stat_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ShieldEquipmentServerProto::set_has_added_stat_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ShieldEquipmentServerProto::clear_has_added_stat_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ShieldEquipmentServerProto::clear_added_stat_type() {
  added_stat_type_ = 0;
  clear_has_added_stat_type();
}
inline ::google::protobuf::int32 ShieldEquipmentServerProto::added_stat_type() const {
  return added_stat_type_;
}
inline void ShieldEquipmentServerProto::set_added_stat_type(::google::protobuf::int32 value) {
  set_has_added_stat_type();
  added_stat_type_ = value;
}

// optional int32 quality = 3;
inline bool ShieldEquipmentServerProto::has_quality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ShieldEquipmentServerProto::set_has_quality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ShieldEquipmentServerProto::clear_has_quality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ShieldEquipmentServerProto::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 ShieldEquipmentServerProto::quality() const {
  return quality_;
}
inline void ShieldEquipmentServerProto::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// optional int32 refined_upgrade_times = 4;
inline bool ShieldEquipmentServerProto::has_refined_upgrade_times() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ShieldEquipmentServerProto::set_has_refined_upgrade_times() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ShieldEquipmentServerProto::clear_has_refined_upgrade_times() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ShieldEquipmentServerProto::clear_refined_upgrade_times() {
  refined_upgrade_times_ = 0;
  clear_has_refined_upgrade_times();
}
inline ::google::protobuf::int32 ShieldEquipmentServerProto::refined_upgrade_times() const {
  return refined_upgrade_times_;
}
inline void ShieldEquipmentServerProto::set_refined_upgrade_times(::google::protobuf::int32 value) {
  set_has_refined_upgrade_times();
  refined_upgrade_times_ = value;
}

// optional int32 ti_pin_val = 5;
inline bool ShieldEquipmentServerProto::has_ti_pin_val() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ShieldEquipmentServerProto::set_has_ti_pin_val() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ShieldEquipmentServerProto::clear_has_ti_pin_val() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ShieldEquipmentServerProto::clear_ti_pin_val() {
  ti_pin_val_ = 0;
  clear_has_ti_pin_val();
}
inline ::google::protobuf::int32 ShieldEquipmentServerProto::ti_pin_val() const {
  return ti_pin_val_;
}
inline void ShieldEquipmentServerProto::set_ti_pin_val(::google::protobuf::int32 value) {
  set_has_ti_pin_val();
  ti_pin_val_ = value;
}

// -------------------------------------------------------------------

// PetEquipmentServerProto

// optional int32 refined_times = 1;
inline bool PetEquipmentServerProto::has_refined_times() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PetEquipmentServerProto::set_has_refined_times() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PetEquipmentServerProto::clear_has_refined_times() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PetEquipmentServerProto::clear_refined_times() {
  refined_times_ = 0;
  clear_has_refined_times();
}
inline ::google::protobuf::int32 PetEquipmentServerProto::refined_times() const {
  return refined_times_;
}
inline void PetEquipmentServerProto::set_refined_times(::google::protobuf::int32 value) {
  set_has_refined_times();
  refined_times_ = value;
}

// optional int32 added_stat_type = 2;
inline bool PetEquipmentServerProto::has_added_stat_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PetEquipmentServerProto::set_has_added_stat_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PetEquipmentServerProto::clear_has_added_stat_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PetEquipmentServerProto::clear_added_stat_type() {
  added_stat_type_ = 0;
  clear_has_added_stat_type();
}
inline ::google::protobuf::int32 PetEquipmentServerProto::added_stat_type() const {
  return added_stat_type_;
}
inline void PetEquipmentServerProto::set_added_stat_type(::google::protobuf::int32 value) {
  set_has_added_stat_type();
  added_stat_type_ = value;
}

// optional int32 quality = 3;
inline bool PetEquipmentServerProto::has_quality() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PetEquipmentServerProto::set_has_quality() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PetEquipmentServerProto::clear_has_quality() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PetEquipmentServerProto::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 PetEquipmentServerProto::quality() const {
  return quality_;
}
inline void PetEquipmentServerProto::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// optional int32 refined_upgrade_times = 4;
inline bool PetEquipmentServerProto::has_refined_upgrade_times() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PetEquipmentServerProto::set_has_refined_upgrade_times() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PetEquipmentServerProto::clear_has_refined_upgrade_times() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PetEquipmentServerProto::clear_refined_upgrade_times() {
  refined_upgrade_times_ = 0;
  clear_has_refined_upgrade_times();
}
inline ::google::protobuf::int32 PetEquipmentServerProto::refined_upgrade_times() const {
  return refined_upgrade_times_;
}
inline void PetEquipmentServerProto::set_refined_upgrade_times(::google::protobuf::int32 value) {
  set_has_refined_upgrade_times();
  refined_upgrade_times_ = value;
}

// optional int32 ti_pin_val = 5;
inline bool PetEquipmentServerProto::has_ti_pin_val() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PetEquipmentServerProto::set_has_ti_pin_val() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PetEquipmentServerProto::clear_has_ti_pin_val() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PetEquipmentServerProto::clear_ti_pin_val() {
  ti_pin_val_ = 0;
  clear_has_ti_pin_val();
}
inline ::google::protobuf::int32 PetEquipmentServerProto::ti_pin_val() const {
  return ti_pin_val_;
}
inline void PetEquipmentServerProto::set_ti_pin_val(::google::protobuf::int32 value) {
  set_has_ti_pin_val();
  ti_pin_val_ = value;
}

// -------------------------------------------------------------------

// BaoShiServerProto

// optional string icon = 1;
inline bool BaoShiServerProto::has_icon() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BaoShiServerProto::set_has_icon() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BaoShiServerProto::clear_has_icon() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BaoShiServerProto::clear_icon() {
  if (icon_ != &::google::protobuf::internal::kEmptyString) {
    icon_->clear();
  }
  clear_has_icon();
}
inline const ::std::string& BaoShiServerProto::icon() const {
  return *icon_;
}
inline void BaoShiServerProto::set_icon(const ::std::string& value) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(value);
}
inline void BaoShiServerProto::set_icon(const char* value) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(value);
}
inline void BaoShiServerProto::set_icon(const char* value, size_t size) {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  icon_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BaoShiServerProto::mutable_icon() {
  set_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    icon_ = new ::std::string;
  }
  return icon_;
}
inline ::std::string* BaoShiServerProto::release_icon() {
  clear_has_icon();
  if (icon_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = icon_;
    icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BaoShiServerProto::set_allocated_icon(::std::string* icon) {
  if (icon_ != &::google::protobuf::internal::kEmptyString) {
    delete icon_;
  }
  if (icon) {
    set_has_icon();
    icon_ = icon;
  } else {
    clear_has_icon();
    icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string name = 2;
inline bool BaoShiServerProto::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BaoShiServerProto::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BaoShiServerProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BaoShiServerProto::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& BaoShiServerProto::name() const {
  return *name_;
}
inline void BaoShiServerProto::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void BaoShiServerProto::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void BaoShiServerProto::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BaoShiServerProto::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* BaoShiServerProto::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BaoShiServerProto::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .app.message.SingleStatProto baseStat = 3;
inline int BaoShiServerProto::basestat_size() const {
  return basestat_.size();
}
inline void BaoShiServerProto::clear_basestat() {
  basestat_.Clear();
}
inline const ::app::message::SingleStatProto& BaoShiServerProto::basestat(int index) const {
  return basestat_.Get(index);
}
inline ::app::message::SingleStatProto* BaoShiServerProto::mutable_basestat(int index) {
  return basestat_.Mutable(index);
}
inline ::app::message::SingleStatProto* BaoShiServerProto::add_basestat() {
  return basestat_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::SingleStatProto >&
BaoShiServerProto::basestat() const {
  return basestat_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::SingleStatProto >*
BaoShiServerProto::mutable_basestat() {
  return &basestat_;
}

// optional .app.message.SingleStatProto attachStat = 4;
inline bool BaoShiServerProto::has_attachstat() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BaoShiServerProto::set_has_attachstat() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BaoShiServerProto::clear_has_attachstat() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BaoShiServerProto::clear_attachstat() {
  if (attachstat_ != NULL) attachstat_->::app::message::SingleStatProto::Clear();
  clear_has_attachstat();
}
inline const ::app::message::SingleStatProto& BaoShiServerProto::attachstat() const {
  return attachstat_ != NULL ? *attachstat_ : *default_instance_->attachstat_;
}
inline ::app::message::SingleStatProto* BaoShiServerProto::mutable_attachstat() {
  set_has_attachstat();
  if (attachstat_ == NULL) attachstat_ = new ::app::message::SingleStatProto;
  return attachstat_;
}
inline ::app::message::SingleStatProto* BaoShiServerProto::release_attachstat() {
  clear_has_attachstat();
  ::app::message::SingleStatProto* temp = attachstat_;
  attachstat_ = NULL;
  return temp;
}
inline void BaoShiServerProto::set_allocated_attachstat(::app::message::SingleStatProto* attachstat) {
  delete attachstat_;
  attachstat_ = attachstat;
  if (attachstat) {
    set_has_attachstat();
  } else {
    clear_has_attachstat();
  }
}

// optional .app.message.SpriteStatProto totalStat = 5;
inline bool BaoShiServerProto::has_totalstat() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BaoShiServerProto::set_has_totalstat() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BaoShiServerProto::clear_has_totalstat() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BaoShiServerProto::clear_totalstat() {
  if (totalstat_ != NULL) totalstat_->::app::message::SpriteStatProto::Clear();
  clear_has_totalstat();
}
inline const ::app::message::SpriteStatProto& BaoShiServerProto::totalstat() const {
  return totalstat_ != NULL ? *totalstat_ : *default_instance_->totalstat_;
}
inline ::app::message::SpriteStatProto* BaoShiServerProto::mutable_totalstat() {
  set_has_totalstat();
  if (totalstat_ == NULL) totalstat_ = new ::app::message::SpriteStatProto;
  return totalstat_;
}
inline ::app::message::SpriteStatProto* BaoShiServerProto::release_totalstat() {
  clear_has_totalstat();
  ::app::message::SpriteStatProto* temp = totalstat_;
  totalstat_ = NULL;
  return temp;
}
inline void BaoShiServerProto::set_allocated_totalstat(::app::message::SpriteStatProto* totalstat) {
  delete totalstat_;
  totalstat_ = totalstat;
  if (totalstat) {
    set_has_totalstat();
  } else {
    clear_has_totalstat();
  }
}

// optional int32 fightingAmount = 6;
inline bool BaoShiServerProto::has_fightingamount() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BaoShiServerProto::set_has_fightingamount() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BaoShiServerProto::clear_has_fightingamount() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BaoShiServerProto::clear_fightingamount() {
  fightingamount_ = 0;
  clear_has_fightingamount();
}
inline ::google::protobuf::int32 BaoShiServerProto::fightingamount() const {
  return fightingamount_;
}
inline void BaoShiServerProto::set_fightingamount(::google::protobuf::int32 value) {
  set_has_fightingamount();
  fightingamount_ = value;
}

// optional int32 quality = 7;
inline bool BaoShiServerProto::has_quality() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BaoShiServerProto::set_has_quality() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BaoShiServerProto::clear_has_quality() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BaoShiServerProto::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 BaoShiServerProto::quality() const {
  return quality_;
}
inline void BaoShiServerProto::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// optional int64 bao_shi_version = 8;
inline bool BaoShiServerProto::has_bao_shi_version() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void BaoShiServerProto::set_has_bao_shi_version() {
  _has_bits_[0] |= 0x00000080u;
}
inline void BaoShiServerProto::clear_has_bao_shi_version() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void BaoShiServerProto::clear_bao_shi_version() {
  bao_shi_version_ = GOOGLE_LONGLONG(0);
  clear_has_bao_shi_version();
}
inline ::google::protobuf::int64 BaoShiServerProto::bao_shi_version() const {
  return bao_shi_version_;
}
inline void BaoShiServerProto::set_bao_shi_version(::google::protobuf::int64 value) {
  set_has_bao_shi_version();
  bao_shi_version_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace app

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::app::message::GoodsType>() {
  return ::app::message::GoodsType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::app::message::Quality>() {
  return ::app::message::Quality_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::app::message::MedicineEfficacy>() {
  return ::app::message::MedicineEfficacy_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_goods_5fserver_2eproto__INCLUDED
