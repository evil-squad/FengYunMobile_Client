// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: guild.proto

#ifndef PROTOBUF_guild_2eproto__INCLUDED
#define PROTOBUF_guild_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace app {
namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_guild_2eproto();
void protobuf_AssignDesc_guild_2eproto();
void protobuf_ShutdownFile_guild_2eproto();

class GuildMemberProto;
class GuildProto;
class GuildHongBaosProto;
class GuildHongBaoProto;
class GuildHongBaoCollectLogProto;
class LongXianGuildStatProto;
class ChengBaProto;
class ChengBaRankObjProto;
class ChengBaPrizeCollectHeroIdsProto;
class GuildDungeonBossKilledProto;
class ChallengeFastCrossProto;
class TongTianTaFastCrossProto;
class ClientNewsProto;
class ClientGuildListProto;
class GuildInListProto;
class GuildBossCard;

// ===================================================================

class GuildMemberProto : public ::google::protobuf::Message {
 public:
  GuildMemberProto();
  virtual ~GuildMemberProto();

  GuildMemberProto(const GuildMemberProto& from);

  inline GuildMemberProto& operator=(const GuildMemberProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildMemberProto& default_instance();

  void Swap(GuildMemberProto* other);

  // implements Message ----------------------------------------------

  GuildMemberProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildMemberProto& from);
  void MergeFrom(const GuildMemberProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional bytes name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int64 enter_guild_time = 3;
  inline bool has_enter_guild_time() const;
  inline void clear_enter_guild_time();
  static const int kEnterGuildTimeFieldNumber = 3;
  inline ::google::protobuf::int64 enter_guild_time() const;
  inline void set_enter_guild_time(::google::protobuf::int64 value);

  // optional int32 contribution_point = 4;
  inline bool has_contribution_point() const;
  inline void clear_contribution_point();
  static const int kContributionPointFieldNumber = 4;
  inline ::google::protobuf::int32 contribution_point() const;
  inline void set_contribution_point(::google::protobuf::int32 value);

  // optional bytes nick_name = 5;
  inline bool has_nick_name() const;
  inline void clear_nick_name();
  static const int kNickNameFieldNumber = 5;
  inline const ::std::string& nick_name() const;
  inline void set_nick_name(const ::std::string& value);
  inline void set_nick_name(const char* value);
  inline void set_nick_name(const void* value, size_t size);
  inline ::std::string* mutable_nick_name();
  inline ::std::string* release_nick_name();
  inline void set_allocated_nick_name(::std::string* nick_name);

  // optional bytes group_name = 6;
  inline bool has_group_name() const;
  inline void clear_group_name();
  static const int kGroupNameFieldNumber = 6;
  inline const ::std::string& group_name() const;
  inline void set_group_name(const ::std::string& value);
  inline void set_group_name(const char* value);
  inline void set_group_name(const void* value, size_t size);
  inline ::std::string* mutable_group_name();
  inline ::std::string* release_group_name();
  inline void set_allocated_group_name(::std::string* group_name);

  // optional int32 level = 7;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 7;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 fight_amount = 8;
  inline bool has_fight_amount() const;
  inline void clear_fight_amount();
  static const int kFightAmountFieldNumber = 8;
  inline ::google::protobuf::int32 fight_amount() const;
  inline void set_fight_amount(::google::protobuf::int32 value);

  // optional int64 last_offline_time = 9;
  inline bool has_last_offline_time() const;
  inline void clear_last_offline_time();
  static const int kLastOfflineTimeFieldNumber = 9;
  inline ::google::protobuf::int64 last_offline_time() const;
  inline void set_last_offline_time(::google::protobuf::int64 value);

  // optional int32 mount_level = 10;
  inline bool has_mount_level() const;
  inline void clear_mount_level();
  static const int kMountLevelFieldNumber = 10;
  inline ::google::protobuf::int32 mount_level() const;
  inline void set_mount_level(::google::protobuf::int32 value);

  // optional int32 feng_wu_level = 11;
  inline bool has_feng_wu_level() const;
  inline void clear_feng_wu_level();
  static const int kFengWuLevelFieldNumber = 11;
  inline ::google::protobuf::int32 feng_wu_level() const;
  inline void set_feng_wu_level(::google::protobuf::int32 value);

  // optional bool is_online = 12;
  inline bool has_is_online() const;
  inline void clear_is_online();
  static const int kIsOnlineFieldNumber = 12;
  inline bool is_online() const;
  inline void set_is_online(bool value);

  // optional int32 scene_id = 13;
  inline bool has_scene_id() const;
  inline void clear_scene_id();
  static const int kSceneIdFieldNumber = 13;
  inline ::google::protobuf::int32 scene_id() const;
  inline void set_scene_id(::google::protobuf::int32 value);

  // optional int32 super_arm_level = 26;
  inline bool has_super_arm_level() const;
  inline void clear_super_arm_level();
  static const int kSuperArmLevelFieldNumber = 26;
  inline ::google::protobuf::int32 super_arm_level() const;
  inline void set_super_arm_level(::google::protobuf::int32 value);

  // optional int32 history_gift_goods_1 = 14;
  inline bool has_history_gift_goods_1() const;
  inline void clear_history_gift_goods_1();
  static const int kHistoryGiftGoods1FieldNumber = 14;
  inline ::google::protobuf::int32 history_gift_goods_1() const;
  inline void set_history_gift_goods_1(::google::protobuf::int32 value);

  // optional int32 history_gift_goods_2 = 15;
  inline bool has_history_gift_goods_2() const;
  inline void clear_history_gift_goods_2();
  static const int kHistoryGiftGoods2FieldNumber = 15;
  inline ::google::protobuf::int32 history_gift_goods_2() const;
  inline void set_history_gift_goods_2(::google::protobuf::int32 value);

  // optional int32 history_gift_goods_3 = 16;
  inline bool has_history_gift_goods_3() const;
  inline void clear_history_gift_goods_3();
  static const int kHistoryGiftGoods3FieldNumber = 16;
  inline ::google::protobuf::int32 history_gift_goods_3() const;
  inline void set_history_gift_goods_3(::google::protobuf::int32 value);

  // optional int32 history_gift_goods_4 = 17;
  inline bool has_history_gift_goods_4() const;
  inline void clear_history_gift_goods_4();
  static const int kHistoryGiftGoods4FieldNumber = 17;
  inline ::google::protobuf::int32 history_gift_goods_4() const;
  inline void set_history_gift_goods_4(::google::protobuf::int32 value);

  // optional int64 history_gift_money = 18;
  inline bool has_history_gift_money() const;
  inline void clear_history_gift_money();
  static const int kHistoryGiftMoneyFieldNumber = 18;
  inline ::google::protobuf::int64 history_gift_money() const;
  inline void set_history_gift_money(::google::protobuf::int64 value);

  // optional int32 super_weapon_fight_amount = 19 [deprecated = true];
  inline bool has_super_weapon_fight_amount() const PROTOBUF_DEPRECATED;
  inline void clear_super_weapon_fight_amount() PROTOBUF_DEPRECATED;
  static const int kSuperWeaponFightAmountFieldNumber = 19;
  inline ::google::protobuf::int32 super_weapon_fight_amount() const PROTOBUF_DEPRECATED;
  inline void set_super_weapon_fight_amount(::google::protobuf::int32 value) PROTOBUF_DEPRECATED;

  // optional int32 challenge_assist_times = 20;
  inline bool has_challenge_assist_times() const;
  inline void clear_challenge_assist_times();
  static const int kChallengeAssistTimesFieldNumber = 20;
  inline ::google::protobuf::int32 challenge_assist_times() const;
  inline void set_challenge_assist_times(::google::protobuf::int32 value);

  // optional int32 challenge_sequence = 21;
  inline bool has_challenge_sequence() const;
  inline void clear_challenge_sequence();
  static const int kChallengeSequenceFieldNumber = 21;
  inline ::google::protobuf::int32 challenge_sequence() const;
  inline void set_challenge_sequence(::google::protobuf::int32 value);

  // optional int32 equipment_resource = 22 [deprecated = true];
  inline bool has_equipment_resource() const PROTOBUF_DEPRECATED;
  inline void clear_equipment_resource() PROTOBUF_DEPRECATED;
  static const int kEquipmentResourceFieldNumber = 22;
  inline ::google::protobuf::int32 equipment_resource() const PROTOBUF_DEPRECATED;
  inline void set_equipment_resource(::google::protobuf::int32 value) PROTOBUF_DEPRECATED;

  // optional int32 race = 23;
  inline bool has_race() const;
  inline void clear_race();
  static const int kRaceFieldNumber = 23;
  inline ::google::protobuf::int32 race() const;
  inline void set_race(::google::protobuf::int32 value);

  // optional int32 tianjie = 24;
  inline bool has_tianjie() const;
  inline void clear_tianjie();
  static const int kTianjieFieldNumber = 24;
  inline ::google::protobuf::int32 tianjie() const;
  inline void set_tianjie(::google::protobuf::int32 value);

  // optional int32 tianzui = 25;
  inline bool has_tianzui() const;
  inline void clear_tianzui();
  static const int kTianzuiFieldNumber = 25;
  inline ::google::protobuf::int32 tianzui() const;
  inline void set_tianzui(::google::protobuf::int32 value);

  // optional int64 equipment_resource2 = 27;
  inline bool has_equipment_resource2() const;
  inline void clear_equipment_resource2();
  static const int kEquipmentResource2FieldNumber = 27;
  inline ::google::protobuf::int64 equipment_resource2() const;
  inline void set_equipment_resource2(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:app.message.GuildMemberProto)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_enter_guild_time();
  inline void clear_has_enter_guild_time();
  inline void set_has_contribution_point();
  inline void clear_has_contribution_point();
  inline void set_has_nick_name();
  inline void clear_has_nick_name();
  inline void set_has_group_name();
  inline void clear_has_group_name();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_fight_amount();
  inline void clear_has_fight_amount();
  inline void set_has_last_offline_time();
  inline void clear_has_last_offline_time();
  inline void set_has_mount_level();
  inline void clear_has_mount_level();
  inline void set_has_feng_wu_level();
  inline void clear_has_feng_wu_level();
  inline void set_has_is_online();
  inline void clear_has_is_online();
  inline void set_has_scene_id();
  inline void clear_has_scene_id();
  inline void set_has_super_arm_level();
  inline void clear_has_super_arm_level();
  inline void set_has_history_gift_goods_1();
  inline void clear_has_history_gift_goods_1();
  inline void set_has_history_gift_goods_2();
  inline void clear_has_history_gift_goods_2();
  inline void set_has_history_gift_goods_3();
  inline void clear_has_history_gift_goods_3();
  inline void set_has_history_gift_goods_4();
  inline void clear_has_history_gift_goods_4();
  inline void set_has_history_gift_money();
  inline void clear_has_history_gift_money();
  inline void set_has_super_weapon_fight_amount();
  inline void clear_has_super_weapon_fight_amount();
  inline void set_has_challenge_assist_times();
  inline void clear_has_challenge_assist_times();
  inline void set_has_challenge_sequence();
  inline void clear_has_challenge_sequence();
  inline void set_has_equipment_resource();
  inline void clear_has_equipment_resource();
  inline void set_has_race();
  inline void clear_has_race();
  inline void set_has_tianjie();
  inline void clear_has_tianjie();
  inline void set_has_tianzui();
  inline void clear_has_tianzui();
  inline void set_has_equipment_resource2();
  inline void clear_has_equipment_resource2();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::std::string* name_;
  ::google::protobuf::int64 enter_guild_time_;
  ::std::string* nick_name_;
  ::google::protobuf::int32 contribution_point_;
  ::google::protobuf::int32 level_;
  ::std::string* group_name_;
  ::google::protobuf::int32 fight_amount_;
  ::google::protobuf::int32 mount_level_;
  ::google::protobuf::int64 last_offline_time_;
  ::google::protobuf::int32 feng_wu_level_;
  bool is_online_;
  ::google::protobuf::int32 scene_id_;
  ::google::protobuf::int32 super_arm_level_;
  ::google::protobuf::int32 history_gift_goods_1_;
  ::google::protobuf::int32 history_gift_goods_2_;
  ::google::protobuf::int32 history_gift_goods_3_;
  ::google::protobuf::int32 history_gift_goods_4_;
  ::google::protobuf::int64 history_gift_money_;
  ::google::protobuf::int32 super_weapon_fight_amount_;
  ::google::protobuf::int32 challenge_assist_times_;
  ::google::protobuf::int32 challenge_sequence_;
  ::google::protobuf::int32 equipment_resource_;
  ::google::protobuf::int32 race_;
  ::google::protobuf::int32 tianjie_;
  ::google::protobuf::int64 equipment_resource2_;
  ::google::protobuf::int32 tianzui_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(27 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildMemberProto* default_instance_;
};
// -------------------------------------------------------------------

class GuildProto : public ::google::protobuf::Message {
 public:
  GuildProto();
  virtual ~GuildProto();

  GuildProto(const GuildProto& from);

  inline GuildProto& operator=(const GuildProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildProto& default_instance();

  void Swap(GuildProto* other);

  // implements Message ----------------------------------------------

  GuildProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildProto& from);
  void MergeFrom(const GuildProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes guild_name = 1;
  inline bool has_guild_name() const;
  inline void clear_guild_name();
  static const int kGuildNameFieldNumber = 1;
  inline const ::std::string& guild_name() const;
  inline void set_guild_name(const ::std::string& value);
  inline void set_guild_name(const char* value);
  inline void set_guild_name(const void* value, size_t size);
  inline ::std::string* mutable_guild_name();
  inline ::std::string* release_guild_name();
  inline void set_allocated_guild_name(::std::string* guild_name);

  // optional bytes flag_name = 2;
  inline bool has_flag_name() const;
  inline void clear_flag_name();
  static const int kFlagNameFieldNumber = 2;
  inline const ::std::string& flag_name() const;
  inline void set_flag_name(const ::std::string& value);
  inline void set_flag_name(const char* value);
  inline void set_flag_name(const void* value, size_t size);
  inline ::std::string* mutable_flag_name();
  inline ::std::string* release_flag_name();
  inline void set_allocated_flag_name(::std::string* flag_name);

  // optional int32 flag_kind = 3;
  inline bool has_flag_kind() const;
  inline void clear_flag_kind();
  static const int kFlagKindFieldNumber = 3;
  inline ::google::protobuf::int32 flag_kind() const;
  inline void set_flag_kind(::google::protobuf::int32 value);

  // optional int32 flag_level = 4;
  inline bool has_flag_level() const;
  inline void clear_flag_level();
  static const int kFlagLevelFieldNumber = 4;
  inline ::google::protobuf::int32 flag_level() const;
  inline void set_flag_level(::google::protobuf::int32 value);

  // optional bool is_auto_accept_join_request = 5;
  inline bool has_is_auto_accept_join_request() const;
  inline void clear_is_auto_accept_join_request();
  static const int kIsAutoAcceptJoinRequestFieldNumber = 5;
  inline bool is_auto_accept_join_request() const;
  inline void set_is_auto_accept_join_request(bool value);

  // repeated .app.message.GuildMemberProto members = 6;
  inline int members_size() const;
  inline void clear_members();
  static const int kMembersFieldNumber = 6;
  inline const ::app::message::GuildMemberProto& members(int index) const;
  inline ::app::message::GuildMemberProto* mutable_members(int index);
  inline ::app::message::GuildMemberProto* add_members();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::GuildMemberProto >&
      members() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::GuildMemberProto >*
      mutable_members();

  // optional int64 leader_id = 7;
  inline bool has_leader_id() const;
  inline void clear_leader_id();
  static const int kLeaderIdFieldNumber = 7;
  inline ::google::protobuf::int64 leader_id() const;
  inline void set_leader_id(::google::protobuf::int64 value);

  // optional int64 vice_leader_id = 8;
  inline bool has_vice_leader_id() const;
  inline void clear_vice_leader_id();
  static const int kViceLeaderIdFieldNumber = 8;
  inline ::google::protobuf::int64 vice_leader_id() const;
  inline void set_vice_leader_id(::google::protobuf::int64 value);

  // optional int64 tang_leader_id = 9 [deprecated = true];
  inline bool has_tang_leader_id() const PROTOBUF_DEPRECATED;
  inline void clear_tang_leader_id() PROTOBUF_DEPRECATED;
  static const int kTangLeaderIdFieldNumber = 9;
  inline ::google::protobuf::int64 tang_leader_id() const PROTOBUF_DEPRECATED;
  inline void set_tang_leader_id(::google::protobuf::int64 value) PROTOBUF_DEPRECATED;

  // optional int32 max_hero_count = 10;
  inline bool has_max_hero_count() const;
  inline void clear_max_hero_count();
  static const int kMaxHeroCountFieldNumber = 10;
  inline ::google::protobuf::int32 max_hero_count() const;
  inline void set_max_hero_count(::google::protobuf::int32 value);

  // optional int64 create_time = 11;
  inline bool has_create_time() const;
  inline void clear_create_time();
  static const int kCreateTimeFieldNumber = 11;
  inline ::google::protobuf::int64 create_time() const;
  inline void set_create_time(::google::protobuf::int64 value);

  // optional int32 gift_goods_1 = 12;
  inline bool has_gift_goods_1() const;
  inline void clear_gift_goods_1();
  static const int kGiftGoods1FieldNumber = 12;
  inline ::google::protobuf::int32 gift_goods_1() const;
  inline void set_gift_goods_1(::google::protobuf::int32 value);

  // optional int32 gift_goods_2 = 13;
  inline bool has_gift_goods_2() const;
  inline void clear_gift_goods_2();
  static const int kGiftGoods2FieldNumber = 13;
  inline ::google::protobuf::int32 gift_goods_2() const;
  inline void set_gift_goods_2(::google::protobuf::int32 value);

  // optional int32 gift_goods_3 = 14;
  inline bool has_gift_goods_3() const;
  inline void clear_gift_goods_3();
  static const int kGiftGoods3FieldNumber = 14;
  inline ::google::protobuf::int32 gift_goods_3() const;
  inline void set_gift_goods_3(::google::protobuf::int32 value);

  // optional int32 gift_goods_4 = 15;
  inline bool has_gift_goods_4() const;
  inline void clear_gift_goods_4();
  static const int kGiftGoods4FieldNumber = 15;
  inline ::google::protobuf::int32 gift_goods_4() const;
  inline void set_gift_goods_4(::google::protobuf::int32 value);

  // optional int64 gift_money = 16;
  inline bool has_gift_money() const;
  inline void clear_gift_money();
  static const int kGiftMoneyFieldNumber = 16;
  inline ::google::protobuf::int64 gift_money() const;
  inline void set_gift_money(::google::protobuf::int64 value);

  // optional bytes announcement = 17;
  inline bool has_announcement() const;
  inline void clear_announcement();
  static const int kAnnouncementFieldNumber = 17;
  inline const ::std::string& announcement() const;
  inline void set_announcement(const ::std::string& value);
  inline void set_announcement(const char* value);
  inline void set_announcement(const void* value, size_t size);
  inline ::std::string* mutable_announcement();
  inline ::std::string* release_announcement();
  inline void set_allocated_announcement(::std::string* announcement);

  // optional int64 change_announcement_time = 18;
  inline bool has_change_announcement_time() const;
  inline void clear_change_announcement_time();
  static const int kChangeAnnouncementTimeFieldNumber = 18;
  inline ::google::protobuf::int64 change_announcement_time() const;
  inline void set_change_announcement_time(::google::protobuf::int64 value);

  // repeated int32 contribution_goods_already_bought = 19 [deprecated = true];
  inline int contribution_goods_already_bought_size() const PROTOBUF_DEPRECATED;
  inline void clear_contribution_goods_already_bought() PROTOBUF_DEPRECATED;
  static const int kContributionGoodsAlreadyBoughtFieldNumber = 19;
  inline ::google::protobuf::int32 contribution_goods_already_bought(int index) const PROTOBUF_DEPRECATED;
  inline void set_contribution_goods_already_bought(int index, ::google::protobuf::int32 value) PROTOBUF_DEPRECATED;
  inline void add_contribution_goods_already_bought(::google::protobuf::int32 value) PROTOBUF_DEPRECATED;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      contribution_goods_already_bought() const PROTOBUF_DEPRECATED;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_contribution_goods_already_bought() PROTOBUF_DEPRECATED;

  // optional int32 guild_tower_level = 20;
  inline bool has_guild_tower_level() const;
  inline void clear_guild_tower_level();
  static const int kGuildTowerLevelFieldNumber = 20;
  inline ::google::protobuf::int32 guild_tower_level() const;
  inline void set_guild_tower_level(::google::protobuf::int32 value);

  // optional bool is_complete_guild_plant = 21;
  inline bool has_is_complete_guild_plant() const;
  inline void clear_is_complete_guild_plant();
  static const int kIsCompleteGuildPlantFieldNumber = 21;
  inline bool is_complete_guild_plant() const;
  inline void set_is_complete_guild_plant(bool value);

  // optional bool active_degree_full = 50;
  inline bool has_active_degree_full() const;
  inline void clear_active_degree_full();
  static const int kActiveDegreeFullFieldNumber = 50;
  inline bool active_degree_full() const;
  inline void set_active_degree_full(bool value);

  // repeated int64 active_hero_id = 51;
  inline int active_hero_id_size() const;
  inline void clear_active_hero_id();
  static const int kActiveHeroIdFieldNumber = 51;
  inline ::google::protobuf::int64 active_hero_id(int index) const;
  inline void set_active_hero_id(int index, ::google::protobuf::int64 value);
  inline void add_active_hero_id(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      active_hero_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_active_hero_id();

  // optional int32 dismiss_warning_level = 52;
  inline bool has_dismiss_warning_level() const;
  inline void clear_dismiss_warning_level();
  static const int kDismissWarningLevelFieldNumber = 52;
  inline ::google::protobuf::int32 dismiss_warning_level() const;
  inline void set_dismiss_warning_level(::google::protobuf::int32 value);

  // repeated bytes friend_guild = 53;
  inline int friend_guild_size() const;
  inline void clear_friend_guild();
  static const int kFriendGuildFieldNumber = 53;
  inline const ::std::string& friend_guild(int index) const;
  inline ::std::string* mutable_friend_guild(int index);
  inline void set_friend_guild(int index, const ::std::string& value);
  inline void set_friend_guild(int index, const char* value);
  inline void set_friend_guild(int index, const void* value, size_t size);
  inline ::std::string* add_friend_guild();
  inline void add_friend_guild(const ::std::string& value);
  inline void add_friend_guild(const char* value);
  inline void add_friend_guild(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& friend_guild() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_friend_guild();

  // repeated bytes enemy_guild = 54;
  inline int enemy_guild_size() const;
  inline void clear_enemy_guild();
  static const int kEnemyGuildFieldNumber = 54;
  inline const ::std::string& enemy_guild(int index) const;
  inline ::std::string* mutable_enemy_guild(int index);
  inline void set_enemy_guild(int index, const ::std::string& value);
  inline void set_enemy_guild(int index, const char* value);
  inline void set_enemy_guild(int index, const void* value, size_t size);
  inline ::std::string* add_enemy_guild();
  inline void add_enemy_guild(const ::std::string& value);
  inline void add_enemy_guild(const char* value);
  inline void add_enemy_guild(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& enemy_guild() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_enemy_guild();

  // repeated int32 server_contribution_goods_id = 55 [deprecated = true];
  inline int server_contribution_goods_id_size() const PROTOBUF_DEPRECATED;
  inline void clear_server_contribution_goods_id() PROTOBUF_DEPRECATED;
  static const int kServerContributionGoodsIdFieldNumber = 55;
  inline ::google::protobuf::int32 server_contribution_goods_id(int index) const PROTOBUF_DEPRECATED;
  inline void set_server_contribution_goods_id(int index, ::google::protobuf::int32 value) PROTOBUF_DEPRECATED;
  inline void add_server_contribution_goods_id(::google::protobuf::int32 value) PROTOBUF_DEPRECATED;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      server_contribution_goods_id() const PROTOBUF_DEPRECATED;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_server_contribution_goods_id() PROTOBUF_DEPRECATED;

  // repeated int32 server_contribution_bought_count = 56 [deprecated = true];
  inline int server_contribution_bought_count_size() const PROTOBUF_DEPRECATED;
  inline void clear_server_contribution_bought_count() PROTOBUF_DEPRECATED;
  static const int kServerContributionBoughtCountFieldNumber = 56;
  inline ::google::protobuf::int32 server_contribution_bought_count(int index) const PROTOBUF_DEPRECATED;
  inline void set_server_contribution_bought_count(int index, ::google::protobuf::int32 value) PROTOBUF_DEPRECATED;
  inline void add_server_contribution_bought_count(::google::protobuf::int32 value) PROTOBUF_DEPRECATED;
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      server_contribution_bought_count() const PROTOBUF_DEPRECATED;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_server_contribution_bought_count() PROTOBUF_DEPRECATED;

  // repeated bytes been_added_enemy_not_notified = 57;
  inline int been_added_enemy_not_notified_size() const;
  inline void clear_been_added_enemy_not_notified();
  static const int kBeenAddedEnemyNotNotifiedFieldNumber = 57;
  inline const ::std::string& been_added_enemy_not_notified(int index) const;
  inline ::std::string* mutable_been_added_enemy_not_notified(int index);
  inline void set_been_added_enemy_not_notified(int index, const ::std::string& value);
  inline void set_been_added_enemy_not_notified(int index, const char* value);
  inline void set_been_added_enemy_not_notified(int index, const void* value, size_t size);
  inline ::std::string* add_been_added_enemy_not_notified();
  inline void add_been_added_enemy_not_notified(const ::std::string& value);
  inline void add_been_added_enemy_not_notified(const char* value);
  inline void add_been_added_enemy_not_notified(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& been_added_enemy_not_notified() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_been_added_enemy_not_notified();

  // repeated bytes been_removed_enemy_not_notified = 58;
  inline int been_removed_enemy_not_notified_size() const;
  inline void clear_been_removed_enemy_not_notified();
  static const int kBeenRemovedEnemyNotNotifiedFieldNumber = 58;
  inline const ::std::string& been_removed_enemy_not_notified(int index) const;
  inline ::std::string* mutable_been_removed_enemy_not_notified(int index);
  inline void set_been_removed_enemy_not_notified(int index, const ::std::string& value);
  inline void set_been_removed_enemy_not_notified(int index, const char* value);
  inline void set_been_removed_enemy_not_notified(int index, const void* value, size_t size);
  inline ::std::string* add_been_removed_enemy_not_notified();
  inline void add_been_removed_enemy_not_notified(const ::std::string& value);
  inline void add_been_removed_enemy_not_notified(const char* value);
  inline void add_been_removed_enemy_not_notified(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& been_removed_enemy_not_notified() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_been_removed_enemy_not_notified();

  // repeated bytes been_removed_friend_not_notified = 61;
  inline int been_removed_friend_not_notified_size() const;
  inline void clear_been_removed_friend_not_notified();
  static const int kBeenRemovedFriendNotNotifiedFieldNumber = 61;
  inline const ::std::string& been_removed_friend_not_notified(int index) const;
  inline ::std::string* mutable_been_removed_friend_not_notified(int index);
  inline void set_been_removed_friend_not_notified(int index, const ::std::string& value);
  inline void set_been_removed_friend_not_notified(int index, const char* value);
  inline void set_been_removed_friend_not_notified(int index, const void* value, size_t size);
  inline ::std::string* add_been_removed_friend_not_notified();
  inline void add_been_removed_friend_not_notified(const ::std::string& value);
  inline void add_been_removed_friend_not_notified(const char* value);
  inline void add_been_removed_friend_not_notified(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& been_removed_friend_not_notified() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_been_removed_friend_not_notified();

  // repeated bytes server_news = 59;
  inline int server_news_size() const;
  inline void clear_server_news();
  static const int kServerNewsFieldNumber = 59;
  inline const ::std::string& server_news(int index) const;
  inline ::std::string* mutable_server_news(int index);
  inline void set_server_news(int index, const ::std::string& value);
  inline void set_server_news(int index, const char* value);
  inline void set_server_news(int index, const void* value, size_t size);
  inline ::std::string* add_server_news();
  inline void add_server_news(const ::std::string& value);
  inline void add_server_news(const char* value);
  inline void add_server_news(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& server_news() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_server_news();

  // optional int32 server_id = 60;
  inline bool has_server_id() const;
  inline void clear_server_id();
  static const int kServerIdFieldNumber = 60;
  inline ::google::protobuf::int32 server_id() const;
  inline void set_server_id(::google::protobuf::int32 value);

  // optional int32 operator_id = 63;
  inline bool has_operator_id() const;
  inline void clear_operator_id();
  static const int kOperatorIdFieldNumber = 63;
  inline ::google::protobuf::int32 operator_id() const;
  inline void set_operator_id(::google::protobuf::int32 value);

  // repeated .app.message.ChallengeFastCrossProto fast_cross_data = 62;
  inline int fast_cross_data_size() const;
  inline void clear_fast_cross_data();
  static const int kFastCrossDataFieldNumber = 62;
  inline const ::app::message::ChallengeFastCrossProto& fast_cross_data(int index) const;
  inline ::app::message::ChallengeFastCrossProto* mutable_fast_cross_data(int index);
  inline ::app::message::ChallengeFastCrossProto* add_fast_cross_data();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::ChallengeFastCrossProto >&
      fast_cross_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::ChallengeFastCrossProto >*
      mutable_fast_cross_data();

  // optional .app.message.GuildDungeonBossKilledProto guild_dungeon_boss_killed = 64;
  inline bool has_guild_dungeon_boss_killed() const;
  inline void clear_guild_dungeon_boss_killed();
  static const int kGuildDungeonBossKilledFieldNumber = 64;
  inline const ::app::message::GuildDungeonBossKilledProto& guild_dungeon_boss_killed() const;
  inline ::app::message::GuildDungeonBossKilledProto* mutable_guild_dungeon_boss_killed();
  inline ::app::message::GuildDungeonBossKilledProto* release_guild_dungeon_boss_killed();
  inline void set_allocated_guild_dungeon_boss_killed(::app::message::GuildDungeonBossKilledProto* guild_dungeon_boss_killed);

  // repeated int64 new_tang_leader_id = 65;
  inline int new_tang_leader_id_size() const;
  inline void clear_new_tang_leader_id();
  static const int kNewTangLeaderIdFieldNumber = 65;
  inline ::google::protobuf::int64 new_tang_leader_id(int index) const;
  inline void set_new_tang_leader_id(int index, ::google::protobuf::int64 value);
  inline void add_new_tang_leader_id(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      new_tang_leader_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_new_tang_leader_id();

  // optional .app.message.ChengBaProto cheng_ba_proto = 66;
  inline bool has_cheng_ba_proto() const;
  inline void clear_cheng_ba_proto();
  static const int kChengBaProtoFieldNumber = 66;
  inline const ::app::message::ChengBaProto& cheng_ba_proto() const;
  inline ::app::message::ChengBaProto* mutable_cheng_ba_proto();
  inline ::app::message::ChengBaProto* release_cheng_ba_proto();
  inline void set_allocated_cheng_ba_proto(::app::message::ChengBaProto* cheng_ba_proto);

  // repeated int64 active_hero_id2 = 67;
  inline int active_hero_id2_size() const;
  inline void clear_active_hero_id2();
  static const int kActiveHeroId2FieldNumber = 67;
  inline ::google::protobuf::int64 active_hero_id2(int index) const;
  inline void set_active_hero_id2(int index, ::google::protobuf::int64 value);
  inline void add_active_hero_id2(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      active_hero_id2() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_active_hero_id2();

  // optional .app.message.LongXianGuildStatProto lx_guild_stat = 68;
  inline bool has_lx_guild_stat() const;
  inline void clear_lx_guild_stat();
  static const int kLxGuildStatFieldNumber = 68;
  inline const ::app::message::LongXianGuildStatProto& lx_guild_stat() const;
  inline ::app::message::LongXianGuildStatProto* mutable_lx_guild_stat();
  inline ::app::message::LongXianGuildStatProto* release_lx_guild_stat();
  inline void set_allocated_lx_guild_stat(::app::message::LongXianGuildStatProto* lx_guild_stat);

  // optional .app.message.GuildHongBaosProto hbs = 69;
  inline bool has_hbs() const;
  inline void clear_hbs();
  static const int kHbsFieldNumber = 69;
  inline const ::app::message::GuildHongBaosProto& hbs() const;
  inline ::app::message::GuildHongBaosProto* mutable_hbs();
  inline ::app::message::GuildHongBaosProto* release_hbs();
  inline void set_allocated_hbs(::app::message::GuildHongBaosProto* hbs);

  // repeated .app.message.TongTianTaFastCrossProto tong_tain_ta_fast_cross_data = 70;
  inline int tong_tain_ta_fast_cross_data_size() const;
  inline void clear_tong_tain_ta_fast_cross_data();
  static const int kTongTainTaFastCrossDataFieldNumber = 70;
  inline const ::app::message::TongTianTaFastCrossProto& tong_tain_ta_fast_cross_data(int index) const;
  inline ::app::message::TongTianTaFastCrossProto* mutable_tong_tain_ta_fast_cross_data(int index);
  inline ::app::message::TongTianTaFastCrossProto* add_tong_tain_ta_fast_cross_data();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::TongTianTaFastCrossProto >&
      tong_tain_ta_fast_cross_data() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::TongTianTaFastCrossProto >*
      mutable_tong_tain_ta_fast_cross_data();

  // optional .app.message.GuildBossCard boss_card = 71;
  inline bool has_boss_card() const;
  inline void clear_boss_card();
  static const int kBossCardFieldNumber = 71;
  inline const ::app::message::GuildBossCard& boss_card() const;
  inline ::app::message::GuildBossCard* mutable_boss_card();
  inline ::app::message::GuildBossCard* release_boss_card();
  inline void set_allocated_boss_card(::app::message::GuildBossCard* boss_card);

  // @@protoc_insertion_point(class_scope:app.message.GuildProto)
 private:
  inline void set_has_guild_name();
  inline void clear_has_guild_name();
  inline void set_has_flag_name();
  inline void clear_has_flag_name();
  inline void set_has_flag_kind();
  inline void clear_has_flag_kind();
  inline void set_has_flag_level();
  inline void clear_has_flag_level();
  inline void set_has_is_auto_accept_join_request();
  inline void clear_has_is_auto_accept_join_request();
  inline void set_has_leader_id();
  inline void clear_has_leader_id();
  inline void set_has_vice_leader_id();
  inline void clear_has_vice_leader_id();
  inline void set_has_tang_leader_id();
  inline void clear_has_tang_leader_id();
  inline void set_has_max_hero_count();
  inline void clear_has_max_hero_count();
  inline void set_has_create_time();
  inline void clear_has_create_time();
  inline void set_has_gift_goods_1();
  inline void clear_has_gift_goods_1();
  inline void set_has_gift_goods_2();
  inline void clear_has_gift_goods_2();
  inline void set_has_gift_goods_3();
  inline void clear_has_gift_goods_3();
  inline void set_has_gift_goods_4();
  inline void clear_has_gift_goods_4();
  inline void set_has_gift_money();
  inline void clear_has_gift_money();
  inline void set_has_announcement();
  inline void clear_has_announcement();
  inline void set_has_change_announcement_time();
  inline void clear_has_change_announcement_time();
  inline void set_has_guild_tower_level();
  inline void clear_has_guild_tower_level();
  inline void set_has_is_complete_guild_plant();
  inline void clear_has_is_complete_guild_plant();
  inline void set_has_active_degree_full();
  inline void clear_has_active_degree_full();
  inline void set_has_dismiss_warning_level();
  inline void clear_has_dismiss_warning_level();
  inline void set_has_server_id();
  inline void clear_has_server_id();
  inline void set_has_operator_id();
  inline void clear_has_operator_id();
  inline void set_has_guild_dungeon_boss_killed();
  inline void clear_has_guild_dungeon_boss_killed();
  inline void set_has_cheng_ba_proto();
  inline void clear_has_cheng_ba_proto();
  inline void set_has_lx_guild_stat();
  inline void clear_has_lx_guild_stat();
  inline void set_has_hbs();
  inline void clear_has_hbs();
  inline void set_has_boss_card();
  inline void clear_has_boss_card();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* guild_name_;
  ::std::string* flag_name_;
  ::google::protobuf::int32 flag_kind_;
  ::google::protobuf::int32 flag_level_;
  ::google::protobuf::RepeatedPtrField< ::app::message::GuildMemberProto > members_;
  ::google::protobuf::int64 leader_id_;
  ::google::protobuf::int64 vice_leader_id_;
  ::google::protobuf::int64 tang_leader_id_;
  ::google::protobuf::int32 max_hero_count_;
  ::google::protobuf::int32 gift_goods_1_;
  ::google::protobuf::int64 create_time_;
  ::google::protobuf::int32 gift_goods_2_;
  ::google::protobuf::int32 gift_goods_3_;
  ::google::protobuf::int32 gift_goods_4_;
  bool is_auto_accept_join_request_;
  bool is_complete_guild_plant_;
  bool active_degree_full_;
  ::google::protobuf::int64 gift_money_;
  ::std::string* announcement_;
  ::google::protobuf::int64 change_announcement_time_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > contribution_goods_already_bought_;
  ::google::protobuf::int32 guild_tower_level_;
  ::google::protobuf::int32 dismiss_warning_level_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > active_hero_id_;
  ::google::protobuf::RepeatedPtrField< ::std::string> friend_guild_;
  ::google::protobuf::RepeatedPtrField< ::std::string> enemy_guild_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > server_contribution_goods_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > server_contribution_bought_count_;
  ::google::protobuf::RepeatedPtrField< ::std::string> been_added_enemy_not_notified_;
  ::google::protobuf::RepeatedPtrField< ::std::string> been_removed_enemy_not_notified_;
  ::google::protobuf::RepeatedPtrField< ::std::string> been_removed_friend_not_notified_;
  ::google::protobuf::RepeatedPtrField< ::std::string> server_news_;
  ::google::protobuf::int32 server_id_;
  ::google::protobuf::int32 operator_id_;
  ::google::protobuf::RepeatedPtrField< ::app::message::ChallengeFastCrossProto > fast_cross_data_;
  ::app::message::GuildDungeonBossKilledProto* guild_dungeon_boss_killed_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > new_tang_leader_id_;
  ::app::message::ChengBaProto* cheng_ba_proto_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > active_hero_id2_;
  ::app::message::LongXianGuildStatProto* lx_guild_stat_;
  ::app::message::GuildHongBaosProto* hbs_;
  ::google::protobuf::RepeatedPtrField< ::app::message::TongTianTaFastCrossProto > tong_tain_ta_fast_cross_data_;
  ::app::message::GuildBossCard* boss_card_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(43 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildProto* default_instance_;
};
// -------------------------------------------------------------------

class GuildHongBaosProto : public ::google::protobuf::Message {
 public:
  GuildHongBaosProto();
  virtual ~GuildHongBaosProto();

  GuildHongBaosProto(const GuildHongBaosProto& from);

  inline GuildHongBaosProto& operator=(const GuildHongBaosProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildHongBaosProto& default_instance();

  void Swap(GuildHongBaosProto* other);

  // implements Message ----------------------------------------------

  GuildHongBaosProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildHongBaosProto& from);
  void MergeFrom(const GuildHongBaosProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .app.message.GuildHongBaoProto hb = 1;
  inline int hb_size() const;
  inline void clear_hb();
  static const int kHbFieldNumber = 1;
  inline const ::app::message::GuildHongBaoProto& hb(int index) const;
  inline ::app::message::GuildHongBaoProto* mutable_hb(int index);
  inline ::app::message::GuildHongBaoProto* add_hb();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::GuildHongBaoProto >&
      hb() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::GuildHongBaoProto >*
      mutable_hb();

  // repeated .app.message.GuildHongBaoCollectLogProto collect_log = 2;
  inline int collect_log_size() const;
  inline void clear_collect_log();
  static const int kCollectLogFieldNumber = 2;
  inline const ::app::message::GuildHongBaoCollectLogProto& collect_log(int index) const;
  inline ::app::message::GuildHongBaoCollectLogProto* mutable_collect_log(int index);
  inline ::app::message::GuildHongBaoCollectLogProto* add_collect_log();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::GuildHongBaoCollectLogProto >&
      collect_log() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::GuildHongBaoCollectLogProto >*
      mutable_collect_log();

  // @@protoc_insertion_point(class_scope:app.message.GuildHongBaosProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::app::message::GuildHongBaoProto > hb_;
  ::google::protobuf::RepeatedPtrField< ::app::message::GuildHongBaoCollectLogProto > collect_log_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildHongBaosProto* default_instance_;
};
// -------------------------------------------------------------------

class GuildHongBaoProto : public ::google::protobuf::Message {
 public:
  GuildHongBaoProto();
  virtual ~GuildHongBaoProto();

  GuildHongBaoProto(const GuildHongBaoProto& from);

  inline GuildHongBaoProto& operator=(const GuildHongBaoProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildHongBaoProto& default_instance();

  void Swap(GuildHongBaoProto* other);

  // implements Message ----------------------------------------------

  GuildHongBaoProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildHongBaoProto& from);
  void MergeFrom(const GuildHongBaoProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 hero_id = 1;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::int64 hero_id() const;
  inline void set_hero_id(::google::protobuf::int64 value);

  // optional bytes hero_name_bytes = 2;
  inline bool has_hero_name_bytes() const;
  inline void clear_hero_name_bytes();
  static const int kHeroNameBytesFieldNumber = 2;
  inline const ::std::string& hero_name_bytes() const;
  inline void set_hero_name_bytes(const ::std::string& value);
  inline void set_hero_name_bytes(const char* value);
  inline void set_hero_name_bytes(const void* value, size_t size);
  inline ::std::string* mutable_hero_name_bytes();
  inline ::std::string* release_hero_name_bytes();
  inline void set_allocated_hero_name_bytes(::std::string* hero_name_bytes);

  // optional int32 hero_race = 3;
  inline bool has_hero_race() const;
  inline void clear_hero_race();
  static const int kHeroRaceFieldNumber = 3;
  inline ::google::protobuf::int32 hero_race() const;
  inline void set_hero_race(::google::protobuf::int32 value);

  // optional int32 total_yb = 4;
  inline bool has_total_yb() const;
  inline void clear_total_yb();
  static const int kTotalYbFieldNumber = 4;
  inline ::google::protobuf::int32 total_yb() const;
  inline void set_total_yb(::google::protobuf::int32 value);

  // optional int32 total_hb = 5;
  inline bool has_total_hb() const;
  inline void clear_total_hb();
  static const int kTotalHbFieldNumber = 5;
  inline ::google::protobuf::int32 total_hb() const;
  inline void set_total_hb(::google::protobuf::int32 value);

  // optional int32 left_yb = 6;
  inline bool has_left_yb() const;
  inline void clear_left_yb();
  static const int kLeftYbFieldNumber = 6;
  inline ::google::protobuf::int32 left_yb() const;
  inline void set_left_yb(::google::protobuf::int32 value);

  // optional int32 left_hb = 7;
  inline bool has_left_hb() const;
  inline void clear_left_hb();
  static const int kLeftHbFieldNumber = 7;
  inline ::google::protobuf::int32 left_hb() const;
  inline void set_left_hb(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:app.message.GuildHongBaoProto)
 private:
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_hero_name_bytes();
  inline void clear_has_hero_name_bytes();
  inline void set_has_hero_race();
  inline void clear_has_hero_race();
  inline void set_has_total_yb();
  inline void clear_has_total_yb();
  inline void set_has_total_hb();
  inline void clear_has_total_hb();
  inline void set_has_left_yb();
  inline void clear_has_left_yb();
  inline void set_has_left_hb();
  inline void clear_has_left_hb();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 hero_id_;
  ::std::string* hero_name_bytes_;
  ::google::protobuf::int32 hero_race_;
  ::google::protobuf::int32 total_yb_;
  ::google::protobuf::int32 total_hb_;
  ::google::protobuf::int32 left_yb_;
  ::google::protobuf::int32 left_hb_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildHongBaoProto* default_instance_;
};
// -------------------------------------------------------------------

class GuildHongBaoCollectLogProto : public ::google::protobuf::Message {
 public:
  GuildHongBaoCollectLogProto();
  virtual ~GuildHongBaoCollectLogProto();

  GuildHongBaoCollectLogProto(const GuildHongBaoCollectLogProto& from);

  inline GuildHongBaoCollectLogProto& operator=(const GuildHongBaoCollectLogProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildHongBaoCollectLogProto& default_instance();

  void Swap(GuildHongBaoCollectLogProto* other);

  // implements Message ----------------------------------------------

  GuildHongBaoCollectLogProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildHongBaoCollectLogProto& from);
  void MergeFrom(const GuildHongBaoCollectLogProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 hero_id = 1;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::int64 hero_id() const;
  inline void set_hero_id(::google::protobuf::int64 value);

  // optional bytes hero_name_bytes = 2;
  inline bool has_hero_name_bytes() const;
  inline void clear_hero_name_bytes();
  static const int kHeroNameBytesFieldNumber = 2;
  inline const ::std::string& hero_name_bytes() const;
  inline void set_hero_name_bytes(const ::std::string& value);
  inline void set_hero_name_bytes(const char* value);
  inline void set_hero_name_bytes(const void* value, size_t size);
  inline ::std::string* mutable_hero_name_bytes();
  inline ::std::string* release_hero_name_bytes();
  inline void set_allocated_hero_name_bytes(::std::string* hero_name_bytes);

  // optional int32 hero_race = 3;
  inline bool has_hero_race() const;
  inline void clear_hero_race();
  static const int kHeroRaceFieldNumber = 3;
  inline ::google::protobuf::int32 hero_race() const;
  inline void set_hero_race(::google::protobuf::int32 value);

  // optional int32 hb_idx = 4;
  inline bool has_hb_idx() const;
  inline void clear_hb_idx();
  static const int kHbIdxFieldNumber = 4;
  inline ::google::protobuf::int32 hb_idx() const;
  inline void set_hb_idx(::google::protobuf::int32 value);

  // optional int32 hb_yb = 5;
  inline bool has_hb_yb() const;
  inline void clear_hb_yb();
  static const int kHbYbFieldNumber = 5;
  inline ::google::protobuf::int32 hb_yb() const;
  inline void set_hb_yb(::google::protobuf::int32 value);

  // optional int64 time = 6;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 6;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:app.message.GuildHongBaoCollectLogProto)
 private:
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_hero_name_bytes();
  inline void clear_has_hero_name_bytes();
  inline void set_has_hero_race();
  inline void clear_has_hero_race();
  inline void set_has_hb_idx();
  inline void clear_has_hb_idx();
  inline void set_has_hb_yb();
  inline void clear_has_hb_yb();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 hero_id_;
  ::std::string* hero_name_bytes_;
  ::google::protobuf::int32 hero_race_;
  ::google::protobuf::int32 hb_idx_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::int32 hb_yb_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildHongBaoCollectLogProto* default_instance_;
};
// -------------------------------------------------------------------

class LongXianGuildStatProto : public ::google::protobuf::Message {
 public:
  LongXianGuildStatProto();
  virtual ~LongXianGuildStatProto();

  LongXianGuildStatProto(const LongXianGuildStatProto& from);

  inline LongXianGuildStatProto& operator=(const LongXianGuildStatProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LongXianGuildStatProto& default_instance();

  void Swap(LongXianGuildStatProto* other);

  // implements Message ----------------------------------------------

  LongXianGuildStatProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LongXianGuildStatProto& from);
  void MergeFrom(const LongXianGuildStatProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 scene_stat = 1;
  inline int scene_stat_size() const;
  inline void clear_scene_stat();
  static const int kSceneStatFieldNumber = 1;
  inline ::google::protobuf::int32 scene_stat(int index) const;
  inline void set_scene_stat(int index, ::google::protobuf::int32 value);
  inline void add_scene_stat(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      scene_stat() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_scene_stat();

  // repeated int32 scene_reset_times = 2;
  inline int scene_reset_times_size() const;
  inline void clear_scene_reset_times();
  static const int kSceneResetTimesFieldNumber = 2;
  inline ::google::protobuf::int32 scene_reset_times(int index) const;
  inline void set_scene_reset_times(int index, ::google::protobuf::int32 value);
  inline void add_scene_reset_times(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      scene_reset_times() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_scene_reset_times();

  // repeated bytes rank_msg = 3;
  inline int rank_msg_size() const;
  inline void clear_rank_msg();
  static const int kRankMsgFieldNumber = 3;
  inline const ::std::string& rank_msg(int index) const;
  inline ::std::string* mutable_rank_msg(int index);
  inline void set_rank_msg(int index, const ::std::string& value);
  inline void set_rank_msg(int index, const char* value);
  inline void set_rank_msg(int index, const void* value, size_t size);
  inline ::std::string* add_rank_msg();
  inline void add_rank_msg(const ::std::string& value);
  inline void add_rank_msg(const char* value);
  inline void add_rank_msg(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& rank_msg() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_rank_msg();

  // @@protoc_insertion_point(class_scope:app.message.LongXianGuildStatProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > scene_stat_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > scene_reset_times_;
  ::google::protobuf::RepeatedPtrField< ::std::string> rank_msg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static LongXianGuildStatProto* default_instance_;
};
// -------------------------------------------------------------------

class ChengBaProto : public ::google::protobuf::Message {
 public:
  ChengBaProto();
  virtual ~ChengBaProto();

  ChengBaProto(const ChengBaProto& from);

  inline ChengBaProto& operator=(const ChengBaProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChengBaProto& default_instance();

  void Swap(ChengBaProto* other);

  // implements Message ----------------------------------------------

  ChengBaProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChengBaProto& from);
  void MergeFrom(const ChengBaProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 occupy_stat = 1;
  inline int occupy_stat_size() const;
  inline void clear_occupy_stat();
  static const int kOccupyStatFieldNumber = 1;
  inline ::google::protobuf::int64 occupy_stat(int index) const;
  inline void set_occupy_stat(int index, ::google::protobuf::int64 value);
  inline void add_occupy_stat(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      occupy_stat() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_occupy_stat();

  // repeated int64 apply_attack_time = 2;
  inline int apply_attack_time_size() const;
  inline void clear_apply_attack_time();
  static const int kApplyAttackTimeFieldNumber = 2;
  inline ::google::protobuf::int64 apply_attack_time(int index) const;
  inline void set_apply_attack_time(int index, ::google::protobuf::int64 value);
  inline void add_apply_attack_time(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      apply_attack_time() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_apply_attack_time();

  // repeated .app.message.ChengBaPrizeCollectHeroIdsProto win_prize_collect_hero_ids = 3;
  inline int win_prize_collect_hero_ids_size() const;
  inline void clear_win_prize_collect_hero_ids();
  static const int kWinPrizeCollectHeroIdsFieldNumber = 3;
  inline const ::app::message::ChengBaPrizeCollectHeroIdsProto& win_prize_collect_hero_ids(int index) const;
  inline ::app::message::ChengBaPrizeCollectHeroIdsProto* mutable_win_prize_collect_hero_ids(int index);
  inline ::app::message::ChengBaPrizeCollectHeroIdsProto* add_win_prize_collect_hero_ids();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::ChengBaPrizeCollectHeroIdsProto >&
      win_prize_collect_hero_ids() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::ChengBaPrizeCollectHeroIdsProto >*
      mutable_win_prize_collect_hero_ids();

  // repeated .app.message.ChengBaPrizeCollectHeroIdsProto tax_prize_collect_hero_ids = 4;
  inline int tax_prize_collect_hero_ids_size() const;
  inline void clear_tax_prize_collect_hero_ids();
  static const int kTaxPrizeCollectHeroIdsFieldNumber = 4;
  inline const ::app::message::ChengBaPrizeCollectHeroIdsProto& tax_prize_collect_hero_ids(int index) const;
  inline ::app::message::ChengBaPrizeCollectHeroIdsProto* mutable_tax_prize_collect_hero_ids(int index);
  inline ::app::message::ChengBaPrizeCollectHeroIdsProto* add_tax_prize_collect_hero_ids();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::ChengBaPrizeCollectHeroIdsProto >&
      tax_prize_collect_hero_ids() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::ChengBaPrizeCollectHeroIdsProto >*
      mutable_tax_prize_collect_hero_ids();

  // optional int64 last_reset_daily_stat_time = 5;
  inline bool has_last_reset_daily_stat_time() const;
  inline void clear_last_reset_daily_stat_time();
  static const int kLastResetDailyStatTimeFieldNumber = 5;
  inline ::google::protobuf::int64 last_reset_daily_stat_time() const;
  inline void set_last_reset_daily_stat_time(::google::protobuf::int64 value);

  // optional bytes self_rank_key = 6;
  inline bool has_self_rank_key() const;
  inline void clear_self_rank_key();
  static const int kSelfRankKeyFieldNumber = 6;
  inline const ::std::string& self_rank_key() const;
  inline void set_self_rank_key(const ::std::string& value);
  inline void set_self_rank_key(const char* value);
  inline void set_self_rank_key(const void* value, size_t size);
  inline ::std::string* mutable_self_rank_key();
  inline ::std::string* release_self_rank_key();
  inline void set_allocated_self_rank_key(::std::string* self_rank_key);

  // @@protoc_insertion_point(class_scope:app.message.ChengBaProto)
 private:
  inline void set_has_last_reset_daily_stat_time();
  inline void clear_has_last_reset_daily_stat_time();
  inline void set_has_self_rank_key();
  inline void clear_has_self_rank_key();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > occupy_stat_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > apply_attack_time_;
  ::google::protobuf::RepeatedPtrField< ::app::message::ChengBaPrizeCollectHeroIdsProto > win_prize_collect_hero_ids_;
  ::google::protobuf::RepeatedPtrField< ::app::message::ChengBaPrizeCollectHeroIdsProto > tax_prize_collect_hero_ids_;
  ::google::protobuf::int64 last_reset_daily_stat_time_;
  ::std::string* self_rank_key_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static ChengBaProto* default_instance_;
};
// -------------------------------------------------------------------

class ChengBaRankObjProto : public ::google::protobuf::Message {
 public:
  ChengBaRankObjProto();
  virtual ~ChengBaRankObjProto();

  ChengBaRankObjProto(const ChengBaRankObjProto& from);

  inline ChengBaRankObjProto& operator=(const ChengBaRankObjProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChengBaRankObjProto& default_instance();

  void Swap(ChengBaRankObjProto* other);

  // implements Message ----------------------------------------------

  ChengBaRankObjProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChengBaRankObjProto& from);
  void MergeFrom(const ChengBaRankObjProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 operator_id = 1;
  inline bool has_operator_id() const;
  inline void clear_operator_id();
  static const int kOperatorIdFieldNumber = 1;
  inline ::google::protobuf::int32 operator_id() const;
  inline void set_operator_id(::google::protobuf::int32 value);

  // optional int32 server_id = 2;
  inline bool has_server_id() const;
  inline void clear_server_id();
  static const int kServerIdFieldNumber = 2;
  inline ::google::protobuf::int32 server_id() const;
  inline void set_server_id(::google::protobuf::int32 value);

  // optional bytes guild_name = 3;
  inline bool has_guild_name() const;
  inline void clear_guild_name();
  static const int kGuildNameFieldNumber = 3;
  inline const ::std::string& guild_name() const;
  inline void set_guild_name(const ::std::string& value);
  inline void set_guild_name(const char* value);
  inline void set_guild_name(const void* value, size_t size);
  inline ::std::string* mutable_guild_name();
  inline ::std::string* release_guild_name();
  inline void set_allocated_guild_name(::std::string* guild_name);

  // optional int32 guild_active = 4;
  inline bool has_guild_active() const;
  inline void clear_guild_active();
  static const int kGuildActiveFieldNumber = 4;
  inline ::google::protobuf::int32 guild_active() const;
  inline void set_guild_active(::google::protobuf::int32 value);

  // optional int64 guild_fighting_amount = 5;
  inline bool has_guild_fighting_amount() const;
  inline void clear_guild_fighting_amount();
  static const int kGuildFightingAmountFieldNumber = 5;
  inline ::google::protobuf::int64 guild_fighting_amount() const;
  inline void set_guild_fighting_amount(::google::protobuf::int64 value);

  // optional int32 occupy_stat = 6;
  inline bool has_occupy_stat() const;
  inline void clear_occupy_stat();
  static const int kOccupyStatFieldNumber = 6;
  inline ::google::protobuf::int32 occupy_stat() const;
  inline void set_occupy_stat(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:app.message.ChengBaRankObjProto)
 private:
  inline void set_has_operator_id();
  inline void clear_has_operator_id();
  inline void set_has_server_id();
  inline void clear_has_server_id();
  inline void set_has_guild_name();
  inline void clear_has_guild_name();
  inline void set_has_guild_active();
  inline void clear_has_guild_active();
  inline void set_has_guild_fighting_amount();
  inline void clear_has_guild_fighting_amount();
  inline void set_has_occupy_stat();
  inline void clear_has_occupy_stat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 operator_id_;
  ::google::protobuf::int32 server_id_;
  ::std::string* guild_name_;
  ::google::protobuf::int64 guild_fighting_amount_;
  ::google::protobuf::int32 guild_active_;
  ::google::protobuf::int32 occupy_stat_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static ChengBaRankObjProto* default_instance_;
};
// -------------------------------------------------------------------

class ChengBaPrizeCollectHeroIdsProto : public ::google::protobuf::Message {
 public:
  ChengBaPrizeCollectHeroIdsProto();
  virtual ~ChengBaPrizeCollectHeroIdsProto();

  ChengBaPrizeCollectHeroIdsProto(const ChengBaPrizeCollectHeroIdsProto& from);

  inline ChengBaPrizeCollectHeroIdsProto& operator=(const ChengBaPrizeCollectHeroIdsProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChengBaPrizeCollectHeroIdsProto& default_instance();

  void Swap(ChengBaPrizeCollectHeroIdsProto* other);

  // implements Message ----------------------------------------------

  ChengBaPrizeCollectHeroIdsProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChengBaPrizeCollectHeroIdsProto& from);
  void MergeFrom(const ChengBaPrizeCollectHeroIdsProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 hero_id = 1;
  inline int hero_id_size() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::int64 hero_id(int index) const;
  inline void set_hero_id(int index, ::google::protobuf::int64 value);
  inline void add_hero_id(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      hero_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_hero_id();

  // @@protoc_insertion_point(class_scope:app.message.ChengBaPrizeCollectHeroIdsProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > hero_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static ChengBaPrizeCollectHeroIdsProto* default_instance_;
};
// -------------------------------------------------------------------

class GuildDungeonBossKilledProto : public ::google::protobuf::Message {
 public:
  GuildDungeonBossKilledProto();
  virtual ~GuildDungeonBossKilledProto();

  GuildDungeonBossKilledProto(const GuildDungeonBossKilledProto& from);

  inline GuildDungeonBossKilledProto& operator=(const GuildDungeonBossKilledProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildDungeonBossKilledProto& default_instance();

  void Swap(GuildDungeonBossKilledProto* other);

  // implements Message ----------------------------------------------

  GuildDungeonBossKilledProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildDungeonBossKilledProto& from);
  void MergeFrom(const GuildDungeonBossKilledProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 scene_id_boss_sequence = 1;
  inline int scene_id_boss_sequence_size() const;
  inline void clear_scene_id_boss_sequence();
  static const int kSceneIdBossSequenceFieldNumber = 1;
  inline ::google::protobuf::int64 scene_id_boss_sequence(int index) const;
  inline void set_scene_id_boss_sequence(int index, ::google::protobuf::int64 value);
  inline void add_scene_id_boss_sequence(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      scene_id_boss_sequence() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_scene_id_boss_sequence();

  // repeated int64 boss_dead_time = 2;
  inline int boss_dead_time_size() const;
  inline void clear_boss_dead_time();
  static const int kBossDeadTimeFieldNumber = 2;
  inline ::google::protobuf::int64 boss_dead_time(int index) const;
  inline void set_boss_dead_time(int index, ::google::protobuf::int64 value);
  inline void add_boss_dead_time(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      boss_dead_time() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_boss_dead_time();

  // @@protoc_insertion_point(class_scope:app.message.GuildDungeonBossKilledProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > scene_id_boss_sequence_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > boss_dead_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildDungeonBossKilledProto* default_instance_;
};
// -------------------------------------------------------------------

class ChallengeFastCrossProto : public ::google::protobuf::Message {
 public:
  ChallengeFastCrossProto();
  virtual ~ChallengeFastCrossProto();

  ChallengeFastCrossProto(const ChallengeFastCrossProto& from);

  inline ChallengeFastCrossProto& operator=(const ChallengeFastCrossProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChallengeFastCrossProto& default_instance();

  void Swap(ChallengeFastCrossProto* other);

  // implements Message ----------------------------------------------

  ChallengeFastCrossProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChallengeFastCrossProto& from);
  void MergeFrom(const ChallengeFastCrossProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 sequence = 1;
  inline bool has_sequence() const;
  inline void clear_sequence();
  static const int kSequenceFieldNumber = 1;
  inline ::google::protobuf::int32 sequence() const;
  inline void set_sequence(::google::protobuf::int32 value);

  // optional int64 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional bytes name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 use_time = 4;
  inline bool has_use_time() const;
  inline void clear_use_time();
  static const int kUseTimeFieldNumber = 4;
  inline ::google::protobuf::int32 use_time() const;
  inline void set_use_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:app.message.ChallengeFastCrossProto)
 private:
  inline void set_has_sequence();
  inline void clear_has_sequence();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_use_time();
  inline void clear_has_use_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 sequence_;
  ::google::protobuf::int32 use_time_;
  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static ChallengeFastCrossProto* default_instance_;
};
// -------------------------------------------------------------------

class TongTianTaFastCrossProto : public ::google::protobuf::Message {
 public:
  TongTianTaFastCrossProto();
  virtual ~TongTianTaFastCrossProto();

  TongTianTaFastCrossProto(const TongTianTaFastCrossProto& from);

  inline TongTianTaFastCrossProto& operator=(const TongTianTaFastCrossProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TongTianTaFastCrossProto& default_instance();

  void Swap(TongTianTaFastCrossProto* other);

  // implements Message ----------------------------------------------

  TongTianTaFastCrossProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TongTianTaFastCrossProto& from);
  void MergeFrom(const TongTianTaFastCrossProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 sequence = 1;
  inline bool has_sequence() const;
  inline void clear_sequence();
  static const int kSequenceFieldNumber = 1;
  inline ::google::protobuf::int32 sequence() const;
  inline void set_sequence(::google::protobuf::int32 value);

  // optional int64 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional bytes name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 use_time = 4;
  inline bool has_use_time() const;
  inline void clear_use_time();
  static const int kUseTimeFieldNumber = 4;
  inline ::google::protobuf::int32 use_time() const;
  inline void set_use_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:app.message.TongTianTaFastCrossProto)
 private:
  inline void set_has_sequence();
  inline void clear_has_sequence();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_use_time();
  inline void clear_has_use_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 sequence_;
  ::google::protobuf::int32 use_time_;
  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static TongTianTaFastCrossProto* default_instance_;
};
// -------------------------------------------------------------------

class ClientNewsProto : public ::google::protobuf::Message {
 public:
  ClientNewsProto();
  virtual ~ClientNewsProto();

  ClientNewsProto(const ClientNewsProto& from);

  inline ClientNewsProto& operator=(const ClientNewsProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientNewsProto& default_instance();

  void Swap(ClientNewsProto* other);

  // implements Message ----------------------------------------------

  ClientNewsProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientNewsProto& from);
  void MergeFrom(const ClientNewsProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes news = 1;
  inline int news_size() const;
  inline void clear_news();
  static const int kNewsFieldNumber = 1;
  inline const ::std::string& news(int index) const;
  inline ::std::string* mutable_news(int index);
  inline void set_news(int index, const ::std::string& value);
  inline void set_news(int index, const char* value);
  inline void set_news(int index, const void* value, size_t size);
  inline ::std::string* add_news();
  inline void add_news(const ::std::string& value);
  inline void add_news(const char* value);
  inline void add_news(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& news() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_news();

  // @@protoc_insertion_point(class_scope:app.message.ClientNewsProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> news_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static ClientNewsProto* default_instance_;
};
// -------------------------------------------------------------------

class ClientGuildListProto : public ::google::protobuf::Message {
 public:
  ClientGuildListProto();
  virtual ~ClientGuildListProto();

  ClientGuildListProto(const ClientGuildListProto& from);

  inline ClientGuildListProto& operator=(const ClientGuildListProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientGuildListProto& default_instance();

  void Swap(ClientGuildListProto* other);

  // implements Message ----------------------------------------------

  ClientGuildListProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientGuildListProto& from);
  void MergeFrom(const ClientGuildListProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .app.message.GuildInListProto guild = 1;
  inline int guild_size() const;
  inline void clear_guild();
  static const int kGuildFieldNumber = 1;
  inline const ::app::message::GuildInListProto& guild(int index) const;
  inline ::app::message::GuildInListProto* mutable_guild(int index);
  inline ::app::message::GuildInListProto* add_guild();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::GuildInListProto >&
      guild() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::GuildInListProto >*
      mutable_guild();

  // @@protoc_insertion_point(class_scope:app.message.ClientGuildListProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::app::message::GuildInListProto > guild_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static ClientGuildListProto* default_instance_;
};
// -------------------------------------------------------------------

class GuildInListProto : public ::google::protobuf::Message {
 public:
  GuildInListProto();
  virtual ~GuildInListProto();

  GuildInListProto(const GuildInListProto& from);

  inline GuildInListProto& operator=(const GuildInListProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildInListProto& default_instance();

  void Swap(GuildInListProto* other);

  // implements Message ----------------------------------------------

  GuildInListProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildInListProto& from);
  void MergeFrom(const GuildInListProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const void* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional bytes flag_name = 2;
  inline bool has_flag_name() const;
  inline void clear_flag_name();
  static const int kFlagNameFieldNumber = 2;
  inline const ::std::string& flag_name() const;
  inline void set_flag_name(const ::std::string& value);
  inline void set_flag_name(const char* value);
  inline void set_flag_name(const void* value, size_t size);
  inline ::std::string* mutable_flag_name();
  inline ::std::string* release_flag_name();
  inline void set_allocated_flag_name(::std::string* flag_name);

  // optional int32 flag_level = 3;
  inline bool has_flag_level() const;
  inline void clear_flag_level();
  static const int kFlagLevelFieldNumber = 3;
  inline ::google::protobuf::int32 flag_level() const;
  inline void set_flag_level(::google::protobuf::int32 value);

  // optional bool is_auto_accept_join_request = 4;
  inline bool has_is_auto_accept_join_request() const;
  inline void clear_is_auto_accept_join_request();
  static const int kIsAutoAcceptJoinRequestFieldNumber = 4;
  inline bool is_auto_accept_join_request() const;
  inline void set_is_auto_accept_join_request(bool value);

  // optional int32 hero_count = 5;
  inline bool has_hero_count() const;
  inline void clear_hero_count();
  static const int kHeroCountFieldNumber = 5;
  inline ::google::protobuf::int32 hero_count() const;
  inline void set_hero_count(::google::protobuf::int32 value);

  // optional int32 max_hero_count = 6;
  inline bool has_max_hero_count() const;
  inline void clear_max_hero_count();
  static const int kMaxHeroCountFieldNumber = 6;
  inline ::google::protobuf::int32 max_hero_count() const;
  inline void set_max_hero_count(::google::protobuf::int32 value);

  // optional int64 leader_id = 18;
  inline bool has_leader_id() const;
  inline void clear_leader_id();
  static const int kLeaderIdFieldNumber = 18;
  inline ::google::protobuf::int64 leader_id() const;
  inline void set_leader_id(::google::protobuf::int64 value);

  // optional bytes leader_name = 7;
  inline bool has_leader_name() const;
  inline void clear_leader_name();
  static const int kLeaderNameFieldNumber = 7;
  inline const ::std::string& leader_name() const;
  inline void set_leader_name(const ::std::string& value);
  inline void set_leader_name(const char* value);
  inline void set_leader_name(const void* value, size_t size);
  inline ::std::string* mutable_leader_name();
  inline ::std::string* release_leader_name();
  inline void set_allocated_leader_name(::std::string* leader_name);

  // optional bool leader_online = 8;
  inline bool has_leader_online() const;
  inline void clear_leader_online();
  static const int kLeaderOnlineFieldNumber = 8;
  inline bool leader_online() const;
  inline void set_leader_online(bool value);

  // optional int32 leader_level = 13;
  inline bool has_leader_level() const;
  inline void clear_leader_level();
  static const int kLeaderLevelFieldNumber = 13;
  inline ::google::protobuf::int32 leader_level() const;
  inline void set_leader_level(::google::protobuf::int32 value);

  // optional bytes vice_leader_name = 9;
  inline bool has_vice_leader_name() const;
  inline void clear_vice_leader_name();
  static const int kViceLeaderNameFieldNumber = 9;
  inline const ::std::string& vice_leader_name() const;
  inline void set_vice_leader_name(const ::std::string& value);
  inline void set_vice_leader_name(const char* value);
  inline void set_vice_leader_name(const void* value, size_t size);
  inline ::std::string* mutable_vice_leader_name();
  inline ::std::string* release_vice_leader_name();
  inline void set_allocated_vice_leader_name(::std::string* vice_leader_name);

  // optional bool vice_leader_online = 10;
  inline bool has_vice_leader_online() const;
  inline void clear_vice_leader_online();
  static const int kViceLeaderOnlineFieldNumber = 10;
  inline bool vice_leader_online() const;
  inline void set_vice_leader_online(bool value);

  // optional int32 vice_leader_level = 14;
  inline bool has_vice_leader_level() const;
  inline void clear_vice_leader_level();
  static const int kViceLeaderLevelFieldNumber = 14;
  inline ::google::protobuf::int32 vice_leader_level() const;
  inline void set_vice_leader_level(::google::protobuf::int32 value);

  // optional int64 total_fight_amount = 11;
  inline bool has_total_fight_amount() const;
  inline void clear_total_fight_amount();
  static const int kTotalFightAmountFieldNumber = 11;
  inline ::google::protobuf::int64 total_fight_amount() const;
  inline void set_total_fight_amount(::google::protobuf::int64 value);

  // optional int64 create_time = 12;
  inline bool has_create_time() const;
  inline void clear_create_time();
  static const int kCreateTimeFieldNumber = 12;
  inline ::google::protobuf::int64 create_time() const;
  inline void set_create_time(::google::protobuf::int64 value);

  // optional int32 operator_id = 15;
  inline bool has_operator_id() const;
  inline void clear_operator_id();
  static const int kOperatorIdFieldNumber = 15;
  inline ::google::protobuf::int32 operator_id() const;
  inline void set_operator_id(::google::protobuf::int32 value);

  // optional int32 server_id = 16;
  inline bool has_server_id() const;
  inline void clear_server_id();
  static const int kServerIdFieldNumber = 16;
  inline ::google::protobuf::int32 server_id() const;
  inline void set_server_id(::google::protobuf::int32 value);

  // optional int32 territory_master_count = 17;
  inline bool has_territory_master_count() const;
  inline void clear_territory_master_count();
  static const int kTerritoryMasterCountFieldNumber = 17;
  inline ::google::protobuf::int32 territory_master_count() const;
  inline void set_territory_master_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:app.message.GuildInListProto)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_flag_name();
  inline void clear_has_flag_name();
  inline void set_has_flag_level();
  inline void clear_has_flag_level();
  inline void set_has_is_auto_accept_join_request();
  inline void clear_has_is_auto_accept_join_request();
  inline void set_has_hero_count();
  inline void clear_has_hero_count();
  inline void set_has_max_hero_count();
  inline void clear_has_max_hero_count();
  inline void set_has_leader_id();
  inline void clear_has_leader_id();
  inline void set_has_leader_name();
  inline void clear_has_leader_name();
  inline void set_has_leader_online();
  inline void clear_has_leader_online();
  inline void set_has_leader_level();
  inline void clear_has_leader_level();
  inline void set_has_vice_leader_name();
  inline void clear_has_vice_leader_name();
  inline void set_has_vice_leader_online();
  inline void clear_has_vice_leader_online();
  inline void set_has_vice_leader_level();
  inline void clear_has_vice_leader_level();
  inline void set_has_total_fight_amount();
  inline void clear_has_total_fight_amount();
  inline void set_has_create_time();
  inline void clear_has_create_time();
  inline void set_has_operator_id();
  inline void clear_has_operator_id();
  inline void set_has_server_id();
  inline void clear_has_server_id();
  inline void set_has_territory_master_count();
  inline void clear_has_territory_master_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::std::string* flag_name_;
  ::google::protobuf::int32 flag_level_;
  ::google::protobuf::int32 hero_count_;
  ::google::protobuf::int64 leader_id_;
  ::google::protobuf::int32 max_hero_count_;
  bool is_auto_accept_join_request_;
  bool leader_online_;
  bool vice_leader_online_;
  ::std::string* leader_name_;
  ::std::string* vice_leader_name_;
  ::google::protobuf::int32 leader_level_;
  ::google::protobuf::int32 vice_leader_level_;
  ::google::protobuf::int64 total_fight_amount_;
  ::google::protobuf::int64 create_time_;
  ::google::protobuf::int32 operator_id_;
  ::google::protobuf::int32 server_id_;
  ::google::protobuf::int32 territory_master_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(18 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildInListProto* default_instance_;
};
// -------------------------------------------------------------------

class GuildBossCard : public ::google::protobuf::Message {
 public:
  GuildBossCard();
  virtual ~GuildBossCard();

  GuildBossCard(const GuildBossCard& from);

  inline GuildBossCard& operator=(const GuildBossCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GuildBossCard& default_instance();

  void Swap(GuildBossCard* other);

  // implements Message ----------------------------------------------

  GuildBossCard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GuildBossCard& from);
  void MergeFrom(const GuildBossCard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 weekly_call_count = 1;
  inline bool has_weekly_call_count() const;
  inline void clear_weekly_call_count();
  static const int kWeeklyCallCountFieldNumber = 1;
  inline ::google::protobuf::int32 weekly_call_count() const;
  inline void set_weekly_call_count(::google::protobuf::int32 value);

  // optional int32 grow_up_point = 2;
  inline bool has_grow_up_point() const;
  inline void clear_grow_up_point();
  static const int kGrowUpPointFieldNumber = 2;
  inline ::google::protobuf::int32 grow_up_point() const;
  inline void set_grow_up_point(::google::protobuf::int32 value);

  // optional int32 current_card_id = 3;
  inline bool has_current_card_id() const;
  inline void clear_current_card_id();
  static const int kCurrentCardIdFieldNumber = 3;
  inline ::google::protobuf::int32 current_card_id() const;
  inline void set_current_card_id(::google::protobuf::int32 value);

  // optional int32 current_calling_card_id = 4;
  inline bool has_current_calling_card_id() const;
  inline void clear_current_calling_card_id();
  static const int kCurrentCallingCardIdFieldNumber = 4;
  inline ::google::protobuf::int32 current_calling_card_id() const;
  inline void set_current_calling_card_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:app.message.GuildBossCard)
 private:
  inline void set_has_weekly_call_count();
  inline void clear_has_weekly_call_count();
  inline void set_has_grow_up_point();
  inline void clear_has_grow_up_point();
  inline void set_has_current_card_id();
  inline void clear_has_current_card_id();
  inline void set_has_current_calling_card_id();
  inline void clear_has_current_calling_card_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 weekly_call_count_;
  ::google::protobuf::int32 grow_up_point_;
  ::google::protobuf::int32 current_card_id_;
  ::google::protobuf::int32 current_calling_card_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_guild_2eproto();
  friend void protobuf_AssignDesc_guild_2eproto();
  friend void protobuf_ShutdownFile_guild_2eproto();

  void InitAsDefaultInstance();
  static GuildBossCard* default_instance_;
};
// ===================================================================


// ===================================================================

// GuildMemberProto

// optional int64 id = 1;
inline bool GuildMemberProto::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildMemberProto::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildMemberProto::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildMemberProto::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 GuildMemberProto::id() const {
  return id_;
}
inline void GuildMemberProto::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional bytes name = 2;
inline bool GuildMemberProto::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildMemberProto::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildMemberProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildMemberProto::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GuildMemberProto::name() const {
  return *name_;
}
inline void GuildMemberProto::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GuildMemberProto::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GuildMemberProto::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildMemberProto::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* GuildMemberProto::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GuildMemberProto::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 enter_guild_time = 3;
inline bool GuildMemberProto::has_enter_guild_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildMemberProto::set_has_enter_guild_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildMemberProto::clear_has_enter_guild_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildMemberProto::clear_enter_guild_time() {
  enter_guild_time_ = GOOGLE_LONGLONG(0);
  clear_has_enter_guild_time();
}
inline ::google::protobuf::int64 GuildMemberProto::enter_guild_time() const {
  return enter_guild_time_;
}
inline void GuildMemberProto::set_enter_guild_time(::google::protobuf::int64 value) {
  set_has_enter_guild_time();
  enter_guild_time_ = value;
}

// optional int32 contribution_point = 4;
inline bool GuildMemberProto::has_contribution_point() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildMemberProto::set_has_contribution_point() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildMemberProto::clear_has_contribution_point() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildMemberProto::clear_contribution_point() {
  contribution_point_ = 0;
  clear_has_contribution_point();
}
inline ::google::protobuf::int32 GuildMemberProto::contribution_point() const {
  return contribution_point_;
}
inline void GuildMemberProto::set_contribution_point(::google::protobuf::int32 value) {
  set_has_contribution_point();
  contribution_point_ = value;
}

// optional bytes nick_name = 5;
inline bool GuildMemberProto::has_nick_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildMemberProto::set_has_nick_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildMemberProto::clear_has_nick_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildMemberProto::clear_nick_name() {
  if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
    nick_name_->clear();
  }
  clear_has_nick_name();
}
inline const ::std::string& GuildMemberProto::nick_name() const {
  return *nick_name_;
}
inline void GuildMemberProto::set_nick_name(const ::std::string& value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
}
inline void GuildMemberProto::set_nick_name(const char* value) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(value);
}
inline void GuildMemberProto::set_nick_name(const void* value, size_t size) {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  nick_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildMemberProto::mutable_nick_name() {
  set_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    nick_name_ = new ::std::string;
  }
  return nick_name_;
}
inline ::std::string* GuildMemberProto::release_nick_name() {
  clear_has_nick_name();
  if (nick_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = nick_name_;
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GuildMemberProto::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name_ != &::google::protobuf::internal::kEmptyString) {
    delete nick_name_;
  }
  if (nick_name) {
    set_has_nick_name();
    nick_name_ = nick_name;
  } else {
    clear_has_nick_name();
    nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes group_name = 6;
inline bool GuildMemberProto::has_group_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildMemberProto::set_has_group_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildMemberProto::clear_has_group_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildMemberProto::clear_group_name() {
  if (group_name_ != &::google::protobuf::internal::kEmptyString) {
    group_name_->clear();
  }
  clear_has_group_name();
}
inline const ::std::string& GuildMemberProto::group_name() const {
  return *group_name_;
}
inline void GuildMemberProto::set_group_name(const ::std::string& value) {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::kEmptyString) {
    group_name_ = new ::std::string;
  }
  group_name_->assign(value);
}
inline void GuildMemberProto::set_group_name(const char* value) {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::kEmptyString) {
    group_name_ = new ::std::string;
  }
  group_name_->assign(value);
}
inline void GuildMemberProto::set_group_name(const void* value, size_t size) {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::kEmptyString) {
    group_name_ = new ::std::string;
  }
  group_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildMemberProto::mutable_group_name() {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::kEmptyString) {
    group_name_ = new ::std::string;
  }
  return group_name_;
}
inline ::std::string* GuildMemberProto::release_group_name() {
  clear_has_group_name();
  if (group_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = group_name_;
    group_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GuildMemberProto::set_allocated_group_name(::std::string* group_name) {
  if (group_name_ != &::google::protobuf::internal::kEmptyString) {
    delete group_name_;
  }
  if (group_name) {
    set_has_group_name();
    group_name_ = group_name;
  } else {
    clear_has_group_name();
    group_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 level = 7;
inline bool GuildMemberProto::has_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuildMemberProto::set_has_level() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuildMemberProto::clear_has_level() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuildMemberProto::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 GuildMemberProto::level() const {
  return level_;
}
inline void GuildMemberProto::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional int32 fight_amount = 8;
inline bool GuildMemberProto::has_fight_amount() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GuildMemberProto::set_has_fight_amount() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GuildMemberProto::clear_has_fight_amount() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GuildMemberProto::clear_fight_amount() {
  fight_amount_ = 0;
  clear_has_fight_amount();
}
inline ::google::protobuf::int32 GuildMemberProto::fight_amount() const {
  return fight_amount_;
}
inline void GuildMemberProto::set_fight_amount(::google::protobuf::int32 value) {
  set_has_fight_amount();
  fight_amount_ = value;
}

// optional int64 last_offline_time = 9;
inline bool GuildMemberProto::has_last_offline_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GuildMemberProto::set_has_last_offline_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GuildMemberProto::clear_has_last_offline_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GuildMemberProto::clear_last_offline_time() {
  last_offline_time_ = GOOGLE_LONGLONG(0);
  clear_has_last_offline_time();
}
inline ::google::protobuf::int64 GuildMemberProto::last_offline_time() const {
  return last_offline_time_;
}
inline void GuildMemberProto::set_last_offline_time(::google::protobuf::int64 value) {
  set_has_last_offline_time();
  last_offline_time_ = value;
}

// optional int32 mount_level = 10;
inline bool GuildMemberProto::has_mount_level() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GuildMemberProto::set_has_mount_level() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GuildMemberProto::clear_has_mount_level() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GuildMemberProto::clear_mount_level() {
  mount_level_ = 0;
  clear_has_mount_level();
}
inline ::google::protobuf::int32 GuildMemberProto::mount_level() const {
  return mount_level_;
}
inline void GuildMemberProto::set_mount_level(::google::protobuf::int32 value) {
  set_has_mount_level();
  mount_level_ = value;
}

// optional int32 feng_wu_level = 11;
inline bool GuildMemberProto::has_feng_wu_level() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GuildMemberProto::set_has_feng_wu_level() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GuildMemberProto::clear_has_feng_wu_level() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GuildMemberProto::clear_feng_wu_level() {
  feng_wu_level_ = 0;
  clear_has_feng_wu_level();
}
inline ::google::protobuf::int32 GuildMemberProto::feng_wu_level() const {
  return feng_wu_level_;
}
inline void GuildMemberProto::set_feng_wu_level(::google::protobuf::int32 value) {
  set_has_feng_wu_level();
  feng_wu_level_ = value;
}

// optional bool is_online = 12;
inline bool GuildMemberProto::has_is_online() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GuildMemberProto::set_has_is_online() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GuildMemberProto::clear_has_is_online() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GuildMemberProto::clear_is_online() {
  is_online_ = false;
  clear_has_is_online();
}
inline bool GuildMemberProto::is_online() const {
  return is_online_;
}
inline void GuildMemberProto::set_is_online(bool value) {
  set_has_is_online();
  is_online_ = value;
}

// optional int32 scene_id = 13;
inline bool GuildMemberProto::has_scene_id() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GuildMemberProto::set_has_scene_id() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GuildMemberProto::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GuildMemberProto::clear_scene_id() {
  scene_id_ = 0;
  clear_has_scene_id();
}
inline ::google::protobuf::int32 GuildMemberProto::scene_id() const {
  return scene_id_;
}
inline void GuildMemberProto::set_scene_id(::google::protobuf::int32 value) {
  set_has_scene_id();
  scene_id_ = value;
}

// optional int32 super_arm_level = 26;
inline bool GuildMemberProto::has_super_arm_level() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GuildMemberProto::set_has_super_arm_level() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GuildMemberProto::clear_has_super_arm_level() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GuildMemberProto::clear_super_arm_level() {
  super_arm_level_ = 0;
  clear_has_super_arm_level();
}
inline ::google::protobuf::int32 GuildMemberProto::super_arm_level() const {
  return super_arm_level_;
}
inline void GuildMemberProto::set_super_arm_level(::google::protobuf::int32 value) {
  set_has_super_arm_level();
  super_arm_level_ = value;
}

// optional int32 history_gift_goods_1 = 14;
inline bool GuildMemberProto::has_history_gift_goods_1() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void GuildMemberProto::set_has_history_gift_goods_1() {
  _has_bits_[0] |= 0x00004000u;
}
inline void GuildMemberProto::clear_has_history_gift_goods_1() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void GuildMemberProto::clear_history_gift_goods_1() {
  history_gift_goods_1_ = 0;
  clear_has_history_gift_goods_1();
}
inline ::google::protobuf::int32 GuildMemberProto::history_gift_goods_1() const {
  return history_gift_goods_1_;
}
inline void GuildMemberProto::set_history_gift_goods_1(::google::protobuf::int32 value) {
  set_has_history_gift_goods_1();
  history_gift_goods_1_ = value;
}

// optional int32 history_gift_goods_2 = 15;
inline bool GuildMemberProto::has_history_gift_goods_2() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void GuildMemberProto::set_has_history_gift_goods_2() {
  _has_bits_[0] |= 0x00008000u;
}
inline void GuildMemberProto::clear_has_history_gift_goods_2() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void GuildMemberProto::clear_history_gift_goods_2() {
  history_gift_goods_2_ = 0;
  clear_has_history_gift_goods_2();
}
inline ::google::protobuf::int32 GuildMemberProto::history_gift_goods_2() const {
  return history_gift_goods_2_;
}
inline void GuildMemberProto::set_history_gift_goods_2(::google::protobuf::int32 value) {
  set_has_history_gift_goods_2();
  history_gift_goods_2_ = value;
}

// optional int32 history_gift_goods_3 = 16;
inline bool GuildMemberProto::has_history_gift_goods_3() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void GuildMemberProto::set_has_history_gift_goods_3() {
  _has_bits_[0] |= 0x00010000u;
}
inline void GuildMemberProto::clear_has_history_gift_goods_3() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void GuildMemberProto::clear_history_gift_goods_3() {
  history_gift_goods_3_ = 0;
  clear_has_history_gift_goods_3();
}
inline ::google::protobuf::int32 GuildMemberProto::history_gift_goods_3() const {
  return history_gift_goods_3_;
}
inline void GuildMemberProto::set_history_gift_goods_3(::google::protobuf::int32 value) {
  set_has_history_gift_goods_3();
  history_gift_goods_3_ = value;
}

// optional int32 history_gift_goods_4 = 17;
inline bool GuildMemberProto::has_history_gift_goods_4() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void GuildMemberProto::set_has_history_gift_goods_4() {
  _has_bits_[0] |= 0x00020000u;
}
inline void GuildMemberProto::clear_has_history_gift_goods_4() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void GuildMemberProto::clear_history_gift_goods_4() {
  history_gift_goods_4_ = 0;
  clear_has_history_gift_goods_4();
}
inline ::google::protobuf::int32 GuildMemberProto::history_gift_goods_4() const {
  return history_gift_goods_4_;
}
inline void GuildMemberProto::set_history_gift_goods_4(::google::protobuf::int32 value) {
  set_has_history_gift_goods_4();
  history_gift_goods_4_ = value;
}

// optional int64 history_gift_money = 18;
inline bool GuildMemberProto::has_history_gift_money() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void GuildMemberProto::set_has_history_gift_money() {
  _has_bits_[0] |= 0x00040000u;
}
inline void GuildMemberProto::clear_has_history_gift_money() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void GuildMemberProto::clear_history_gift_money() {
  history_gift_money_ = GOOGLE_LONGLONG(0);
  clear_has_history_gift_money();
}
inline ::google::protobuf::int64 GuildMemberProto::history_gift_money() const {
  return history_gift_money_;
}
inline void GuildMemberProto::set_history_gift_money(::google::protobuf::int64 value) {
  set_has_history_gift_money();
  history_gift_money_ = value;
}

// optional int32 super_weapon_fight_amount = 19 [deprecated = true];
inline bool GuildMemberProto::has_super_weapon_fight_amount() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void GuildMemberProto::set_has_super_weapon_fight_amount() {
  _has_bits_[0] |= 0x00080000u;
}
inline void GuildMemberProto::clear_has_super_weapon_fight_amount() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void GuildMemberProto::clear_super_weapon_fight_amount() {
  super_weapon_fight_amount_ = 0;
  clear_has_super_weapon_fight_amount();
}
inline ::google::protobuf::int32 GuildMemberProto::super_weapon_fight_amount() const {
  return super_weapon_fight_amount_;
}
inline void GuildMemberProto::set_super_weapon_fight_amount(::google::protobuf::int32 value) {
  set_has_super_weapon_fight_amount();
  super_weapon_fight_amount_ = value;
}

// optional int32 challenge_assist_times = 20;
inline bool GuildMemberProto::has_challenge_assist_times() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void GuildMemberProto::set_has_challenge_assist_times() {
  _has_bits_[0] |= 0x00100000u;
}
inline void GuildMemberProto::clear_has_challenge_assist_times() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void GuildMemberProto::clear_challenge_assist_times() {
  challenge_assist_times_ = 0;
  clear_has_challenge_assist_times();
}
inline ::google::protobuf::int32 GuildMemberProto::challenge_assist_times() const {
  return challenge_assist_times_;
}
inline void GuildMemberProto::set_challenge_assist_times(::google::protobuf::int32 value) {
  set_has_challenge_assist_times();
  challenge_assist_times_ = value;
}

// optional int32 challenge_sequence = 21;
inline bool GuildMemberProto::has_challenge_sequence() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void GuildMemberProto::set_has_challenge_sequence() {
  _has_bits_[0] |= 0x00200000u;
}
inline void GuildMemberProto::clear_has_challenge_sequence() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void GuildMemberProto::clear_challenge_sequence() {
  challenge_sequence_ = 0;
  clear_has_challenge_sequence();
}
inline ::google::protobuf::int32 GuildMemberProto::challenge_sequence() const {
  return challenge_sequence_;
}
inline void GuildMemberProto::set_challenge_sequence(::google::protobuf::int32 value) {
  set_has_challenge_sequence();
  challenge_sequence_ = value;
}

// optional int32 equipment_resource = 22 [deprecated = true];
inline bool GuildMemberProto::has_equipment_resource() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void GuildMemberProto::set_has_equipment_resource() {
  _has_bits_[0] |= 0x00400000u;
}
inline void GuildMemberProto::clear_has_equipment_resource() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void GuildMemberProto::clear_equipment_resource() {
  equipment_resource_ = 0;
  clear_has_equipment_resource();
}
inline ::google::protobuf::int32 GuildMemberProto::equipment_resource() const {
  return equipment_resource_;
}
inline void GuildMemberProto::set_equipment_resource(::google::protobuf::int32 value) {
  set_has_equipment_resource();
  equipment_resource_ = value;
}

// optional int32 race = 23;
inline bool GuildMemberProto::has_race() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void GuildMemberProto::set_has_race() {
  _has_bits_[0] |= 0x00800000u;
}
inline void GuildMemberProto::clear_has_race() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void GuildMemberProto::clear_race() {
  race_ = 0;
  clear_has_race();
}
inline ::google::protobuf::int32 GuildMemberProto::race() const {
  return race_;
}
inline void GuildMemberProto::set_race(::google::protobuf::int32 value) {
  set_has_race();
  race_ = value;
}

// optional int32 tianjie = 24;
inline bool GuildMemberProto::has_tianjie() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void GuildMemberProto::set_has_tianjie() {
  _has_bits_[0] |= 0x01000000u;
}
inline void GuildMemberProto::clear_has_tianjie() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void GuildMemberProto::clear_tianjie() {
  tianjie_ = 0;
  clear_has_tianjie();
}
inline ::google::protobuf::int32 GuildMemberProto::tianjie() const {
  return tianjie_;
}
inline void GuildMemberProto::set_tianjie(::google::protobuf::int32 value) {
  set_has_tianjie();
  tianjie_ = value;
}

// optional int32 tianzui = 25;
inline bool GuildMemberProto::has_tianzui() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void GuildMemberProto::set_has_tianzui() {
  _has_bits_[0] |= 0x02000000u;
}
inline void GuildMemberProto::clear_has_tianzui() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void GuildMemberProto::clear_tianzui() {
  tianzui_ = 0;
  clear_has_tianzui();
}
inline ::google::protobuf::int32 GuildMemberProto::tianzui() const {
  return tianzui_;
}
inline void GuildMemberProto::set_tianzui(::google::protobuf::int32 value) {
  set_has_tianzui();
  tianzui_ = value;
}

// optional int64 equipment_resource2 = 27;
inline bool GuildMemberProto::has_equipment_resource2() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void GuildMemberProto::set_has_equipment_resource2() {
  _has_bits_[0] |= 0x04000000u;
}
inline void GuildMemberProto::clear_has_equipment_resource2() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void GuildMemberProto::clear_equipment_resource2() {
  equipment_resource2_ = GOOGLE_LONGLONG(0);
  clear_has_equipment_resource2();
}
inline ::google::protobuf::int64 GuildMemberProto::equipment_resource2() const {
  return equipment_resource2_;
}
inline void GuildMemberProto::set_equipment_resource2(::google::protobuf::int64 value) {
  set_has_equipment_resource2();
  equipment_resource2_ = value;
}

// -------------------------------------------------------------------

// GuildProto

// optional bytes guild_name = 1;
inline bool GuildProto::has_guild_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildProto::set_has_guild_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildProto::clear_has_guild_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildProto::clear_guild_name() {
  if (guild_name_ != &::google::protobuf::internal::kEmptyString) {
    guild_name_->clear();
  }
  clear_has_guild_name();
}
inline const ::std::string& GuildProto::guild_name() const {
  return *guild_name_;
}
inline void GuildProto::set_guild_name(const ::std::string& value) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(value);
}
inline void GuildProto::set_guild_name(const char* value) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(value);
}
inline void GuildProto::set_guild_name(const void* value, size_t size) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildProto::mutable_guild_name() {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  return guild_name_;
}
inline ::std::string* GuildProto::release_guild_name() {
  clear_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guild_name_;
    guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GuildProto::set_allocated_guild_name(::std::string* guild_name) {
  if (guild_name_ != &::google::protobuf::internal::kEmptyString) {
    delete guild_name_;
  }
  if (guild_name) {
    set_has_guild_name();
    guild_name_ = guild_name;
  } else {
    clear_has_guild_name();
    guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes flag_name = 2;
inline bool GuildProto::has_flag_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildProto::set_has_flag_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildProto::clear_has_flag_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildProto::clear_flag_name() {
  if (flag_name_ != &::google::protobuf::internal::kEmptyString) {
    flag_name_->clear();
  }
  clear_has_flag_name();
}
inline const ::std::string& GuildProto::flag_name() const {
  return *flag_name_;
}
inline void GuildProto::set_flag_name(const ::std::string& value) {
  set_has_flag_name();
  if (flag_name_ == &::google::protobuf::internal::kEmptyString) {
    flag_name_ = new ::std::string;
  }
  flag_name_->assign(value);
}
inline void GuildProto::set_flag_name(const char* value) {
  set_has_flag_name();
  if (flag_name_ == &::google::protobuf::internal::kEmptyString) {
    flag_name_ = new ::std::string;
  }
  flag_name_->assign(value);
}
inline void GuildProto::set_flag_name(const void* value, size_t size) {
  set_has_flag_name();
  if (flag_name_ == &::google::protobuf::internal::kEmptyString) {
    flag_name_ = new ::std::string;
  }
  flag_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildProto::mutable_flag_name() {
  set_has_flag_name();
  if (flag_name_ == &::google::protobuf::internal::kEmptyString) {
    flag_name_ = new ::std::string;
  }
  return flag_name_;
}
inline ::std::string* GuildProto::release_flag_name() {
  clear_has_flag_name();
  if (flag_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = flag_name_;
    flag_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GuildProto::set_allocated_flag_name(::std::string* flag_name) {
  if (flag_name_ != &::google::protobuf::internal::kEmptyString) {
    delete flag_name_;
  }
  if (flag_name) {
    set_has_flag_name();
    flag_name_ = flag_name;
  } else {
    clear_has_flag_name();
    flag_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 flag_kind = 3;
inline bool GuildProto::has_flag_kind() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildProto::set_has_flag_kind() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildProto::clear_has_flag_kind() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildProto::clear_flag_kind() {
  flag_kind_ = 0;
  clear_has_flag_kind();
}
inline ::google::protobuf::int32 GuildProto::flag_kind() const {
  return flag_kind_;
}
inline void GuildProto::set_flag_kind(::google::protobuf::int32 value) {
  set_has_flag_kind();
  flag_kind_ = value;
}

// optional int32 flag_level = 4;
inline bool GuildProto::has_flag_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildProto::set_has_flag_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildProto::clear_has_flag_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildProto::clear_flag_level() {
  flag_level_ = 0;
  clear_has_flag_level();
}
inline ::google::protobuf::int32 GuildProto::flag_level() const {
  return flag_level_;
}
inline void GuildProto::set_flag_level(::google::protobuf::int32 value) {
  set_has_flag_level();
  flag_level_ = value;
}

// optional bool is_auto_accept_join_request = 5;
inline bool GuildProto::has_is_auto_accept_join_request() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildProto::set_has_is_auto_accept_join_request() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildProto::clear_has_is_auto_accept_join_request() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildProto::clear_is_auto_accept_join_request() {
  is_auto_accept_join_request_ = false;
  clear_has_is_auto_accept_join_request();
}
inline bool GuildProto::is_auto_accept_join_request() const {
  return is_auto_accept_join_request_;
}
inline void GuildProto::set_is_auto_accept_join_request(bool value) {
  set_has_is_auto_accept_join_request();
  is_auto_accept_join_request_ = value;
}

// repeated .app.message.GuildMemberProto members = 6;
inline int GuildProto::members_size() const {
  return members_.size();
}
inline void GuildProto::clear_members() {
  members_.Clear();
}
inline const ::app::message::GuildMemberProto& GuildProto::members(int index) const {
  return members_.Get(index);
}
inline ::app::message::GuildMemberProto* GuildProto::mutable_members(int index) {
  return members_.Mutable(index);
}
inline ::app::message::GuildMemberProto* GuildProto::add_members() {
  return members_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::GuildMemberProto >&
GuildProto::members() const {
  return members_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::GuildMemberProto >*
GuildProto::mutable_members() {
  return &members_;
}

// optional int64 leader_id = 7;
inline bool GuildProto::has_leader_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuildProto::set_has_leader_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuildProto::clear_has_leader_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuildProto::clear_leader_id() {
  leader_id_ = GOOGLE_LONGLONG(0);
  clear_has_leader_id();
}
inline ::google::protobuf::int64 GuildProto::leader_id() const {
  return leader_id_;
}
inline void GuildProto::set_leader_id(::google::protobuf::int64 value) {
  set_has_leader_id();
  leader_id_ = value;
}

// optional int64 vice_leader_id = 8;
inline bool GuildProto::has_vice_leader_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GuildProto::set_has_vice_leader_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GuildProto::clear_has_vice_leader_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GuildProto::clear_vice_leader_id() {
  vice_leader_id_ = GOOGLE_LONGLONG(0);
  clear_has_vice_leader_id();
}
inline ::google::protobuf::int64 GuildProto::vice_leader_id() const {
  return vice_leader_id_;
}
inline void GuildProto::set_vice_leader_id(::google::protobuf::int64 value) {
  set_has_vice_leader_id();
  vice_leader_id_ = value;
}

// optional int64 tang_leader_id = 9 [deprecated = true];
inline bool GuildProto::has_tang_leader_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GuildProto::set_has_tang_leader_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GuildProto::clear_has_tang_leader_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GuildProto::clear_tang_leader_id() {
  tang_leader_id_ = GOOGLE_LONGLONG(0);
  clear_has_tang_leader_id();
}
inline ::google::protobuf::int64 GuildProto::tang_leader_id() const {
  return tang_leader_id_;
}
inline void GuildProto::set_tang_leader_id(::google::protobuf::int64 value) {
  set_has_tang_leader_id();
  tang_leader_id_ = value;
}

// optional int32 max_hero_count = 10;
inline bool GuildProto::has_max_hero_count() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GuildProto::set_has_max_hero_count() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GuildProto::clear_has_max_hero_count() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GuildProto::clear_max_hero_count() {
  max_hero_count_ = 0;
  clear_has_max_hero_count();
}
inline ::google::protobuf::int32 GuildProto::max_hero_count() const {
  return max_hero_count_;
}
inline void GuildProto::set_max_hero_count(::google::protobuf::int32 value) {
  set_has_max_hero_count();
  max_hero_count_ = value;
}

// optional int64 create_time = 11;
inline bool GuildProto::has_create_time() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GuildProto::set_has_create_time() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GuildProto::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GuildProto::clear_create_time() {
  create_time_ = GOOGLE_LONGLONG(0);
  clear_has_create_time();
}
inline ::google::protobuf::int64 GuildProto::create_time() const {
  return create_time_;
}
inline void GuildProto::set_create_time(::google::protobuf::int64 value) {
  set_has_create_time();
  create_time_ = value;
}

// optional int32 gift_goods_1 = 12;
inline bool GuildProto::has_gift_goods_1() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GuildProto::set_has_gift_goods_1() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GuildProto::clear_has_gift_goods_1() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GuildProto::clear_gift_goods_1() {
  gift_goods_1_ = 0;
  clear_has_gift_goods_1();
}
inline ::google::protobuf::int32 GuildProto::gift_goods_1() const {
  return gift_goods_1_;
}
inline void GuildProto::set_gift_goods_1(::google::protobuf::int32 value) {
  set_has_gift_goods_1();
  gift_goods_1_ = value;
}

// optional int32 gift_goods_2 = 13;
inline bool GuildProto::has_gift_goods_2() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GuildProto::set_has_gift_goods_2() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GuildProto::clear_has_gift_goods_2() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GuildProto::clear_gift_goods_2() {
  gift_goods_2_ = 0;
  clear_has_gift_goods_2();
}
inline ::google::protobuf::int32 GuildProto::gift_goods_2() const {
  return gift_goods_2_;
}
inline void GuildProto::set_gift_goods_2(::google::protobuf::int32 value) {
  set_has_gift_goods_2();
  gift_goods_2_ = value;
}

// optional int32 gift_goods_3 = 14;
inline bool GuildProto::has_gift_goods_3() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GuildProto::set_has_gift_goods_3() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GuildProto::clear_has_gift_goods_3() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GuildProto::clear_gift_goods_3() {
  gift_goods_3_ = 0;
  clear_has_gift_goods_3();
}
inline ::google::protobuf::int32 GuildProto::gift_goods_3() const {
  return gift_goods_3_;
}
inline void GuildProto::set_gift_goods_3(::google::protobuf::int32 value) {
  set_has_gift_goods_3();
  gift_goods_3_ = value;
}

// optional int32 gift_goods_4 = 15;
inline bool GuildProto::has_gift_goods_4() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void GuildProto::set_has_gift_goods_4() {
  _has_bits_[0] |= 0x00004000u;
}
inline void GuildProto::clear_has_gift_goods_4() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void GuildProto::clear_gift_goods_4() {
  gift_goods_4_ = 0;
  clear_has_gift_goods_4();
}
inline ::google::protobuf::int32 GuildProto::gift_goods_4() const {
  return gift_goods_4_;
}
inline void GuildProto::set_gift_goods_4(::google::protobuf::int32 value) {
  set_has_gift_goods_4();
  gift_goods_4_ = value;
}

// optional int64 gift_money = 16;
inline bool GuildProto::has_gift_money() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void GuildProto::set_has_gift_money() {
  _has_bits_[0] |= 0x00008000u;
}
inline void GuildProto::clear_has_gift_money() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void GuildProto::clear_gift_money() {
  gift_money_ = GOOGLE_LONGLONG(0);
  clear_has_gift_money();
}
inline ::google::protobuf::int64 GuildProto::gift_money() const {
  return gift_money_;
}
inline void GuildProto::set_gift_money(::google::protobuf::int64 value) {
  set_has_gift_money();
  gift_money_ = value;
}

// optional bytes announcement = 17;
inline bool GuildProto::has_announcement() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void GuildProto::set_has_announcement() {
  _has_bits_[0] |= 0x00010000u;
}
inline void GuildProto::clear_has_announcement() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void GuildProto::clear_announcement() {
  if (announcement_ != &::google::protobuf::internal::kEmptyString) {
    announcement_->clear();
  }
  clear_has_announcement();
}
inline const ::std::string& GuildProto::announcement() const {
  return *announcement_;
}
inline void GuildProto::set_announcement(const ::std::string& value) {
  set_has_announcement();
  if (announcement_ == &::google::protobuf::internal::kEmptyString) {
    announcement_ = new ::std::string;
  }
  announcement_->assign(value);
}
inline void GuildProto::set_announcement(const char* value) {
  set_has_announcement();
  if (announcement_ == &::google::protobuf::internal::kEmptyString) {
    announcement_ = new ::std::string;
  }
  announcement_->assign(value);
}
inline void GuildProto::set_announcement(const void* value, size_t size) {
  set_has_announcement();
  if (announcement_ == &::google::protobuf::internal::kEmptyString) {
    announcement_ = new ::std::string;
  }
  announcement_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildProto::mutable_announcement() {
  set_has_announcement();
  if (announcement_ == &::google::protobuf::internal::kEmptyString) {
    announcement_ = new ::std::string;
  }
  return announcement_;
}
inline ::std::string* GuildProto::release_announcement() {
  clear_has_announcement();
  if (announcement_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = announcement_;
    announcement_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GuildProto::set_allocated_announcement(::std::string* announcement) {
  if (announcement_ != &::google::protobuf::internal::kEmptyString) {
    delete announcement_;
  }
  if (announcement) {
    set_has_announcement();
    announcement_ = announcement;
  } else {
    clear_has_announcement();
    announcement_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 change_announcement_time = 18;
inline bool GuildProto::has_change_announcement_time() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void GuildProto::set_has_change_announcement_time() {
  _has_bits_[0] |= 0x00020000u;
}
inline void GuildProto::clear_has_change_announcement_time() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void GuildProto::clear_change_announcement_time() {
  change_announcement_time_ = GOOGLE_LONGLONG(0);
  clear_has_change_announcement_time();
}
inline ::google::protobuf::int64 GuildProto::change_announcement_time() const {
  return change_announcement_time_;
}
inline void GuildProto::set_change_announcement_time(::google::protobuf::int64 value) {
  set_has_change_announcement_time();
  change_announcement_time_ = value;
}

// repeated int32 contribution_goods_already_bought = 19 [deprecated = true];
inline int GuildProto::contribution_goods_already_bought_size() const {
  return contribution_goods_already_bought_.size();
}
inline void GuildProto::clear_contribution_goods_already_bought() {
  contribution_goods_already_bought_.Clear();
}
inline ::google::protobuf::int32 GuildProto::contribution_goods_already_bought(int index) const {
  return contribution_goods_already_bought_.Get(index);
}
inline void GuildProto::set_contribution_goods_already_bought(int index, ::google::protobuf::int32 value) {
  contribution_goods_already_bought_.Set(index, value);
}
inline void GuildProto::add_contribution_goods_already_bought(::google::protobuf::int32 value) {
  contribution_goods_already_bought_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GuildProto::contribution_goods_already_bought() const {
  return contribution_goods_already_bought_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GuildProto::mutable_contribution_goods_already_bought() {
  return &contribution_goods_already_bought_;
}

// optional int32 guild_tower_level = 20;
inline bool GuildProto::has_guild_tower_level() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void GuildProto::set_has_guild_tower_level() {
  _has_bits_[0] |= 0x00080000u;
}
inline void GuildProto::clear_has_guild_tower_level() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void GuildProto::clear_guild_tower_level() {
  guild_tower_level_ = 0;
  clear_has_guild_tower_level();
}
inline ::google::protobuf::int32 GuildProto::guild_tower_level() const {
  return guild_tower_level_;
}
inline void GuildProto::set_guild_tower_level(::google::protobuf::int32 value) {
  set_has_guild_tower_level();
  guild_tower_level_ = value;
}

// optional bool is_complete_guild_plant = 21;
inline bool GuildProto::has_is_complete_guild_plant() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void GuildProto::set_has_is_complete_guild_plant() {
  _has_bits_[0] |= 0x00100000u;
}
inline void GuildProto::clear_has_is_complete_guild_plant() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void GuildProto::clear_is_complete_guild_plant() {
  is_complete_guild_plant_ = false;
  clear_has_is_complete_guild_plant();
}
inline bool GuildProto::is_complete_guild_plant() const {
  return is_complete_guild_plant_;
}
inline void GuildProto::set_is_complete_guild_plant(bool value) {
  set_has_is_complete_guild_plant();
  is_complete_guild_plant_ = value;
}

// optional bool active_degree_full = 50;
inline bool GuildProto::has_active_degree_full() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void GuildProto::set_has_active_degree_full() {
  _has_bits_[0] |= 0x00200000u;
}
inline void GuildProto::clear_has_active_degree_full() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void GuildProto::clear_active_degree_full() {
  active_degree_full_ = false;
  clear_has_active_degree_full();
}
inline bool GuildProto::active_degree_full() const {
  return active_degree_full_;
}
inline void GuildProto::set_active_degree_full(bool value) {
  set_has_active_degree_full();
  active_degree_full_ = value;
}

// repeated int64 active_hero_id = 51;
inline int GuildProto::active_hero_id_size() const {
  return active_hero_id_.size();
}
inline void GuildProto::clear_active_hero_id() {
  active_hero_id_.Clear();
}
inline ::google::protobuf::int64 GuildProto::active_hero_id(int index) const {
  return active_hero_id_.Get(index);
}
inline void GuildProto::set_active_hero_id(int index, ::google::protobuf::int64 value) {
  active_hero_id_.Set(index, value);
}
inline void GuildProto::add_active_hero_id(::google::protobuf::int64 value) {
  active_hero_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GuildProto::active_hero_id() const {
  return active_hero_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GuildProto::mutable_active_hero_id() {
  return &active_hero_id_;
}

// optional int32 dismiss_warning_level = 52;
inline bool GuildProto::has_dismiss_warning_level() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void GuildProto::set_has_dismiss_warning_level() {
  _has_bits_[0] |= 0x00800000u;
}
inline void GuildProto::clear_has_dismiss_warning_level() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void GuildProto::clear_dismiss_warning_level() {
  dismiss_warning_level_ = 0;
  clear_has_dismiss_warning_level();
}
inline ::google::protobuf::int32 GuildProto::dismiss_warning_level() const {
  return dismiss_warning_level_;
}
inline void GuildProto::set_dismiss_warning_level(::google::protobuf::int32 value) {
  set_has_dismiss_warning_level();
  dismiss_warning_level_ = value;
}

// repeated bytes friend_guild = 53;
inline int GuildProto::friend_guild_size() const {
  return friend_guild_.size();
}
inline void GuildProto::clear_friend_guild() {
  friend_guild_.Clear();
}
inline const ::std::string& GuildProto::friend_guild(int index) const {
  return friend_guild_.Get(index);
}
inline ::std::string* GuildProto::mutable_friend_guild(int index) {
  return friend_guild_.Mutable(index);
}
inline void GuildProto::set_friend_guild(int index, const ::std::string& value) {
  friend_guild_.Mutable(index)->assign(value);
}
inline void GuildProto::set_friend_guild(int index, const char* value) {
  friend_guild_.Mutable(index)->assign(value);
}
inline void GuildProto::set_friend_guild(int index, const void* value, size_t size) {
  friend_guild_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildProto::add_friend_guild() {
  return friend_guild_.Add();
}
inline void GuildProto::add_friend_guild(const ::std::string& value) {
  friend_guild_.Add()->assign(value);
}
inline void GuildProto::add_friend_guild(const char* value) {
  friend_guild_.Add()->assign(value);
}
inline void GuildProto::add_friend_guild(const void* value, size_t size) {
  friend_guild_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GuildProto::friend_guild() const {
  return friend_guild_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GuildProto::mutable_friend_guild() {
  return &friend_guild_;
}

// repeated bytes enemy_guild = 54;
inline int GuildProto::enemy_guild_size() const {
  return enemy_guild_.size();
}
inline void GuildProto::clear_enemy_guild() {
  enemy_guild_.Clear();
}
inline const ::std::string& GuildProto::enemy_guild(int index) const {
  return enemy_guild_.Get(index);
}
inline ::std::string* GuildProto::mutable_enemy_guild(int index) {
  return enemy_guild_.Mutable(index);
}
inline void GuildProto::set_enemy_guild(int index, const ::std::string& value) {
  enemy_guild_.Mutable(index)->assign(value);
}
inline void GuildProto::set_enemy_guild(int index, const char* value) {
  enemy_guild_.Mutable(index)->assign(value);
}
inline void GuildProto::set_enemy_guild(int index, const void* value, size_t size) {
  enemy_guild_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildProto::add_enemy_guild() {
  return enemy_guild_.Add();
}
inline void GuildProto::add_enemy_guild(const ::std::string& value) {
  enemy_guild_.Add()->assign(value);
}
inline void GuildProto::add_enemy_guild(const char* value) {
  enemy_guild_.Add()->assign(value);
}
inline void GuildProto::add_enemy_guild(const void* value, size_t size) {
  enemy_guild_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GuildProto::enemy_guild() const {
  return enemy_guild_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GuildProto::mutable_enemy_guild() {
  return &enemy_guild_;
}

// repeated int32 server_contribution_goods_id = 55 [deprecated = true];
inline int GuildProto::server_contribution_goods_id_size() const {
  return server_contribution_goods_id_.size();
}
inline void GuildProto::clear_server_contribution_goods_id() {
  server_contribution_goods_id_.Clear();
}
inline ::google::protobuf::int32 GuildProto::server_contribution_goods_id(int index) const {
  return server_contribution_goods_id_.Get(index);
}
inline void GuildProto::set_server_contribution_goods_id(int index, ::google::protobuf::int32 value) {
  server_contribution_goods_id_.Set(index, value);
}
inline void GuildProto::add_server_contribution_goods_id(::google::protobuf::int32 value) {
  server_contribution_goods_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GuildProto::server_contribution_goods_id() const {
  return server_contribution_goods_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GuildProto::mutable_server_contribution_goods_id() {
  return &server_contribution_goods_id_;
}

// repeated int32 server_contribution_bought_count = 56 [deprecated = true];
inline int GuildProto::server_contribution_bought_count_size() const {
  return server_contribution_bought_count_.size();
}
inline void GuildProto::clear_server_contribution_bought_count() {
  server_contribution_bought_count_.Clear();
}
inline ::google::protobuf::int32 GuildProto::server_contribution_bought_count(int index) const {
  return server_contribution_bought_count_.Get(index);
}
inline void GuildProto::set_server_contribution_bought_count(int index, ::google::protobuf::int32 value) {
  server_contribution_bought_count_.Set(index, value);
}
inline void GuildProto::add_server_contribution_bought_count(::google::protobuf::int32 value) {
  server_contribution_bought_count_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
GuildProto::server_contribution_bought_count() const {
  return server_contribution_bought_count_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
GuildProto::mutable_server_contribution_bought_count() {
  return &server_contribution_bought_count_;
}

// repeated bytes been_added_enemy_not_notified = 57;
inline int GuildProto::been_added_enemy_not_notified_size() const {
  return been_added_enemy_not_notified_.size();
}
inline void GuildProto::clear_been_added_enemy_not_notified() {
  been_added_enemy_not_notified_.Clear();
}
inline const ::std::string& GuildProto::been_added_enemy_not_notified(int index) const {
  return been_added_enemy_not_notified_.Get(index);
}
inline ::std::string* GuildProto::mutable_been_added_enemy_not_notified(int index) {
  return been_added_enemy_not_notified_.Mutable(index);
}
inline void GuildProto::set_been_added_enemy_not_notified(int index, const ::std::string& value) {
  been_added_enemy_not_notified_.Mutable(index)->assign(value);
}
inline void GuildProto::set_been_added_enemy_not_notified(int index, const char* value) {
  been_added_enemy_not_notified_.Mutable(index)->assign(value);
}
inline void GuildProto::set_been_added_enemy_not_notified(int index, const void* value, size_t size) {
  been_added_enemy_not_notified_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildProto::add_been_added_enemy_not_notified() {
  return been_added_enemy_not_notified_.Add();
}
inline void GuildProto::add_been_added_enemy_not_notified(const ::std::string& value) {
  been_added_enemy_not_notified_.Add()->assign(value);
}
inline void GuildProto::add_been_added_enemy_not_notified(const char* value) {
  been_added_enemy_not_notified_.Add()->assign(value);
}
inline void GuildProto::add_been_added_enemy_not_notified(const void* value, size_t size) {
  been_added_enemy_not_notified_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GuildProto::been_added_enemy_not_notified() const {
  return been_added_enemy_not_notified_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GuildProto::mutable_been_added_enemy_not_notified() {
  return &been_added_enemy_not_notified_;
}

// repeated bytes been_removed_enemy_not_notified = 58;
inline int GuildProto::been_removed_enemy_not_notified_size() const {
  return been_removed_enemy_not_notified_.size();
}
inline void GuildProto::clear_been_removed_enemy_not_notified() {
  been_removed_enemy_not_notified_.Clear();
}
inline const ::std::string& GuildProto::been_removed_enemy_not_notified(int index) const {
  return been_removed_enemy_not_notified_.Get(index);
}
inline ::std::string* GuildProto::mutable_been_removed_enemy_not_notified(int index) {
  return been_removed_enemy_not_notified_.Mutable(index);
}
inline void GuildProto::set_been_removed_enemy_not_notified(int index, const ::std::string& value) {
  been_removed_enemy_not_notified_.Mutable(index)->assign(value);
}
inline void GuildProto::set_been_removed_enemy_not_notified(int index, const char* value) {
  been_removed_enemy_not_notified_.Mutable(index)->assign(value);
}
inline void GuildProto::set_been_removed_enemy_not_notified(int index, const void* value, size_t size) {
  been_removed_enemy_not_notified_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildProto::add_been_removed_enemy_not_notified() {
  return been_removed_enemy_not_notified_.Add();
}
inline void GuildProto::add_been_removed_enemy_not_notified(const ::std::string& value) {
  been_removed_enemy_not_notified_.Add()->assign(value);
}
inline void GuildProto::add_been_removed_enemy_not_notified(const char* value) {
  been_removed_enemy_not_notified_.Add()->assign(value);
}
inline void GuildProto::add_been_removed_enemy_not_notified(const void* value, size_t size) {
  been_removed_enemy_not_notified_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GuildProto::been_removed_enemy_not_notified() const {
  return been_removed_enemy_not_notified_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GuildProto::mutable_been_removed_enemy_not_notified() {
  return &been_removed_enemy_not_notified_;
}

// repeated bytes been_removed_friend_not_notified = 61;
inline int GuildProto::been_removed_friend_not_notified_size() const {
  return been_removed_friend_not_notified_.size();
}
inline void GuildProto::clear_been_removed_friend_not_notified() {
  been_removed_friend_not_notified_.Clear();
}
inline const ::std::string& GuildProto::been_removed_friend_not_notified(int index) const {
  return been_removed_friend_not_notified_.Get(index);
}
inline ::std::string* GuildProto::mutable_been_removed_friend_not_notified(int index) {
  return been_removed_friend_not_notified_.Mutable(index);
}
inline void GuildProto::set_been_removed_friend_not_notified(int index, const ::std::string& value) {
  been_removed_friend_not_notified_.Mutable(index)->assign(value);
}
inline void GuildProto::set_been_removed_friend_not_notified(int index, const char* value) {
  been_removed_friend_not_notified_.Mutable(index)->assign(value);
}
inline void GuildProto::set_been_removed_friend_not_notified(int index, const void* value, size_t size) {
  been_removed_friend_not_notified_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildProto::add_been_removed_friend_not_notified() {
  return been_removed_friend_not_notified_.Add();
}
inline void GuildProto::add_been_removed_friend_not_notified(const ::std::string& value) {
  been_removed_friend_not_notified_.Add()->assign(value);
}
inline void GuildProto::add_been_removed_friend_not_notified(const char* value) {
  been_removed_friend_not_notified_.Add()->assign(value);
}
inline void GuildProto::add_been_removed_friend_not_notified(const void* value, size_t size) {
  been_removed_friend_not_notified_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GuildProto::been_removed_friend_not_notified() const {
  return been_removed_friend_not_notified_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GuildProto::mutable_been_removed_friend_not_notified() {
  return &been_removed_friend_not_notified_;
}

// repeated bytes server_news = 59;
inline int GuildProto::server_news_size() const {
  return server_news_.size();
}
inline void GuildProto::clear_server_news() {
  server_news_.Clear();
}
inline const ::std::string& GuildProto::server_news(int index) const {
  return server_news_.Get(index);
}
inline ::std::string* GuildProto::mutable_server_news(int index) {
  return server_news_.Mutable(index);
}
inline void GuildProto::set_server_news(int index, const ::std::string& value) {
  server_news_.Mutable(index)->assign(value);
}
inline void GuildProto::set_server_news(int index, const char* value) {
  server_news_.Mutable(index)->assign(value);
}
inline void GuildProto::set_server_news(int index, const void* value, size_t size) {
  server_news_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildProto::add_server_news() {
  return server_news_.Add();
}
inline void GuildProto::add_server_news(const ::std::string& value) {
  server_news_.Add()->assign(value);
}
inline void GuildProto::add_server_news(const char* value) {
  server_news_.Add()->assign(value);
}
inline void GuildProto::add_server_news(const void* value, size_t size) {
  server_news_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GuildProto::server_news() const {
  return server_news_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GuildProto::mutable_server_news() {
  return &server_news_;
}

// optional int32 server_id = 60;
inline bool GuildProto::has_server_id() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void GuildProto::set_has_server_id() {
  _has_bits_[1] |= 0x00000001u;
}
inline void GuildProto::clear_has_server_id() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void GuildProto::clear_server_id() {
  server_id_ = 0;
  clear_has_server_id();
}
inline ::google::protobuf::int32 GuildProto::server_id() const {
  return server_id_;
}
inline void GuildProto::set_server_id(::google::protobuf::int32 value) {
  set_has_server_id();
  server_id_ = value;
}

// optional int32 operator_id = 63;
inline bool GuildProto::has_operator_id() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void GuildProto::set_has_operator_id() {
  _has_bits_[1] |= 0x00000002u;
}
inline void GuildProto::clear_has_operator_id() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void GuildProto::clear_operator_id() {
  operator_id_ = 0;
  clear_has_operator_id();
}
inline ::google::protobuf::int32 GuildProto::operator_id() const {
  return operator_id_;
}
inline void GuildProto::set_operator_id(::google::protobuf::int32 value) {
  set_has_operator_id();
  operator_id_ = value;
}

// repeated .app.message.ChallengeFastCrossProto fast_cross_data = 62;
inline int GuildProto::fast_cross_data_size() const {
  return fast_cross_data_.size();
}
inline void GuildProto::clear_fast_cross_data() {
  fast_cross_data_.Clear();
}
inline const ::app::message::ChallengeFastCrossProto& GuildProto::fast_cross_data(int index) const {
  return fast_cross_data_.Get(index);
}
inline ::app::message::ChallengeFastCrossProto* GuildProto::mutable_fast_cross_data(int index) {
  return fast_cross_data_.Mutable(index);
}
inline ::app::message::ChallengeFastCrossProto* GuildProto::add_fast_cross_data() {
  return fast_cross_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::ChallengeFastCrossProto >&
GuildProto::fast_cross_data() const {
  return fast_cross_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::ChallengeFastCrossProto >*
GuildProto::mutable_fast_cross_data() {
  return &fast_cross_data_;
}

// optional .app.message.GuildDungeonBossKilledProto guild_dungeon_boss_killed = 64;
inline bool GuildProto::has_guild_dungeon_boss_killed() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void GuildProto::set_has_guild_dungeon_boss_killed() {
  _has_bits_[1] |= 0x00000008u;
}
inline void GuildProto::clear_has_guild_dungeon_boss_killed() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void GuildProto::clear_guild_dungeon_boss_killed() {
  if (guild_dungeon_boss_killed_ != NULL) guild_dungeon_boss_killed_->::app::message::GuildDungeonBossKilledProto::Clear();
  clear_has_guild_dungeon_boss_killed();
}
inline const ::app::message::GuildDungeonBossKilledProto& GuildProto::guild_dungeon_boss_killed() const {
  return guild_dungeon_boss_killed_ != NULL ? *guild_dungeon_boss_killed_ : *default_instance_->guild_dungeon_boss_killed_;
}
inline ::app::message::GuildDungeonBossKilledProto* GuildProto::mutable_guild_dungeon_boss_killed() {
  set_has_guild_dungeon_boss_killed();
  if (guild_dungeon_boss_killed_ == NULL) guild_dungeon_boss_killed_ = new ::app::message::GuildDungeonBossKilledProto;
  return guild_dungeon_boss_killed_;
}
inline ::app::message::GuildDungeonBossKilledProto* GuildProto::release_guild_dungeon_boss_killed() {
  clear_has_guild_dungeon_boss_killed();
  ::app::message::GuildDungeonBossKilledProto* temp = guild_dungeon_boss_killed_;
  guild_dungeon_boss_killed_ = NULL;
  return temp;
}
inline void GuildProto::set_allocated_guild_dungeon_boss_killed(::app::message::GuildDungeonBossKilledProto* guild_dungeon_boss_killed) {
  delete guild_dungeon_boss_killed_;
  guild_dungeon_boss_killed_ = guild_dungeon_boss_killed;
  if (guild_dungeon_boss_killed) {
    set_has_guild_dungeon_boss_killed();
  } else {
    clear_has_guild_dungeon_boss_killed();
  }
}

// repeated int64 new_tang_leader_id = 65;
inline int GuildProto::new_tang_leader_id_size() const {
  return new_tang_leader_id_.size();
}
inline void GuildProto::clear_new_tang_leader_id() {
  new_tang_leader_id_.Clear();
}
inline ::google::protobuf::int64 GuildProto::new_tang_leader_id(int index) const {
  return new_tang_leader_id_.Get(index);
}
inline void GuildProto::set_new_tang_leader_id(int index, ::google::protobuf::int64 value) {
  new_tang_leader_id_.Set(index, value);
}
inline void GuildProto::add_new_tang_leader_id(::google::protobuf::int64 value) {
  new_tang_leader_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GuildProto::new_tang_leader_id() const {
  return new_tang_leader_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GuildProto::mutable_new_tang_leader_id() {
  return &new_tang_leader_id_;
}

// optional .app.message.ChengBaProto cheng_ba_proto = 66;
inline bool GuildProto::has_cheng_ba_proto() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void GuildProto::set_has_cheng_ba_proto() {
  _has_bits_[1] |= 0x00000020u;
}
inline void GuildProto::clear_has_cheng_ba_proto() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void GuildProto::clear_cheng_ba_proto() {
  if (cheng_ba_proto_ != NULL) cheng_ba_proto_->::app::message::ChengBaProto::Clear();
  clear_has_cheng_ba_proto();
}
inline const ::app::message::ChengBaProto& GuildProto::cheng_ba_proto() const {
  return cheng_ba_proto_ != NULL ? *cheng_ba_proto_ : *default_instance_->cheng_ba_proto_;
}
inline ::app::message::ChengBaProto* GuildProto::mutable_cheng_ba_proto() {
  set_has_cheng_ba_proto();
  if (cheng_ba_proto_ == NULL) cheng_ba_proto_ = new ::app::message::ChengBaProto;
  return cheng_ba_proto_;
}
inline ::app::message::ChengBaProto* GuildProto::release_cheng_ba_proto() {
  clear_has_cheng_ba_proto();
  ::app::message::ChengBaProto* temp = cheng_ba_proto_;
  cheng_ba_proto_ = NULL;
  return temp;
}
inline void GuildProto::set_allocated_cheng_ba_proto(::app::message::ChengBaProto* cheng_ba_proto) {
  delete cheng_ba_proto_;
  cheng_ba_proto_ = cheng_ba_proto;
  if (cheng_ba_proto) {
    set_has_cheng_ba_proto();
  } else {
    clear_has_cheng_ba_proto();
  }
}

// repeated int64 active_hero_id2 = 67;
inline int GuildProto::active_hero_id2_size() const {
  return active_hero_id2_.size();
}
inline void GuildProto::clear_active_hero_id2() {
  active_hero_id2_.Clear();
}
inline ::google::protobuf::int64 GuildProto::active_hero_id2(int index) const {
  return active_hero_id2_.Get(index);
}
inline void GuildProto::set_active_hero_id2(int index, ::google::protobuf::int64 value) {
  active_hero_id2_.Set(index, value);
}
inline void GuildProto::add_active_hero_id2(::google::protobuf::int64 value) {
  active_hero_id2_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GuildProto::active_hero_id2() const {
  return active_hero_id2_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GuildProto::mutable_active_hero_id2() {
  return &active_hero_id2_;
}

// optional .app.message.LongXianGuildStatProto lx_guild_stat = 68;
inline bool GuildProto::has_lx_guild_stat() const {
  return (_has_bits_[1] & 0x00000080u) != 0;
}
inline void GuildProto::set_has_lx_guild_stat() {
  _has_bits_[1] |= 0x00000080u;
}
inline void GuildProto::clear_has_lx_guild_stat() {
  _has_bits_[1] &= ~0x00000080u;
}
inline void GuildProto::clear_lx_guild_stat() {
  if (lx_guild_stat_ != NULL) lx_guild_stat_->::app::message::LongXianGuildStatProto::Clear();
  clear_has_lx_guild_stat();
}
inline const ::app::message::LongXianGuildStatProto& GuildProto::lx_guild_stat() const {
  return lx_guild_stat_ != NULL ? *lx_guild_stat_ : *default_instance_->lx_guild_stat_;
}
inline ::app::message::LongXianGuildStatProto* GuildProto::mutable_lx_guild_stat() {
  set_has_lx_guild_stat();
  if (lx_guild_stat_ == NULL) lx_guild_stat_ = new ::app::message::LongXianGuildStatProto;
  return lx_guild_stat_;
}
inline ::app::message::LongXianGuildStatProto* GuildProto::release_lx_guild_stat() {
  clear_has_lx_guild_stat();
  ::app::message::LongXianGuildStatProto* temp = lx_guild_stat_;
  lx_guild_stat_ = NULL;
  return temp;
}
inline void GuildProto::set_allocated_lx_guild_stat(::app::message::LongXianGuildStatProto* lx_guild_stat) {
  delete lx_guild_stat_;
  lx_guild_stat_ = lx_guild_stat;
  if (lx_guild_stat) {
    set_has_lx_guild_stat();
  } else {
    clear_has_lx_guild_stat();
  }
}

// optional .app.message.GuildHongBaosProto hbs = 69;
inline bool GuildProto::has_hbs() const {
  return (_has_bits_[1] & 0x00000100u) != 0;
}
inline void GuildProto::set_has_hbs() {
  _has_bits_[1] |= 0x00000100u;
}
inline void GuildProto::clear_has_hbs() {
  _has_bits_[1] &= ~0x00000100u;
}
inline void GuildProto::clear_hbs() {
  if (hbs_ != NULL) hbs_->::app::message::GuildHongBaosProto::Clear();
  clear_has_hbs();
}
inline const ::app::message::GuildHongBaosProto& GuildProto::hbs() const {
  return hbs_ != NULL ? *hbs_ : *default_instance_->hbs_;
}
inline ::app::message::GuildHongBaosProto* GuildProto::mutable_hbs() {
  set_has_hbs();
  if (hbs_ == NULL) hbs_ = new ::app::message::GuildHongBaosProto;
  return hbs_;
}
inline ::app::message::GuildHongBaosProto* GuildProto::release_hbs() {
  clear_has_hbs();
  ::app::message::GuildHongBaosProto* temp = hbs_;
  hbs_ = NULL;
  return temp;
}
inline void GuildProto::set_allocated_hbs(::app::message::GuildHongBaosProto* hbs) {
  delete hbs_;
  hbs_ = hbs;
  if (hbs) {
    set_has_hbs();
  } else {
    clear_has_hbs();
  }
}

// repeated .app.message.TongTianTaFastCrossProto tong_tain_ta_fast_cross_data = 70;
inline int GuildProto::tong_tain_ta_fast_cross_data_size() const {
  return tong_tain_ta_fast_cross_data_.size();
}
inline void GuildProto::clear_tong_tain_ta_fast_cross_data() {
  tong_tain_ta_fast_cross_data_.Clear();
}
inline const ::app::message::TongTianTaFastCrossProto& GuildProto::tong_tain_ta_fast_cross_data(int index) const {
  return tong_tain_ta_fast_cross_data_.Get(index);
}
inline ::app::message::TongTianTaFastCrossProto* GuildProto::mutable_tong_tain_ta_fast_cross_data(int index) {
  return tong_tain_ta_fast_cross_data_.Mutable(index);
}
inline ::app::message::TongTianTaFastCrossProto* GuildProto::add_tong_tain_ta_fast_cross_data() {
  return tong_tain_ta_fast_cross_data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::TongTianTaFastCrossProto >&
GuildProto::tong_tain_ta_fast_cross_data() const {
  return tong_tain_ta_fast_cross_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::TongTianTaFastCrossProto >*
GuildProto::mutable_tong_tain_ta_fast_cross_data() {
  return &tong_tain_ta_fast_cross_data_;
}

// optional .app.message.GuildBossCard boss_card = 71;
inline bool GuildProto::has_boss_card() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void GuildProto::set_has_boss_card() {
  _has_bits_[1] |= 0x00000400u;
}
inline void GuildProto::clear_has_boss_card() {
  _has_bits_[1] &= ~0x00000400u;
}
inline void GuildProto::clear_boss_card() {
  if (boss_card_ != NULL) boss_card_->::app::message::GuildBossCard::Clear();
  clear_has_boss_card();
}
inline const ::app::message::GuildBossCard& GuildProto::boss_card() const {
  return boss_card_ != NULL ? *boss_card_ : *default_instance_->boss_card_;
}
inline ::app::message::GuildBossCard* GuildProto::mutable_boss_card() {
  set_has_boss_card();
  if (boss_card_ == NULL) boss_card_ = new ::app::message::GuildBossCard;
  return boss_card_;
}
inline ::app::message::GuildBossCard* GuildProto::release_boss_card() {
  clear_has_boss_card();
  ::app::message::GuildBossCard* temp = boss_card_;
  boss_card_ = NULL;
  return temp;
}
inline void GuildProto::set_allocated_boss_card(::app::message::GuildBossCard* boss_card) {
  delete boss_card_;
  boss_card_ = boss_card;
  if (boss_card) {
    set_has_boss_card();
  } else {
    clear_has_boss_card();
  }
}

// -------------------------------------------------------------------

// GuildHongBaosProto

// repeated .app.message.GuildHongBaoProto hb = 1;
inline int GuildHongBaosProto::hb_size() const {
  return hb_.size();
}
inline void GuildHongBaosProto::clear_hb() {
  hb_.Clear();
}
inline const ::app::message::GuildHongBaoProto& GuildHongBaosProto::hb(int index) const {
  return hb_.Get(index);
}
inline ::app::message::GuildHongBaoProto* GuildHongBaosProto::mutable_hb(int index) {
  return hb_.Mutable(index);
}
inline ::app::message::GuildHongBaoProto* GuildHongBaosProto::add_hb() {
  return hb_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::GuildHongBaoProto >&
GuildHongBaosProto::hb() const {
  return hb_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::GuildHongBaoProto >*
GuildHongBaosProto::mutable_hb() {
  return &hb_;
}

// repeated .app.message.GuildHongBaoCollectLogProto collect_log = 2;
inline int GuildHongBaosProto::collect_log_size() const {
  return collect_log_.size();
}
inline void GuildHongBaosProto::clear_collect_log() {
  collect_log_.Clear();
}
inline const ::app::message::GuildHongBaoCollectLogProto& GuildHongBaosProto::collect_log(int index) const {
  return collect_log_.Get(index);
}
inline ::app::message::GuildHongBaoCollectLogProto* GuildHongBaosProto::mutable_collect_log(int index) {
  return collect_log_.Mutable(index);
}
inline ::app::message::GuildHongBaoCollectLogProto* GuildHongBaosProto::add_collect_log() {
  return collect_log_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::GuildHongBaoCollectLogProto >&
GuildHongBaosProto::collect_log() const {
  return collect_log_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::GuildHongBaoCollectLogProto >*
GuildHongBaosProto::mutable_collect_log() {
  return &collect_log_;
}

// -------------------------------------------------------------------

// GuildHongBaoProto

// optional int64 hero_id = 1;
inline bool GuildHongBaoProto::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildHongBaoProto::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildHongBaoProto::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildHongBaoProto::clear_hero_id() {
  hero_id_ = GOOGLE_LONGLONG(0);
  clear_has_hero_id();
}
inline ::google::protobuf::int64 GuildHongBaoProto::hero_id() const {
  return hero_id_;
}
inline void GuildHongBaoProto::set_hero_id(::google::protobuf::int64 value) {
  set_has_hero_id();
  hero_id_ = value;
}

// optional bytes hero_name_bytes = 2;
inline bool GuildHongBaoProto::has_hero_name_bytes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildHongBaoProto::set_has_hero_name_bytes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildHongBaoProto::clear_has_hero_name_bytes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildHongBaoProto::clear_hero_name_bytes() {
  if (hero_name_bytes_ != &::google::protobuf::internal::kEmptyString) {
    hero_name_bytes_->clear();
  }
  clear_has_hero_name_bytes();
}
inline const ::std::string& GuildHongBaoProto::hero_name_bytes() const {
  return *hero_name_bytes_;
}
inline void GuildHongBaoProto::set_hero_name_bytes(const ::std::string& value) {
  set_has_hero_name_bytes();
  if (hero_name_bytes_ == &::google::protobuf::internal::kEmptyString) {
    hero_name_bytes_ = new ::std::string;
  }
  hero_name_bytes_->assign(value);
}
inline void GuildHongBaoProto::set_hero_name_bytes(const char* value) {
  set_has_hero_name_bytes();
  if (hero_name_bytes_ == &::google::protobuf::internal::kEmptyString) {
    hero_name_bytes_ = new ::std::string;
  }
  hero_name_bytes_->assign(value);
}
inline void GuildHongBaoProto::set_hero_name_bytes(const void* value, size_t size) {
  set_has_hero_name_bytes();
  if (hero_name_bytes_ == &::google::protobuf::internal::kEmptyString) {
    hero_name_bytes_ = new ::std::string;
  }
  hero_name_bytes_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildHongBaoProto::mutable_hero_name_bytes() {
  set_has_hero_name_bytes();
  if (hero_name_bytes_ == &::google::protobuf::internal::kEmptyString) {
    hero_name_bytes_ = new ::std::string;
  }
  return hero_name_bytes_;
}
inline ::std::string* GuildHongBaoProto::release_hero_name_bytes() {
  clear_has_hero_name_bytes();
  if (hero_name_bytes_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = hero_name_bytes_;
    hero_name_bytes_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GuildHongBaoProto::set_allocated_hero_name_bytes(::std::string* hero_name_bytes) {
  if (hero_name_bytes_ != &::google::protobuf::internal::kEmptyString) {
    delete hero_name_bytes_;
  }
  if (hero_name_bytes) {
    set_has_hero_name_bytes();
    hero_name_bytes_ = hero_name_bytes;
  } else {
    clear_has_hero_name_bytes();
    hero_name_bytes_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 hero_race = 3;
inline bool GuildHongBaoProto::has_hero_race() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildHongBaoProto::set_has_hero_race() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildHongBaoProto::clear_has_hero_race() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildHongBaoProto::clear_hero_race() {
  hero_race_ = 0;
  clear_has_hero_race();
}
inline ::google::protobuf::int32 GuildHongBaoProto::hero_race() const {
  return hero_race_;
}
inline void GuildHongBaoProto::set_hero_race(::google::protobuf::int32 value) {
  set_has_hero_race();
  hero_race_ = value;
}

// optional int32 total_yb = 4;
inline bool GuildHongBaoProto::has_total_yb() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildHongBaoProto::set_has_total_yb() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildHongBaoProto::clear_has_total_yb() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildHongBaoProto::clear_total_yb() {
  total_yb_ = 0;
  clear_has_total_yb();
}
inline ::google::protobuf::int32 GuildHongBaoProto::total_yb() const {
  return total_yb_;
}
inline void GuildHongBaoProto::set_total_yb(::google::protobuf::int32 value) {
  set_has_total_yb();
  total_yb_ = value;
}

// optional int32 total_hb = 5;
inline bool GuildHongBaoProto::has_total_hb() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildHongBaoProto::set_has_total_hb() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildHongBaoProto::clear_has_total_hb() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildHongBaoProto::clear_total_hb() {
  total_hb_ = 0;
  clear_has_total_hb();
}
inline ::google::protobuf::int32 GuildHongBaoProto::total_hb() const {
  return total_hb_;
}
inline void GuildHongBaoProto::set_total_hb(::google::protobuf::int32 value) {
  set_has_total_hb();
  total_hb_ = value;
}

// optional int32 left_yb = 6;
inline bool GuildHongBaoProto::has_left_yb() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildHongBaoProto::set_has_left_yb() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildHongBaoProto::clear_has_left_yb() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildHongBaoProto::clear_left_yb() {
  left_yb_ = 0;
  clear_has_left_yb();
}
inline ::google::protobuf::int32 GuildHongBaoProto::left_yb() const {
  return left_yb_;
}
inline void GuildHongBaoProto::set_left_yb(::google::protobuf::int32 value) {
  set_has_left_yb();
  left_yb_ = value;
}

// optional int32 left_hb = 7;
inline bool GuildHongBaoProto::has_left_hb() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuildHongBaoProto::set_has_left_hb() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuildHongBaoProto::clear_has_left_hb() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuildHongBaoProto::clear_left_hb() {
  left_hb_ = 0;
  clear_has_left_hb();
}
inline ::google::protobuf::int32 GuildHongBaoProto::left_hb() const {
  return left_hb_;
}
inline void GuildHongBaoProto::set_left_hb(::google::protobuf::int32 value) {
  set_has_left_hb();
  left_hb_ = value;
}

// -------------------------------------------------------------------

// GuildHongBaoCollectLogProto

// optional int64 hero_id = 1;
inline bool GuildHongBaoCollectLogProto::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildHongBaoCollectLogProto::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildHongBaoCollectLogProto::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildHongBaoCollectLogProto::clear_hero_id() {
  hero_id_ = GOOGLE_LONGLONG(0);
  clear_has_hero_id();
}
inline ::google::protobuf::int64 GuildHongBaoCollectLogProto::hero_id() const {
  return hero_id_;
}
inline void GuildHongBaoCollectLogProto::set_hero_id(::google::protobuf::int64 value) {
  set_has_hero_id();
  hero_id_ = value;
}

// optional bytes hero_name_bytes = 2;
inline bool GuildHongBaoCollectLogProto::has_hero_name_bytes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildHongBaoCollectLogProto::set_has_hero_name_bytes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildHongBaoCollectLogProto::clear_has_hero_name_bytes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildHongBaoCollectLogProto::clear_hero_name_bytes() {
  if (hero_name_bytes_ != &::google::protobuf::internal::kEmptyString) {
    hero_name_bytes_->clear();
  }
  clear_has_hero_name_bytes();
}
inline const ::std::string& GuildHongBaoCollectLogProto::hero_name_bytes() const {
  return *hero_name_bytes_;
}
inline void GuildHongBaoCollectLogProto::set_hero_name_bytes(const ::std::string& value) {
  set_has_hero_name_bytes();
  if (hero_name_bytes_ == &::google::protobuf::internal::kEmptyString) {
    hero_name_bytes_ = new ::std::string;
  }
  hero_name_bytes_->assign(value);
}
inline void GuildHongBaoCollectLogProto::set_hero_name_bytes(const char* value) {
  set_has_hero_name_bytes();
  if (hero_name_bytes_ == &::google::protobuf::internal::kEmptyString) {
    hero_name_bytes_ = new ::std::string;
  }
  hero_name_bytes_->assign(value);
}
inline void GuildHongBaoCollectLogProto::set_hero_name_bytes(const void* value, size_t size) {
  set_has_hero_name_bytes();
  if (hero_name_bytes_ == &::google::protobuf::internal::kEmptyString) {
    hero_name_bytes_ = new ::std::string;
  }
  hero_name_bytes_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildHongBaoCollectLogProto::mutable_hero_name_bytes() {
  set_has_hero_name_bytes();
  if (hero_name_bytes_ == &::google::protobuf::internal::kEmptyString) {
    hero_name_bytes_ = new ::std::string;
  }
  return hero_name_bytes_;
}
inline ::std::string* GuildHongBaoCollectLogProto::release_hero_name_bytes() {
  clear_has_hero_name_bytes();
  if (hero_name_bytes_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = hero_name_bytes_;
    hero_name_bytes_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GuildHongBaoCollectLogProto::set_allocated_hero_name_bytes(::std::string* hero_name_bytes) {
  if (hero_name_bytes_ != &::google::protobuf::internal::kEmptyString) {
    delete hero_name_bytes_;
  }
  if (hero_name_bytes) {
    set_has_hero_name_bytes();
    hero_name_bytes_ = hero_name_bytes;
  } else {
    clear_has_hero_name_bytes();
    hero_name_bytes_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 hero_race = 3;
inline bool GuildHongBaoCollectLogProto::has_hero_race() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildHongBaoCollectLogProto::set_has_hero_race() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildHongBaoCollectLogProto::clear_has_hero_race() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildHongBaoCollectLogProto::clear_hero_race() {
  hero_race_ = 0;
  clear_has_hero_race();
}
inline ::google::protobuf::int32 GuildHongBaoCollectLogProto::hero_race() const {
  return hero_race_;
}
inline void GuildHongBaoCollectLogProto::set_hero_race(::google::protobuf::int32 value) {
  set_has_hero_race();
  hero_race_ = value;
}

// optional int32 hb_idx = 4;
inline bool GuildHongBaoCollectLogProto::has_hb_idx() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildHongBaoCollectLogProto::set_has_hb_idx() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildHongBaoCollectLogProto::clear_has_hb_idx() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildHongBaoCollectLogProto::clear_hb_idx() {
  hb_idx_ = 0;
  clear_has_hb_idx();
}
inline ::google::protobuf::int32 GuildHongBaoCollectLogProto::hb_idx() const {
  return hb_idx_;
}
inline void GuildHongBaoCollectLogProto::set_hb_idx(::google::protobuf::int32 value) {
  set_has_hb_idx();
  hb_idx_ = value;
}

// optional int32 hb_yb = 5;
inline bool GuildHongBaoCollectLogProto::has_hb_yb() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildHongBaoCollectLogProto::set_has_hb_yb() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildHongBaoCollectLogProto::clear_has_hb_yb() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildHongBaoCollectLogProto::clear_hb_yb() {
  hb_yb_ = 0;
  clear_has_hb_yb();
}
inline ::google::protobuf::int32 GuildHongBaoCollectLogProto::hb_yb() const {
  return hb_yb_;
}
inline void GuildHongBaoCollectLogProto::set_hb_yb(::google::protobuf::int32 value) {
  set_has_hb_yb();
  hb_yb_ = value;
}

// optional int64 time = 6;
inline bool GuildHongBaoCollectLogProto::has_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildHongBaoCollectLogProto::set_has_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildHongBaoCollectLogProto::clear_has_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildHongBaoCollectLogProto::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 GuildHongBaoCollectLogProto::time() const {
  return time_;
}
inline void GuildHongBaoCollectLogProto::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// LongXianGuildStatProto

// repeated int32 scene_stat = 1;
inline int LongXianGuildStatProto::scene_stat_size() const {
  return scene_stat_.size();
}
inline void LongXianGuildStatProto::clear_scene_stat() {
  scene_stat_.Clear();
}
inline ::google::protobuf::int32 LongXianGuildStatProto::scene_stat(int index) const {
  return scene_stat_.Get(index);
}
inline void LongXianGuildStatProto::set_scene_stat(int index, ::google::protobuf::int32 value) {
  scene_stat_.Set(index, value);
}
inline void LongXianGuildStatProto::add_scene_stat(::google::protobuf::int32 value) {
  scene_stat_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
LongXianGuildStatProto::scene_stat() const {
  return scene_stat_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
LongXianGuildStatProto::mutable_scene_stat() {
  return &scene_stat_;
}

// repeated int32 scene_reset_times = 2;
inline int LongXianGuildStatProto::scene_reset_times_size() const {
  return scene_reset_times_.size();
}
inline void LongXianGuildStatProto::clear_scene_reset_times() {
  scene_reset_times_.Clear();
}
inline ::google::protobuf::int32 LongXianGuildStatProto::scene_reset_times(int index) const {
  return scene_reset_times_.Get(index);
}
inline void LongXianGuildStatProto::set_scene_reset_times(int index, ::google::protobuf::int32 value) {
  scene_reset_times_.Set(index, value);
}
inline void LongXianGuildStatProto::add_scene_reset_times(::google::protobuf::int32 value) {
  scene_reset_times_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
LongXianGuildStatProto::scene_reset_times() const {
  return scene_reset_times_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
LongXianGuildStatProto::mutable_scene_reset_times() {
  return &scene_reset_times_;
}

// repeated bytes rank_msg = 3;
inline int LongXianGuildStatProto::rank_msg_size() const {
  return rank_msg_.size();
}
inline void LongXianGuildStatProto::clear_rank_msg() {
  rank_msg_.Clear();
}
inline const ::std::string& LongXianGuildStatProto::rank_msg(int index) const {
  return rank_msg_.Get(index);
}
inline ::std::string* LongXianGuildStatProto::mutable_rank_msg(int index) {
  return rank_msg_.Mutable(index);
}
inline void LongXianGuildStatProto::set_rank_msg(int index, const ::std::string& value) {
  rank_msg_.Mutable(index)->assign(value);
}
inline void LongXianGuildStatProto::set_rank_msg(int index, const char* value) {
  rank_msg_.Mutable(index)->assign(value);
}
inline void LongXianGuildStatProto::set_rank_msg(int index, const void* value, size_t size) {
  rank_msg_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* LongXianGuildStatProto::add_rank_msg() {
  return rank_msg_.Add();
}
inline void LongXianGuildStatProto::add_rank_msg(const ::std::string& value) {
  rank_msg_.Add()->assign(value);
}
inline void LongXianGuildStatProto::add_rank_msg(const char* value) {
  rank_msg_.Add()->assign(value);
}
inline void LongXianGuildStatProto::add_rank_msg(const void* value, size_t size) {
  rank_msg_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
LongXianGuildStatProto::rank_msg() const {
  return rank_msg_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
LongXianGuildStatProto::mutable_rank_msg() {
  return &rank_msg_;
}

// -------------------------------------------------------------------

// ChengBaProto

// repeated int64 occupy_stat = 1;
inline int ChengBaProto::occupy_stat_size() const {
  return occupy_stat_.size();
}
inline void ChengBaProto::clear_occupy_stat() {
  occupy_stat_.Clear();
}
inline ::google::protobuf::int64 ChengBaProto::occupy_stat(int index) const {
  return occupy_stat_.Get(index);
}
inline void ChengBaProto::set_occupy_stat(int index, ::google::protobuf::int64 value) {
  occupy_stat_.Set(index, value);
}
inline void ChengBaProto::add_occupy_stat(::google::protobuf::int64 value) {
  occupy_stat_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ChengBaProto::occupy_stat() const {
  return occupy_stat_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ChengBaProto::mutable_occupy_stat() {
  return &occupy_stat_;
}

// repeated int64 apply_attack_time = 2;
inline int ChengBaProto::apply_attack_time_size() const {
  return apply_attack_time_.size();
}
inline void ChengBaProto::clear_apply_attack_time() {
  apply_attack_time_.Clear();
}
inline ::google::protobuf::int64 ChengBaProto::apply_attack_time(int index) const {
  return apply_attack_time_.Get(index);
}
inline void ChengBaProto::set_apply_attack_time(int index, ::google::protobuf::int64 value) {
  apply_attack_time_.Set(index, value);
}
inline void ChengBaProto::add_apply_attack_time(::google::protobuf::int64 value) {
  apply_attack_time_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ChengBaProto::apply_attack_time() const {
  return apply_attack_time_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ChengBaProto::mutable_apply_attack_time() {
  return &apply_attack_time_;
}

// repeated .app.message.ChengBaPrizeCollectHeroIdsProto win_prize_collect_hero_ids = 3;
inline int ChengBaProto::win_prize_collect_hero_ids_size() const {
  return win_prize_collect_hero_ids_.size();
}
inline void ChengBaProto::clear_win_prize_collect_hero_ids() {
  win_prize_collect_hero_ids_.Clear();
}
inline const ::app::message::ChengBaPrizeCollectHeroIdsProto& ChengBaProto::win_prize_collect_hero_ids(int index) const {
  return win_prize_collect_hero_ids_.Get(index);
}
inline ::app::message::ChengBaPrizeCollectHeroIdsProto* ChengBaProto::mutable_win_prize_collect_hero_ids(int index) {
  return win_prize_collect_hero_ids_.Mutable(index);
}
inline ::app::message::ChengBaPrizeCollectHeroIdsProto* ChengBaProto::add_win_prize_collect_hero_ids() {
  return win_prize_collect_hero_ids_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::ChengBaPrizeCollectHeroIdsProto >&
ChengBaProto::win_prize_collect_hero_ids() const {
  return win_prize_collect_hero_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::ChengBaPrizeCollectHeroIdsProto >*
ChengBaProto::mutable_win_prize_collect_hero_ids() {
  return &win_prize_collect_hero_ids_;
}

// repeated .app.message.ChengBaPrizeCollectHeroIdsProto tax_prize_collect_hero_ids = 4;
inline int ChengBaProto::tax_prize_collect_hero_ids_size() const {
  return tax_prize_collect_hero_ids_.size();
}
inline void ChengBaProto::clear_tax_prize_collect_hero_ids() {
  tax_prize_collect_hero_ids_.Clear();
}
inline const ::app::message::ChengBaPrizeCollectHeroIdsProto& ChengBaProto::tax_prize_collect_hero_ids(int index) const {
  return tax_prize_collect_hero_ids_.Get(index);
}
inline ::app::message::ChengBaPrizeCollectHeroIdsProto* ChengBaProto::mutable_tax_prize_collect_hero_ids(int index) {
  return tax_prize_collect_hero_ids_.Mutable(index);
}
inline ::app::message::ChengBaPrizeCollectHeroIdsProto* ChengBaProto::add_tax_prize_collect_hero_ids() {
  return tax_prize_collect_hero_ids_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::ChengBaPrizeCollectHeroIdsProto >&
ChengBaProto::tax_prize_collect_hero_ids() const {
  return tax_prize_collect_hero_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::ChengBaPrizeCollectHeroIdsProto >*
ChengBaProto::mutable_tax_prize_collect_hero_ids() {
  return &tax_prize_collect_hero_ids_;
}

// optional int64 last_reset_daily_stat_time = 5;
inline bool ChengBaProto::has_last_reset_daily_stat_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ChengBaProto::set_has_last_reset_daily_stat_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ChengBaProto::clear_has_last_reset_daily_stat_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ChengBaProto::clear_last_reset_daily_stat_time() {
  last_reset_daily_stat_time_ = GOOGLE_LONGLONG(0);
  clear_has_last_reset_daily_stat_time();
}
inline ::google::protobuf::int64 ChengBaProto::last_reset_daily_stat_time() const {
  return last_reset_daily_stat_time_;
}
inline void ChengBaProto::set_last_reset_daily_stat_time(::google::protobuf::int64 value) {
  set_has_last_reset_daily_stat_time();
  last_reset_daily_stat_time_ = value;
}

// optional bytes self_rank_key = 6;
inline bool ChengBaProto::has_self_rank_key() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ChengBaProto::set_has_self_rank_key() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ChengBaProto::clear_has_self_rank_key() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ChengBaProto::clear_self_rank_key() {
  if (self_rank_key_ != &::google::protobuf::internal::kEmptyString) {
    self_rank_key_->clear();
  }
  clear_has_self_rank_key();
}
inline const ::std::string& ChengBaProto::self_rank_key() const {
  return *self_rank_key_;
}
inline void ChengBaProto::set_self_rank_key(const ::std::string& value) {
  set_has_self_rank_key();
  if (self_rank_key_ == &::google::protobuf::internal::kEmptyString) {
    self_rank_key_ = new ::std::string;
  }
  self_rank_key_->assign(value);
}
inline void ChengBaProto::set_self_rank_key(const char* value) {
  set_has_self_rank_key();
  if (self_rank_key_ == &::google::protobuf::internal::kEmptyString) {
    self_rank_key_ = new ::std::string;
  }
  self_rank_key_->assign(value);
}
inline void ChengBaProto::set_self_rank_key(const void* value, size_t size) {
  set_has_self_rank_key();
  if (self_rank_key_ == &::google::protobuf::internal::kEmptyString) {
    self_rank_key_ = new ::std::string;
  }
  self_rank_key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ChengBaProto::mutable_self_rank_key() {
  set_has_self_rank_key();
  if (self_rank_key_ == &::google::protobuf::internal::kEmptyString) {
    self_rank_key_ = new ::std::string;
  }
  return self_rank_key_;
}
inline ::std::string* ChengBaProto::release_self_rank_key() {
  clear_has_self_rank_key();
  if (self_rank_key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = self_rank_key_;
    self_rank_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ChengBaProto::set_allocated_self_rank_key(::std::string* self_rank_key) {
  if (self_rank_key_ != &::google::protobuf::internal::kEmptyString) {
    delete self_rank_key_;
  }
  if (self_rank_key) {
    set_has_self_rank_key();
    self_rank_key_ = self_rank_key;
  } else {
    clear_has_self_rank_key();
    self_rank_key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ChengBaRankObjProto

// optional int32 operator_id = 1;
inline bool ChengBaRankObjProto::has_operator_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChengBaRankObjProto::set_has_operator_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChengBaRankObjProto::clear_has_operator_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChengBaRankObjProto::clear_operator_id() {
  operator_id_ = 0;
  clear_has_operator_id();
}
inline ::google::protobuf::int32 ChengBaRankObjProto::operator_id() const {
  return operator_id_;
}
inline void ChengBaRankObjProto::set_operator_id(::google::protobuf::int32 value) {
  set_has_operator_id();
  operator_id_ = value;
}

// optional int32 server_id = 2;
inline bool ChengBaRankObjProto::has_server_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChengBaRankObjProto::set_has_server_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChengBaRankObjProto::clear_has_server_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChengBaRankObjProto::clear_server_id() {
  server_id_ = 0;
  clear_has_server_id();
}
inline ::google::protobuf::int32 ChengBaRankObjProto::server_id() const {
  return server_id_;
}
inline void ChengBaRankObjProto::set_server_id(::google::protobuf::int32 value) {
  set_has_server_id();
  server_id_ = value;
}

// optional bytes guild_name = 3;
inline bool ChengBaRankObjProto::has_guild_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChengBaRankObjProto::set_has_guild_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChengBaRankObjProto::clear_has_guild_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChengBaRankObjProto::clear_guild_name() {
  if (guild_name_ != &::google::protobuf::internal::kEmptyString) {
    guild_name_->clear();
  }
  clear_has_guild_name();
}
inline const ::std::string& ChengBaRankObjProto::guild_name() const {
  return *guild_name_;
}
inline void ChengBaRankObjProto::set_guild_name(const ::std::string& value) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(value);
}
inline void ChengBaRankObjProto::set_guild_name(const char* value) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(value);
}
inline void ChengBaRankObjProto::set_guild_name(const void* value, size_t size) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ChengBaRankObjProto::mutable_guild_name() {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    guild_name_ = new ::std::string;
  }
  return guild_name_;
}
inline ::std::string* ChengBaRankObjProto::release_guild_name() {
  clear_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = guild_name_;
    guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ChengBaRankObjProto::set_allocated_guild_name(::std::string* guild_name) {
  if (guild_name_ != &::google::protobuf::internal::kEmptyString) {
    delete guild_name_;
  }
  if (guild_name) {
    set_has_guild_name();
    guild_name_ = guild_name;
  } else {
    clear_has_guild_name();
    guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 guild_active = 4;
inline bool ChengBaRankObjProto::has_guild_active() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChengBaRankObjProto::set_has_guild_active() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChengBaRankObjProto::clear_has_guild_active() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChengBaRankObjProto::clear_guild_active() {
  guild_active_ = 0;
  clear_has_guild_active();
}
inline ::google::protobuf::int32 ChengBaRankObjProto::guild_active() const {
  return guild_active_;
}
inline void ChengBaRankObjProto::set_guild_active(::google::protobuf::int32 value) {
  set_has_guild_active();
  guild_active_ = value;
}

// optional int64 guild_fighting_amount = 5;
inline bool ChengBaRankObjProto::has_guild_fighting_amount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ChengBaRankObjProto::set_has_guild_fighting_amount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ChengBaRankObjProto::clear_has_guild_fighting_amount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ChengBaRankObjProto::clear_guild_fighting_amount() {
  guild_fighting_amount_ = GOOGLE_LONGLONG(0);
  clear_has_guild_fighting_amount();
}
inline ::google::protobuf::int64 ChengBaRankObjProto::guild_fighting_amount() const {
  return guild_fighting_amount_;
}
inline void ChengBaRankObjProto::set_guild_fighting_amount(::google::protobuf::int64 value) {
  set_has_guild_fighting_amount();
  guild_fighting_amount_ = value;
}

// optional int32 occupy_stat = 6;
inline bool ChengBaRankObjProto::has_occupy_stat() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ChengBaRankObjProto::set_has_occupy_stat() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ChengBaRankObjProto::clear_has_occupy_stat() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ChengBaRankObjProto::clear_occupy_stat() {
  occupy_stat_ = 0;
  clear_has_occupy_stat();
}
inline ::google::protobuf::int32 ChengBaRankObjProto::occupy_stat() const {
  return occupy_stat_;
}
inline void ChengBaRankObjProto::set_occupy_stat(::google::protobuf::int32 value) {
  set_has_occupy_stat();
  occupy_stat_ = value;
}

// -------------------------------------------------------------------

// ChengBaPrizeCollectHeroIdsProto

// repeated int64 hero_id = 1;
inline int ChengBaPrizeCollectHeroIdsProto::hero_id_size() const {
  return hero_id_.size();
}
inline void ChengBaPrizeCollectHeroIdsProto::clear_hero_id() {
  hero_id_.Clear();
}
inline ::google::protobuf::int64 ChengBaPrizeCollectHeroIdsProto::hero_id(int index) const {
  return hero_id_.Get(index);
}
inline void ChengBaPrizeCollectHeroIdsProto::set_hero_id(int index, ::google::protobuf::int64 value) {
  hero_id_.Set(index, value);
}
inline void ChengBaPrizeCollectHeroIdsProto::add_hero_id(::google::protobuf::int64 value) {
  hero_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
ChengBaPrizeCollectHeroIdsProto::hero_id() const {
  return hero_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
ChengBaPrizeCollectHeroIdsProto::mutable_hero_id() {
  return &hero_id_;
}

// -------------------------------------------------------------------

// GuildDungeonBossKilledProto

// repeated int64 scene_id_boss_sequence = 1;
inline int GuildDungeonBossKilledProto::scene_id_boss_sequence_size() const {
  return scene_id_boss_sequence_.size();
}
inline void GuildDungeonBossKilledProto::clear_scene_id_boss_sequence() {
  scene_id_boss_sequence_.Clear();
}
inline ::google::protobuf::int64 GuildDungeonBossKilledProto::scene_id_boss_sequence(int index) const {
  return scene_id_boss_sequence_.Get(index);
}
inline void GuildDungeonBossKilledProto::set_scene_id_boss_sequence(int index, ::google::protobuf::int64 value) {
  scene_id_boss_sequence_.Set(index, value);
}
inline void GuildDungeonBossKilledProto::add_scene_id_boss_sequence(::google::protobuf::int64 value) {
  scene_id_boss_sequence_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GuildDungeonBossKilledProto::scene_id_boss_sequence() const {
  return scene_id_boss_sequence_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GuildDungeonBossKilledProto::mutable_scene_id_boss_sequence() {
  return &scene_id_boss_sequence_;
}

// repeated int64 boss_dead_time = 2;
inline int GuildDungeonBossKilledProto::boss_dead_time_size() const {
  return boss_dead_time_.size();
}
inline void GuildDungeonBossKilledProto::clear_boss_dead_time() {
  boss_dead_time_.Clear();
}
inline ::google::protobuf::int64 GuildDungeonBossKilledProto::boss_dead_time(int index) const {
  return boss_dead_time_.Get(index);
}
inline void GuildDungeonBossKilledProto::set_boss_dead_time(int index, ::google::protobuf::int64 value) {
  boss_dead_time_.Set(index, value);
}
inline void GuildDungeonBossKilledProto::add_boss_dead_time(::google::protobuf::int64 value) {
  boss_dead_time_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
GuildDungeonBossKilledProto::boss_dead_time() const {
  return boss_dead_time_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
GuildDungeonBossKilledProto::mutable_boss_dead_time() {
  return &boss_dead_time_;
}

// -------------------------------------------------------------------

// ChallengeFastCrossProto

// optional int32 sequence = 1;
inline bool ChallengeFastCrossProto::has_sequence() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ChallengeFastCrossProto::set_has_sequence() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ChallengeFastCrossProto::clear_has_sequence() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ChallengeFastCrossProto::clear_sequence() {
  sequence_ = 0;
  clear_has_sequence();
}
inline ::google::protobuf::int32 ChallengeFastCrossProto::sequence() const {
  return sequence_;
}
inline void ChallengeFastCrossProto::set_sequence(::google::protobuf::int32 value) {
  set_has_sequence();
  sequence_ = value;
}

// optional int64 id = 2;
inline bool ChallengeFastCrossProto::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ChallengeFastCrossProto::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ChallengeFastCrossProto::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ChallengeFastCrossProto::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 ChallengeFastCrossProto::id() const {
  return id_;
}
inline void ChallengeFastCrossProto::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional bytes name = 3;
inline bool ChallengeFastCrossProto::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ChallengeFastCrossProto::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ChallengeFastCrossProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ChallengeFastCrossProto::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ChallengeFastCrossProto::name() const {
  return *name_;
}
inline void ChallengeFastCrossProto::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ChallengeFastCrossProto::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ChallengeFastCrossProto::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ChallengeFastCrossProto::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ChallengeFastCrossProto::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ChallengeFastCrossProto::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 use_time = 4;
inline bool ChallengeFastCrossProto::has_use_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ChallengeFastCrossProto::set_has_use_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ChallengeFastCrossProto::clear_has_use_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ChallengeFastCrossProto::clear_use_time() {
  use_time_ = 0;
  clear_has_use_time();
}
inline ::google::protobuf::int32 ChallengeFastCrossProto::use_time() const {
  return use_time_;
}
inline void ChallengeFastCrossProto::set_use_time(::google::protobuf::int32 value) {
  set_has_use_time();
  use_time_ = value;
}

// -------------------------------------------------------------------

// TongTianTaFastCrossProto

// optional int32 sequence = 1;
inline bool TongTianTaFastCrossProto::has_sequence() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TongTianTaFastCrossProto::set_has_sequence() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TongTianTaFastCrossProto::clear_has_sequence() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TongTianTaFastCrossProto::clear_sequence() {
  sequence_ = 0;
  clear_has_sequence();
}
inline ::google::protobuf::int32 TongTianTaFastCrossProto::sequence() const {
  return sequence_;
}
inline void TongTianTaFastCrossProto::set_sequence(::google::protobuf::int32 value) {
  set_has_sequence();
  sequence_ = value;
}

// optional int64 id = 2;
inline bool TongTianTaFastCrossProto::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TongTianTaFastCrossProto::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TongTianTaFastCrossProto::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TongTianTaFastCrossProto::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 TongTianTaFastCrossProto::id() const {
  return id_;
}
inline void TongTianTaFastCrossProto::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional bytes name = 3;
inline bool TongTianTaFastCrossProto::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TongTianTaFastCrossProto::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TongTianTaFastCrossProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TongTianTaFastCrossProto::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& TongTianTaFastCrossProto::name() const {
  return *name_;
}
inline void TongTianTaFastCrossProto::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void TongTianTaFastCrossProto::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void TongTianTaFastCrossProto::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* TongTianTaFastCrossProto::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* TongTianTaFastCrossProto::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void TongTianTaFastCrossProto::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 use_time = 4;
inline bool TongTianTaFastCrossProto::has_use_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TongTianTaFastCrossProto::set_has_use_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TongTianTaFastCrossProto::clear_has_use_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TongTianTaFastCrossProto::clear_use_time() {
  use_time_ = 0;
  clear_has_use_time();
}
inline ::google::protobuf::int32 TongTianTaFastCrossProto::use_time() const {
  return use_time_;
}
inline void TongTianTaFastCrossProto::set_use_time(::google::protobuf::int32 value) {
  set_has_use_time();
  use_time_ = value;
}

// -------------------------------------------------------------------

// ClientNewsProto

// repeated bytes news = 1;
inline int ClientNewsProto::news_size() const {
  return news_.size();
}
inline void ClientNewsProto::clear_news() {
  news_.Clear();
}
inline const ::std::string& ClientNewsProto::news(int index) const {
  return news_.Get(index);
}
inline ::std::string* ClientNewsProto::mutable_news(int index) {
  return news_.Mutable(index);
}
inline void ClientNewsProto::set_news(int index, const ::std::string& value) {
  news_.Mutable(index)->assign(value);
}
inline void ClientNewsProto::set_news(int index, const char* value) {
  news_.Mutable(index)->assign(value);
}
inline void ClientNewsProto::set_news(int index, const void* value, size_t size) {
  news_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ClientNewsProto::add_news() {
  return news_.Add();
}
inline void ClientNewsProto::add_news(const ::std::string& value) {
  news_.Add()->assign(value);
}
inline void ClientNewsProto::add_news(const char* value) {
  news_.Add()->assign(value);
}
inline void ClientNewsProto::add_news(const void* value, size_t size) {
  news_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ClientNewsProto::news() const {
  return news_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ClientNewsProto::mutable_news() {
  return &news_;
}

// -------------------------------------------------------------------

// ClientGuildListProto

// repeated .app.message.GuildInListProto guild = 1;
inline int ClientGuildListProto::guild_size() const {
  return guild_.size();
}
inline void ClientGuildListProto::clear_guild() {
  guild_.Clear();
}
inline const ::app::message::GuildInListProto& ClientGuildListProto::guild(int index) const {
  return guild_.Get(index);
}
inline ::app::message::GuildInListProto* ClientGuildListProto::mutable_guild(int index) {
  return guild_.Mutable(index);
}
inline ::app::message::GuildInListProto* ClientGuildListProto::add_guild() {
  return guild_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::GuildInListProto >&
ClientGuildListProto::guild() const {
  return guild_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::GuildInListProto >*
ClientGuildListProto::mutable_guild() {
  return &guild_;
}

// -------------------------------------------------------------------

// GuildInListProto

// optional bytes name = 1;
inline bool GuildInListProto::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildInListProto::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildInListProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildInListProto::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GuildInListProto::name() const {
  return *name_;
}
inline void GuildInListProto::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GuildInListProto::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GuildInListProto::set_name(const void* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildInListProto::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* GuildInListProto::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GuildInListProto::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes flag_name = 2;
inline bool GuildInListProto::has_flag_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildInListProto::set_has_flag_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildInListProto::clear_has_flag_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildInListProto::clear_flag_name() {
  if (flag_name_ != &::google::protobuf::internal::kEmptyString) {
    flag_name_->clear();
  }
  clear_has_flag_name();
}
inline const ::std::string& GuildInListProto::flag_name() const {
  return *flag_name_;
}
inline void GuildInListProto::set_flag_name(const ::std::string& value) {
  set_has_flag_name();
  if (flag_name_ == &::google::protobuf::internal::kEmptyString) {
    flag_name_ = new ::std::string;
  }
  flag_name_->assign(value);
}
inline void GuildInListProto::set_flag_name(const char* value) {
  set_has_flag_name();
  if (flag_name_ == &::google::protobuf::internal::kEmptyString) {
    flag_name_ = new ::std::string;
  }
  flag_name_->assign(value);
}
inline void GuildInListProto::set_flag_name(const void* value, size_t size) {
  set_has_flag_name();
  if (flag_name_ == &::google::protobuf::internal::kEmptyString) {
    flag_name_ = new ::std::string;
  }
  flag_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildInListProto::mutable_flag_name() {
  set_has_flag_name();
  if (flag_name_ == &::google::protobuf::internal::kEmptyString) {
    flag_name_ = new ::std::string;
  }
  return flag_name_;
}
inline ::std::string* GuildInListProto::release_flag_name() {
  clear_has_flag_name();
  if (flag_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = flag_name_;
    flag_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GuildInListProto::set_allocated_flag_name(::std::string* flag_name) {
  if (flag_name_ != &::google::protobuf::internal::kEmptyString) {
    delete flag_name_;
  }
  if (flag_name) {
    set_has_flag_name();
    flag_name_ = flag_name;
  } else {
    clear_has_flag_name();
    flag_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 flag_level = 3;
inline bool GuildInListProto::has_flag_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildInListProto::set_has_flag_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildInListProto::clear_has_flag_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildInListProto::clear_flag_level() {
  flag_level_ = 0;
  clear_has_flag_level();
}
inline ::google::protobuf::int32 GuildInListProto::flag_level() const {
  return flag_level_;
}
inline void GuildInListProto::set_flag_level(::google::protobuf::int32 value) {
  set_has_flag_level();
  flag_level_ = value;
}

// optional bool is_auto_accept_join_request = 4;
inline bool GuildInListProto::has_is_auto_accept_join_request() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildInListProto::set_has_is_auto_accept_join_request() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildInListProto::clear_has_is_auto_accept_join_request() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildInListProto::clear_is_auto_accept_join_request() {
  is_auto_accept_join_request_ = false;
  clear_has_is_auto_accept_join_request();
}
inline bool GuildInListProto::is_auto_accept_join_request() const {
  return is_auto_accept_join_request_;
}
inline void GuildInListProto::set_is_auto_accept_join_request(bool value) {
  set_has_is_auto_accept_join_request();
  is_auto_accept_join_request_ = value;
}

// optional int32 hero_count = 5;
inline bool GuildInListProto::has_hero_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GuildInListProto::set_has_hero_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GuildInListProto::clear_has_hero_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GuildInListProto::clear_hero_count() {
  hero_count_ = 0;
  clear_has_hero_count();
}
inline ::google::protobuf::int32 GuildInListProto::hero_count() const {
  return hero_count_;
}
inline void GuildInListProto::set_hero_count(::google::protobuf::int32 value) {
  set_has_hero_count();
  hero_count_ = value;
}

// optional int32 max_hero_count = 6;
inline bool GuildInListProto::has_max_hero_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GuildInListProto::set_has_max_hero_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GuildInListProto::clear_has_max_hero_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GuildInListProto::clear_max_hero_count() {
  max_hero_count_ = 0;
  clear_has_max_hero_count();
}
inline ::google::protobuf::int32 GuildInListProto::max_hero_count() const {
  return max_hero_count_;
}
inline void GuildInListProto::set_max_hero_count(::google::protobuf::int32 value) {
  set_has_max_hero_count();
  max_hero_count_ = value;
}

// optional int64 leader_id = 18;
inline bool GuildInListProto::has_leader_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GuildInListProto::set_has_leader_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GuildInListProto::clear_has_leader_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GuildInListProto::clear_leader_id() {
  leader_id_ = GOOGLE_LONGLONG(0);
  clear_has_leader_id();
}
inline ::google::protobuf::int64 GuildInListProto::leader_id() const {
  return leader_id_;
}
inline void GuildInListProto::set_leader_id(::google::protobuf::int64 value) {
  set_has_leader_id();
  leader_id_ = value;
}

// optional bytes leader_name = 7;
inline bool GuildInListProto::has_leader_name() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GuildInListProto::set_has_leader_name() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GuildInListProto::clear_has_leader_name() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GuildInListProto::clear_leader_name() {
  if (leader_name_ != &::google::protobuf::internal::kEmptyString) {
    leader_name_->clear();
  }
  clear_has_leader_name();
}
inline const ::std::string& GuildInListProto::leader_name() const {
  return *leader_name_;
}
inline void GuildInListProto::set_leader_name(const ::std::string& value) {
  set_has_leader_name();
  if (leader_name_ == &::google::protobuf::internal::kEmptyString) {
    leader_name_ = new ::std::string;
  }
  leader_name_->assign(value);
}
inline void GuildInListProto::set_leader_name(const char* value) {
  set_has_leader_name();
  if (leader_name_ == &::google::protobuf::internal::kEmptyString) {
    leader_name_ = new ::std::string;
  }
  leader_name_->assign(value);
}
inline void GuildInListProto::set_leader_name(const void* value, size_t size) {
  set_has_leader_name();
  if (leader_name_ == &::google::protobuf::internal::kEmptyString) {
    leader_name_ = new ::std::string;
  }
  leader_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildInListProto::mutable_leader_name() {
  set_has_leader_name();
  if (leader_name_ == &::google::protobuf::internal::kEmptyString) {
    leader_name_ = new ::std::string;
  }
  return leader_name_;
}
inline ::std::string* GuildInListProto::release_leader_name() {
  clear_has_leader_name();
  if (leader_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = leader_name_;
    leader_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GuildInListProto::set_allocated_leader_name(::std::string* leader_name) {
  if (leader_name_ != &::google::protobuf::internal::kEmptyString) {
    delete leader_name_;
  }
  if (leader_name) {
    set_has_leader_name();
    leader_name_ = leader_name;
  } else {
    clear_has_leader_name();
    leader_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool leader_online = 8;
inline bool GuildInListProto::has_leader_online() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GuildInListProto::set_has_leader_online() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GuildInListProto::clear_has_leader_online() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GuildInListProto::clear_leader_online() {
  leader_online_ = false;
  clear_has_leader_online();
}
inline bool GuildInListProto::leader_online() const {
  return leader_online_;
}
inline void GuildInListProto::set_leader_online(bool value) {
  set_has_leader_online();
  leader_online_ = value;
}

// optional int32 leader_level = 13;
inline bool GuildInListProto::has_leader_level() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GuildInListProto::set_has_leader_level() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GuildInListProto::clear_has_leader_level() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GuildInListProto::clear_leader_level() {
  leader_level_ = 0;
  clear_has_leader_level();
}
inline ::google::protobuf::int32 GuildInListProto::leader_level() const {
  return leader_level_;
}
inline void GuildInListProto::set_leader_level(::google::protobuf::int32 value) {
  set_has_leader_level();
  leader_level_ = value;
}

// optional bytes vice_leader_name = 9;
inline bool GuildInListProto::has_vice_leader_name() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GuildInListProto::set_has_vice_leader_name() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GuildInListProto::clear_has_vice_leader_name() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GuildInListProto::clear_vice_leader_name() {
  if (vice_leader_name_ != &::google::protobuf::internal::kEmptyString) {
    vice_leader_name_->clear();
  }
  clear_has_vice_leader_name();
}
inline const ::std::string& GuildInListProto::vice_leader_name() const {
  return *vice_leader_name_;
}
inline void GuildInListProto::set_vice_leader_name(const ::std::string& value) {
  set_has_vice_leader_name();
  if (vice_leader_name_ == &::google::protobuf::internal::kEmptyString) {
    vice_leader_name_ = new ::std::string;
  }
  vice_leader_name_->assign(value);
}
inline void GuildInListProto::set_vice_leader_name(const char* value) {
  set_has_vice_leader_name();
  if (vice_leader_name_ == &::google::protobuf::internal::kEmptyString) {
    vice_leader_name_ = new ::std::string;
  }
  vice_leader_name_->assign(value);
}
inline void GuildInListProto::set_vice_leader_name(const void* value, size_t size) {
  set_has_vice_leader_name();
  if (vice_leader_name_ == &::google::protobuf::internal::kEmptyString) {
    vice_leader_name_ = new ::std::string;
  }
  vice_leader_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GuildInListProto::mutable_vice_leader_name() {
  set_has_vice_leader_name();
  if (vice_leader_name_ == &::google::protobuf::internal::kEmptyString) {
    vice_leader_name_ = new ::std::string;
  }
  return vice_leader_name_;
}
inline ::std::string* GuildInListProto::release_vice_leader_name() {
  clear_has_vice_leader_name();
  if (vice_leader_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = vice_leader_name_;
    vice_leader_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GuildInListProto::set_allocated_vice_leader_name(::std::string* vice_leader_name) {
  if (vice_leader_name_ != &::google::protobuf::internal::kEmptyString) {
    delete vice_leader_name_;
  }
  if (vice_leader_name) {
    set_has_vice_leader_name();
    vice_leader_name_ = vice_leader_name;
  } else {
    clear_has_vice_leader_name();
    vice_leader_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bool vice_leader_online = 10;
inline bool GuildInListProto::has_vice_leader_online() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void GuildInListProto::set_has_vice_leader_online() {
  _has_bits_[0] |= 0x00000800u;
}
inline void GuildInListProto::clear_has_vice_leader_online() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void GuildInListProto::clear_vice_leader_online() {
  vice_leader_online_ = false;
  clear_has_vice_leader_online();
}
inline bool GuildInListProto::vice_leader_online() const {
  return vice_leader_online_;
}
inline void GuildInListProto::set_vice_leader_online(bool value) {
  set_has_vice_leader_online();
  vice_leader_online_ = value;
}

// optional int32 vice_leader_level = 14;
inline bool GuildInListProto::has_vice_leader_level() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void GuildInListProto::set_has_vice_leader_level() {
  _has_bits_[0] |= 0x00001000u;
}
inline void GuildInListProto::clear_has_vice_leader_level() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void GuildInListProto::clear_vice_leader_level() {
  vice_leader_level_ = 0;
  clear_has_vice_leader_level();
}
inline ::google::protobuf::int32 GuildInListProto::vice_leader_level() const {
  return vice_leader_level_;
}
inline void GuildInListProto::set_vice_leader_level(::google::protobuf::int32 value) {
  set_has_vice_leader_level();
  vice_leader_level_ = value;
}

// optional int64 total_fight_amount = 11;
inline bool GuildInListProto::has_total_fight_amount() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void GuildInListProto::set_has_total_fight_amount() {
  _has_bits_[0] |= 0x00002000u;
}
inline void GuildInListProto::clear_has_total_fight_amount() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void GuildInListProto::clear_total_fight_amount() {
  total_fight_amount_ = GOOGLE_LONGLONG(0);
  clear_has_total_fight_amount();
}
inline ::google::protobuf::int64 GuildInListProto::total_fight_amount() const {
  return total_fight_amount_;
}
inline void GuildInListProto::set_total_fight_amount(::google::protobuf::int64 value) {
  set_has_total_fight_amount();
  total_fight_amount_ = value;
}

// optional int64 create_time = 12;
inline bool GuildInListProto::has_create_time() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void GuildInListProto::set_has_create_time() {
  _has_bits_[0] |= 0x00004000u;
}
inline void GuildInListProto::clear_has_create_time() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void GuildInListProto::clear_create_time() {
  create_time_ = GOOGLE_LONGLONG(0);
  clear_has_create_time();
}
inline ::google::protobuf::int64 GuildInListProto::create_time() const {
  return create_time_;
}
inline void GuildInListProto::set_create_time(::google::protobuf::int64 value) {
  set_has_create_time();
  create_time_ = value;
}

// optional int32 operator_id = 15;
inline bool GuildInListProto::has_operator_id() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void GuildInListProto::set_has_operator_id() {
  _has_bits_[0] |= 0x00008000u;
}
inline void GuildInListProto::clear_has_operator_id() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void GuildInListProto::clear_operator_id() {
  operator_id_ = 0;
  clear_has_operator_id();
}
inline ::google::protobuf::int32 GuildInListProto::operator_id() const {
  return operator_id_;
}
inline void GuildInListProto::set_operator_id(::google::protobuf::int32 value) {
  set_has_operator_id();
  operator_id_ = value;
}

// optional int32 server_id = 16;
inline bool GuildInListProto::has_server_id() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void GuildInListProto::set_has_server_id() {
  _has_bits_[0] |= 0x00010000u;
}
inline void GuildInListProto::clear_has_server_id() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void GuildInListProto::clear_server_id() {
  server_id_ = 0;
  clear_has_server_id();
}
inline ::google::protobuf::int32 GuildInListProto::server_id() const {
  return server_id_;
}
inline void GuildInListProto::set_server_id(::google::protobuf::int32 value) {
  set_has_server_id();
  server_id_ = value;
}

// optional int32 territory_master_count = 17;
inline bool GuildInListProto::has_territory_master_count() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void GuildInListProto::set_has_territory_master_count() {
  _has_bits_[0] |= 0x00020000u;
}
inline void GuildInListProto::clear_has_territory_master_count() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void GuildInListProto::clear_territory_master_count() {
  territory_master_count_ = 0;
  clear_has_territory_master_count();
}
inline ::google::protobuf::int32 GuildInListProto::territory_master_count() const {
  return territory_master_count_;
}
inline void GuildInListProto::set_territory_master_count(::google::protobuf::int32 value) {
  set_has_territory_master_count();
  territory_master_count_ = value;
}

// -------------------------------------------------------------------

// GuildBossCard

// optional int32 weekly_call_count = 1;
inline bool GuildBossCard::has_weekly_call_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GuildBossCard::set_has_weekly_call_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GuildBossCard::clear_has_weekly_call_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GuildBossCard::clear_weekly_call_count() {
  weekly_call_count_ = 0;
  clear_has_weekly_call_count();
}
inline ::google::protobuf::int32 GuildBossCard::weekly_call_count() const {
  return weekly_call_count_;
}
inline void GuildBossCard::set_weekly_call_count(::google::protobuf::int32 value) {
  set_has_weekly_call_count();
  weekly_call_count_ = value;
}

// optional int32 grow_up_point = 2;
inline bool GuildBossCard::has_grow_up_point() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GuildBossCard::set_has_grow_up_point() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GuildBossCard::clear_has_grow_up_point() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GuildBossCard::clear_grow_up_point() {
  grow_up_point_ = 0;
  clear_has_grow_up_point();
}
inline ::google::protobuf::int32 GuildBossCard::grow_up_point() const {
  return grow_up_point_;
}
inline void GuildBossCard::set_grow_up_point(::google::protobuf::int32 value) {
  set_has_grow_up_point();
  grow_up_point_ = value;
}

// optional int32 current_card_id = 3;
inline bool GuildBossCard::has_current_card_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GuildBossCard::set_has_current_card_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GuildBossCard::clear_has_current_card_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GuildBossCard::clear_current_card_id() {
  current_card_id_ = 0;
  clear_has_current_card_id();
}
inline ::google::protobuf::int32 GuildBossCard::current_card_id() const {
  return current_card_id_;
}
inline void GuildBossCard::set_current_card_id(::google::protobuf::int32 value) {
  set_has_current_card_id();
  current_card_id_ = value;
}

// optional int32 current_calling_card_id = 4;
inline bool GuildBossCard::has_current_calling_card_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GuildBossCard::set_has_current_calling_card_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GuildBossCard::clear_has_current_calling_card_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GuildBossCard::clear_current_calling_card_id() {
  current_calling_card_id_ = 0;
  clear_has_current_calling_card_id();
}
inline ::google::protobuf::int32 GuildBossCard::current_calling_card_id() const {
  return current_calling_card_id_;
}
inline void GuildBossCard::set_current_calling_card_id(::google::protobuf::int32 value) {
  set_has_current_calling_card_id();
  current_calling_card_id_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace app

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_guild_2eproto__INCLUDED
