// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: goods_exchange_rule.proto

#ifndef PROTOBUF_goods_5fexchange_5frule_2eproto__INCLUDED
#define PROTOBUF_goods_5fexchange_5frule_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "goods.pb.h"
// @@protoc_insertion_point(includes)

namespace app {
namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_goods_5fexchange_5frule_2eproto();
void protobuf_AssignDesc_goods_5fexchange_5frule_2eproto();
void protobuf_ShutdownFile_goods_5fexchange_5frule_2eproto();

class GoodsExchangeRuleProto;
class GoodsExchangeRuleConfigProto;

// ===================================================================

class GoodsExchangeRuleProto : public ::google::protobuf::Message {
 public:
  GoodsExchangeRuleProto();
  virtual ~GoodsExchangeRuleProto();

  GoodsExchangeRuleProto(const GoodsExchangeRuleProto& from);

  inline GoodsExchangeRuleProto& operator=(const GoodsExchangeRuleProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GoodsExchangeRuleProto& default_instance();

  void Swap(GoodsExchangeRuleProto* other);

  // implements Message ----------------------------------------------

  GoodsExchangeRuleProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GoodsExchangeRuleProto& from);
  void MergeFrom(const GoodsExchangeRuleProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .app.message.ExchangeGoodsWrapperProto cost_goods = 2;
  inline int cost_goods_size() const;
  inline void clear_cost_goods();
  static const int kCostGoodsFieldNumber = 2;
  inline const ::app::message::ExchangeGoodsWrapperProto& cost_goods(int index) const;
  inline ::app::message::ExchangeGoodsWrapperProto* mutable_cost_goods(int index);
  inline ::app::message::ExchangeGoodsWrapperProto* add_cost_goods();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::ExchangeGoodsWrapperProto >&
      cost_goods() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::ExchangeGoodsWrapperProto >*
      mutable_cost_goods();

  // repeated .app.message.GoodsWrapperProto obtain_goods = 3;
  inline int obtain_goods_size() const;
  inline void clear_obtain_goods();
  static const int kObtainGoodsFieldNumber = 3;
  inline const ::app::message::GoodsWrapperProto& obtain_goods(int index) const;
  inline ::app::message::GoodsWrapperProto* mutable_obtain_goods(int index);
  inline ::app::message::GoodsWrapperProto* add_obtain_goods();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto >&
      obtain_goods() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto >*
      mutable_obtain_goods();

  // repeated .app.message.GoodsWrapperProto detail_goods = 4;
  inline int detail_goods_size() const;
  inline void clear_detail_goods();
  static const int kDetailGoodsFieldNumber = 4;
  inline const ::app::message::GoodsWrapperProto& detail_goods(int index) const;
  inline ::app::message::GoodsWrapperProto* mutable_detail_goods(int index);
  inline ::app::message::GoodsWrapperProto* add_detail_goods();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto >&
      detail_goods() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto >*
      mutable_detail_goods();

  // optional int32 limit = 5;
  inline bool has_limit() const;
  inline void clear_limit();
  static const int kLimitFieldNumber = 5;
  inline ::google::protobuf::int32 limit() const;
  inline void set_limit(::google::protobuf::int32 value);

  // optional int32 limit_type = 6;
  inline bool has_limit_type() const;
  inline void clear_limit_type();
  static const int kLimitTypeFieldNumber = 6;
  inline ::google::protobuf::int32 limit_type() const;
  inline void set_limit_type(::google::protobuf::int32 value);

  // optional int32 require_vip_level = 7;
  inline bool has_require_vip_level() const;
  inline void clear_require_vip_level();
  static const int kRequireVipLevelFieldNumber = 7;
  inline ::google::protobuf::int32 require_vip_level() const;
  inline void set_require_vip_level(::google::protobuf::int32 value);

  // optional int32 money = 8;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 8;
  inline ::google::protobuf::int32 money() const;
  inline void set_money(::google::protobuf::int32 value);

  // optional int32 yuanbao = 9;
  inline bool has_yuanbao() const;
  inline void clear_yuanbao();
  static const int kYuanbaoFieldNumber = 9;
  inline ::google::protobuf::int32 yuanbao() const;
  inline void set_yuanbao(::google::protobuf::int32 value);

  // optional int32 li_jin = 10;
  inline bool has_li_jin() const;
  inline void clear_li_jin();
  static const int kLiJinFieldNumber = 10;
  inline ::google::protobuf::int32 li_jin() const;
  inline void set_li_jin(::google::protobuf::int32 value);

  // optional int32 real_air = 11;
  inline bool has_real_air() const;
  inline void clear_real_air();
  static const int kRealAirFieldNumber = 11;
  inline ::google::protobuf::int32 real_air() const;
  inline void set_real_air(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:app.message.GoodsExchangeRuleProto)
 private:
  inline void set_has_limit();
  inline void clear_has_limit();
  inline void set_has_limit_type();
  inline void clear_has_limit_type();
  inline void set_has_require_vip_level();
  inline void clear_has_require_vip_level();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_yuanbao();
  inline void clear_has_yuanbao();
  inline void set_has_li_jin();
  inline void clear_has_li_jin();
  inline void set_has_real_air();
  inline void clear_has_real_air();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::app::message::ExchangeGoodsWrapperProto > cost_goods_;
  ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto > obtain_goods_;
  ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto > detail_goods_;
  ::google::protobuf::int32 limit_;
  ::google::protobuf::int32 limit_type_;
  ::google::protobuf::int32 require_vip_level_;
  ::google::protobuf::int32 money_;
  ::google::protobuf::int32 yuanbao_;
  ::google::protobuf::int32 li_jin_;
  ::google::protobuf::int32 real_air_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_goods_5fexchange_5frule_2eproto();
  friend void protobuf_AssignDesc_goods_5fexchange_5frule_2eproto();
  friend void protobuf_ShutdownFile_goods_5fexchange_5frule_2eproto();

  void InitAsDefaultInstance();
  static GoodsExchangeRuleProto* default_instance_;
};
// -------------------------------------------------------------------

class GoodsExchangeRuleConfigProto : public ::google::protobuf::Message {
 public:
  GoodsExchangeRuleConfigProto();
  virtual ~GoodsExchangeRuleConfigProto();

  GoodsExchangeRuleConfigProto(const GoodsExchangeRuleConfigProto& from);

  inline GoodsExchangeRuleConfigProto& operator=(const GoodsExchangeRuleConfigProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GoodsExchangeRuleConfigProto& default_instance();

  void Swap(GoodsExchangeRuleConfigProto* other);

  // implements Message ----------------------------------------------

  GoodsExchangeRuleConfigProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GoodsExchangeRuleConfigProto& from);
  void MergeFrom(const GoodsExchangeRuleConfigProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 start_time = 1;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 1;
  inline ::google::protobuf::int64 start_time() const;
  inline void set_start_time(::google::protobuf::int64 value);

  // optional int64 end_time = 2;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 2;
  inline ::google::protobuf::int64 end_time() const;
  inline void set_end_time(::google::protobuf::int64 value);

  // optional int32 type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // optional int32 goods_type = 4;
  inline bool has_goods_type() const;
  inline void clear_goods_type();
  static const int kGoodsTypeFieldNumber = 4;
  inline ::google::protobuf::int32 goods_type() const;
  inline void set_goods_type(::google::protobuf::int32 value);

  // repeated .app.message.GoodsExchangeRuleProto rule_list = 5;
  inline int rule_list_size() const;
  inline void clear_rule_list();
  static const int kRuleListFieldNumber = 5;
  inline const ::app::message::GoodsExchangeRuleProto& rule_list(int index) const;
  inline ::app::message::GoodsExchangeRuleProto* mutable_rule_list(int index);
  inline ::app::message::GoodsExchangeRuleProto* add_rule_list();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::GoodsExchangeRuleProto >&
      rule_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::GoodsExchangeRuleProto >*
      mutable_rule_list();

  // @@protoc_insertion_point(class_scope:app.message.GoodsExchangeRuleConfigProto)
 private:
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_end_time();
  inline void clear_has_end_time();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_goods_type();
  inline void clear_has_goods_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 start_time_;
  ::google::protobuf::int64 end_time_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 goods_type_;
  ::google::protobuf::RepeatedPtrField< ::app::message::GoodsExchangeRuleProto > rule_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_goods_5fexchange_5frule_2eproto();
  friend void protobuf_AssignDesc_goods_5fexchange_5frule_2eproto();
  friend void protobuf_ShutdownFile_goods_5fexchange_5frule_2eproto();

  void InitAsDefaultInstance();
  static GoodsExchangeRuleConfigProto* default_instance_;
};
// ===================================================================


// ===================================================================

// GoodsExchangeRuleProto

// repeated .app.message.ExchangeGoodsWrapperProto cost_goods = 2;
inline int GoodsExchangeRuleProto::cost_goods_size() const {
  return cost_goods_.size();
}
inline void GoodsExchangeRuleProto::clear_cost_goods() {
  cost_goods_.Clear();
}
inline const ::app::message::ExchangeGoodsWrapperProto& GoodsExchangeRuleProto::cost_goods(int index) const {
  return cost_goods_.Get(index);
}
inline ::app::message::ExchangeGoodsWrapperProto* GoodsExchangeRuleProto::mutable_cost_goods(int index) {
  return cost_goods_.Mutable(index);
}
inline ::app::message::ExchangeGoodsWrapperProto* GoodsExchangeRuleProto::add_cost_goods() {
  return cost_goods_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::ExchangeGoodsWrapperProto >&
GoodsExchangeRuleProto::cost_goods() const {
  return cost_goods_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::ExchangeGoodsWrapperProto >*
GoodsExchangeRuleProto::mutable_cost_goods() {
  return &cost_goods_;
}

// repeated .app.message.GoodsWrapperProto obtain_goods = 3;
inline int GoodsExchangeRuleProto::obtain_goods_size() const {
  return obtain_goods_.size();
}
inline void GoodsExchangeRuleProto::clear_obtain_goods() {
  obtain_goods_.Clear();
}
inline const ::app::message::GoodsWrapperProto& GoodsExchangeRuleProto::obtain_goods(int index) const {
  return obtain_goods_.Get(index);
}
inline ::app::message::GoodsWrapperProto* GoodsExchangeRuleProto::mutable_obtain_goods(int index) {
  return obtain_goods_.Mutable(index);
}
inline ::app::message::GoodsWrapperProto* GoodsExchangeRuleProto::add_obtain_goods() {
  return obtain_goods_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto >&
GoodsExchangeRuleProto::obtain_goods() const {
  return obtain_goods_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto >*
GoodsExchangeRuleProto::mutable_obtain_goods() {
  return &obtain_goods_;
}

// repeated .app.message.GoodsWrapperProto detail_goods = 4;
inline int GoodsExchangeRuleProto::detail_goods_size() const {
  return detail_goods_.size();
}
inline void GoodsExchangeRuleProto::clear_detail_goods() {
  detail_goods_.Clear();
}
inline const ::app::message::GoodsWrapperProto& GoodsExchangeRuleProto::detail_goods(int index) const {
  return detail_goods_.Get(index);
}
inline ::app::message::GoodsWrapperProto* GoodsExchangeRuleProto::mutable_detail_goods(int index) {
  return detail_goods_.Mutable(index);
}
inline ::app::message::GoodsWrapperProto* GoodsExchangeRuleProto::add_detail_goods() {
  return detail_goods_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto >&
GoodsExchangeRuleProto::detail_goods() const {
  return detail_goods_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto >*
GoodsExchangeRuleProto::mutable_detail_goods() {
  return &detail_goods_;
}

// optional int32 limit = 5;
inline bool GoodsExchangeRuleProto::has_limit() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GoodsExchangeRuleProto::set_has_limit() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GoodsExchangeRuleProto::clear_has_limit() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GoodsExchangeRuleProto::clear_limit() {
  limit_ = 0;
  clear_has_limit();
}
inline ::google::protobuf::int32 GoodsExchangeRuleProto::limit() const {
  return limit_;
}
inline void GoodsExchangeRuleProto::set_limit(::google::protobuf::int32 value) {
  set_has_limit();
  limit_ = value;
}

// optional int32 limit_type = 6;
inline bool GoodsExchangeRuleProto::has_limit_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GoodsExchangeRuleProto::set_has_limit_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GoodsExchangeRuleProto::clear_has_limit_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GoodsExchangeRuleProto::clear_limit_type() {
  limit_type_ = 0;
  clear_has_limit_type();
}
inline ::google::protobuf::int32 GoodsExchangeRuleProto::limit_type() const {
  return limit_type_;
}
inline void GoodsExchangeRuleProto::set_limit_type(::google::protobuf::int32 value) {
  set_has_limit_type();
  limit_type_ = value;
}

// optional int32 require_vip_level = 7;
inline bool GoodsExchangeRuleProto::has_require_vip_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GoodsExchangeRuleProto::set_has_require_vip_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GoodsExchangeRuleProto::clear_has_require_vip_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GoodsExchangeRuleProto::clear_require_vip_level() {
  require_vip_level_ = 0;
  clear_has_require_vip_level();
}
inline ::google::protobuf::int32 GoodsExchangeRuleProto::require_vip_level() const {
  return require_vip_level_;
}
inline void GoodsExchangeRuleProto::set_require_vip_level(::google::protobuf::int32 value) {
  set_has_require_vip_level();
  require_vip_level_ = value;
}

// optional int32 money = 8;
inline bool GoodsExchangeRuleProto::has_money() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GoodsExchangeRuleProto::set_has_money() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GoodsExchangeRuleProto::clear_has_money() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GoodsExchangeRuleProto::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline ::google::protobuf::int32 GoodsExchangeRuleProto::money() const {
  return money_;
}
inline void GoodsExchangeRuleProto::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
}

// optional int32 yuanbao = 9;
inline bool GoodsExchangeRuleProto::has_yuanbao() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GoodsExchangeRuleProto::set_has_yuanbao() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GoodsExchangeRuleProto::clear_has_yuanbao() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GoodsExchangeRuleProto::clear_yuanbao() {
  yuanbao_ = 0;
  clear_has_yuanbao();
}
inline ::google::protobuf::int32 GoodsExchangeRuleProto::yuanbao() const {
  return yuanbao_;
}
inline void GoodsExchangeRuleProto::set_yuanbao(::google::protobuf::int32 value) {
  set_has_yuanbao();
  yuanbao_ = value;
}

// optional int32 li_jin = 10;
inline bool GoodsExchangeRuleProto::has_li_jin() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GoodsExchangeRuleProto::set_has_li_jin() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GoodsExchangeRuleProto::clear_has_li_jin() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GoodsExchangeRuleProto::clear_li_jin() {
  li_jin_ = 0;
  clear_has_li_jin();
}
inline ::google::protobuf::int32 GoodsExchangeRuleProto::li_jin() const {
  return li_jin_;
}
inline void GoodsExchangeRuleProto::set_li_jin(::google::protobuf::int32 value) {
  set_has_li_jin();
  li_jin_ = value;
}

// optional int32 real_air = 11;
inline bool GoodsExchangeRuleProto::has_real_air() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GoodsExchangeRuleProto::set_has_real_air() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GoodsExchangeRuleProto::clear_has_real_air() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GoodsExchangeRuleProto::clear_real_air() {
  real_air_ = 0;
  clear_has_real_air();
}
inline ::google::protobuf::int32 GoodsExchangeRuleProto::real_air() const {
  return real_air_;
}
inline void GoodsExchangeRuleProto::set_real_air(::google::protobuf::int32 value) {
  set_has_real_air();
  real_air_ = value;
}

// -------------------------------------------------------------------

// GoodsExchangeRuleConfigProto

// optional int64 start_time = 1;
inline bool GoodsExchangeRuleConfigProto::has_start_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GoodsExchangeRuleConfigProto::set_has_start_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GoodsExchangeRuleConfigProto::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GoodsExchangeRuleConfigProto::clear_start_time() {
  start_time_ = GOOGLE_LONGLONG(0);
  clear_has_start_time();
}
inline ::google::protobuf::int64 GoodsExchangeRuleConfigProto::start_time() const {
  return start_time_;
}
inline void GoodsExchangeRuleConfigProto::set_start_time(::google::protobuf::int64 value) {
  set_has_start_time();
  start_time_ = value;
}

// optional int64 end_time = 2;
inline bool GoodsExchangeRuleConfigProto::has_end_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GoodsExchangeRuleConfigProto::set_has_end_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GoodsExchangeRuleConfigProto::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GoodsExchangeRuleConfigProto::clear_end_time() {
  end_time_ = GOOGLE_LONGLONG(0);
  clear_has_end_time();
}
inline ::google::protobuf::int64 GoodsExchangeRuleConfigProto::end_time() const {
  return end_time_;
}
inline void GoodsExchangeRuleConfigProto::set_end_time(::google::protobuf::int64 value) {
  set_has_end_time();
  end_time_ = value;
}

// optional int32 type = 3;
inline bool GoodsExchangeRuleConfigProto::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GoodsExchangeRuleConfigProto::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GoodsExchangeRuleConfigProto::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GoodsExchangeRuleConfigProto::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 GoodsExchangeRuleConfigProto::type() const {
  return type_;
}
inline void GoodsExchangeRuleConfigProto::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// optional int32 goods_type = 4;
inline bool GoodsExchangeRuleConfigProto::has_goods_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GoodsExchangeRuleConfigProto::set_has_goods_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GoodsExchangeRuleConfigProto::clear_has_goods_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GoodsExchangeRuleConfigProto::clear_goods_type() {
  goods_type_ = 0;
  clear_has_goods_type();
}
inline ::google::protobuf::int32 GoodsExchangeRuleConfigProto::goods_type() const {
  return goods_type_;
}
inline void GoodsExchangeRuleConfigProto::set_goods_type(::google::protobuf::int32 value) {
  set_has_goods_type();
  goods_type_ = value;
}

// repeated .app.message.GoodsExchangeRuleProto rule_list = 5;
inline int GoodsExchangeRuleConfigProto::rule_list_size() const {
  return rule_list_.size();
}
inline void GoodsExchangeRuleConfigProto::clear_rule_list() {
  rule_list_.Clear();
}
inline const ::app::message::GoodsExchangeRuleProto& GoodsExchangeRuleConfigProto::rule_list(int index) const {
  return rule_list_.Get(index);
}
inline ::app::message::GoodsExchangeRuleProto* GoodsExchangeRuleConfigProto::mutable_rule_list(int index) {
  return rule_list_.Mutable(index);
}
inline ::app::message::GoodsExchangeRuleProto* GoodsExchangeRuleConfigProto::add_rule_list() {
  return rule_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::GoodsExchangeRuleProto >&
GoodsExchangeRuleConfigProto::rule_list() const {
  return rule_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::GoodsExchangeRuleProto >*
GoodsExchangeRuleConfigProto::mutable_rule_list() {
  return &rule_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace app

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_goods_5fexchange_5frule_2eproto__INCLUDED
