// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: prize.proto

#ifndef PROTOBUF_prize_2eproto__INCLUDED
#define PROTOBUF_prize_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "goods.pb.h"
// @@protoc_insertion_point(includes)

namespace app {
namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_prize_2eproto();
void protobuf_AssignDesc_prize_2eproto();
void protobuf_ShutdownFile_prize_2eproto();

class PrizeProto;

// ===================================================================

class PrizeProto : public ::google::protobuf::Message {
 public:
  PrizeProto();
  virtual ~PrizeProto();

  PrizeProto(const PrizeProto& from);

  inline PrizeProto& operator=(const PrizeProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PrizeProto& default_instance();

  void Swap(PrizeProto* other);

  // implements Message ----------------------------------------------

  PrizeProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrizeProto& from);
  void MergeFrom(const PrizeProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 exp = 1;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 1;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // optional int32 money = 2;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 2;
  inline ::google::protobuf::int32 money() const;
  inline void set_money(::google::protobuf::int32 value);

  // optional int32 real_air = 3;
  inline bool has_real_air() const;
  inline void clear_real_air();
  static const int kRealAirFieldNumber = 3;
  inline ::google::protobuf::int32 real_air() const;
  inline void set_real_air(::google::protobuf::int32 value);

  // optional int32 jianghu_exp = 4 [deprecated = true];
  inline bool has_jianghu_exp() const PROTOBUF_DEPRECATED;
  inline void clear_jianghu_exp() PROTOBUF_DEPRECATED;
  static const int kJianghuExpFieldNumber = 4;
  inline ::google::protobuf::int32 jianghu_exp() const PROTOBUF_DEPRECATED;
  inline void set_jianghu_exp(::google::protobuf::int32 value) PROTOBUF_DEPRECATED;

  // optional int32 lijin = 5;
  inline bool has_lijin() const;
  inline void clear_lijin();
  static const int kLijinFieldNumber = 5;
  inline ::google::protobuf::int32 lijin() const;
  inline void set_lijin(::google::protobuf::int32 value);

  // optional int32 guild_lilian = 6;
  inline bool has_guild_lilian() const;
  inline void clear_guild_lilian();
  static const int kGuildLilianFieldNumber = 6;
  inline ::google::protobuf::int32 guild_lilian() const;
  inline void set_guild_lilian(::google::protobuf::int32 value);

  // optional int32 honor = 7;
  inline bool has_honor() const;
  inline void clear_honor();
  static const int kHonorFieldNumber = 7;
  inline ::google::protobuf::int32 honor() const;
  inline void set_honor(::google::protobuf::int32 value);

  // optional int32 sou_shen_point = 8;
  inline bool has_sou_shen_point() const;
  inline void clear_sou_shen_point();
  static const int kSouShenPointFieldNumber = 8;
  inline ::google::protobuf::int32 sou_shen_point() const;
  inline void set_sou_shen_point(::google::protobuf::int32 value);

  // repeated .app.message.GoodsWrapperProto goods_wrapper = 11;
  inline int goods_wrapper_size() const;
  inline void clear_goods_wrapper();
  static const int kGoodsWrapperFieldNumber = 11;
  inline const ::app::message::GoodsWrapperProto& goods_wrapper(int index) const;
  inline ::app::message::GoodsWrapperProto* mutable_goods_wrapper(int index);
  inline ::app::message::GoodsWrapperProto* add_goods_wrapper();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto >&
      goods_wrapper() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto >*
      mutable_goods_wrapper();

  // optional int32 task_point = 12;
  inline bool has_task_point() const;
  inline void clear_task_point();
  static const int kTaskPointFieldNumber = 12;
  inline ::google::protobuf::int32 task_point() const;
  inline void set_task_point(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:app.message.PrizeProto)
 private:
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_real_air();
  inline void clear_has_real_air();
  inline void set_has_jianghu_exp();
  inline void clear_has_jianghu_exp();
  inline void set_has_lijin();
  inline void clear_has_lijin();
  inline void set_has_guild_lilian();
  inline void clear_has_guild_lilian();
  inline void set_has_honor();
  inline void clear_has_honor();
  inline void set_has_sou_shen_point();
  inline void clear_has_sou_shen_point();
  inline void set_has_task_point();
  inline void clear_has_task_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 money_;
  ::google::protobuf::int32 real_air_;
  ::google::protobuf::int32 jianghu_exp_;
  ::google::protobuf::int32 lijin_;
  ::google::protobuf::int32 guild_lilian_;
  ::google::protobuf::int32 honor_;
  ::google::protobuf::int32 sou_shen_point_;
  ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto > goods_wrapper_;
  ::google::protobuf::int32 task_point_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_prize_2eproto();
  friend void protobuf_AssignDesc_prize_2eproto();
  friend void protobuf_ShutdownFile_prize_2eproto();

  void InitAsDefaultInstance();
  static PrizeProto* default_instance_;
};
// ===================================================================


// ===================================================================

// PrizeProto

// optional int32 exp = 1;
inline bool PrizeProto::has_exp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PrizeProto::set_has_exp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PrizeProto::clear_has_exp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PrizeProto::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 PrizeProto::exp() const {
  return exp_;
}
inline void PrizeProto::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// optional int32 money = 2;
inline bool PrizeProto::has_money() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PrizeProto::set_has_money() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PrizeProto::clear_has_money() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PrizeProto::clear_money() {
  money_ = 0;
  clear_has_money();
}
inline ::google::protobuf::int32 PrizeProto::money() const {
  return money_;
}
inline void PrizeProto::set_money(::google::protobuf::int32 value) {
  set_has_money();
  money_ = value;
}

// optional int32 real_air = 3;
inline bool PrizeProto::has_real_air() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PrizeProto::set_has_real_air() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PrizeProto::clear_has_real_air() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PrizeProto::clear_real_air() {
  real_air_ = 0;
  clear_has_real_air();
}
inline ::google::protobuf::int32 PrizeProto::real_air() const {
  return real_air_;
}
inline void PrizeProto::set_real_air(::google::protobuf::int32 value) {
  set_has_real_air();
  real_air_ = value;
}

// optional int32 jianghu_exp = 4 [deprecated = true];
inline bool PrizeProto::has_jianghu_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PrizeProto::set_has_jianghu_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PrizeProto::clear_has_jianghu_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PrizeProto::clear_jianghu_exp() {
  jianghu_exp_ = 0;
  clear_has_jianghu_exp();
}
inline ::google::protobuf::int32 PrizeProto::jianghu_exp() const {
  return jianghu_exp_;
}
inline void PrizeProto::set_jianghu_exp(::google::protobuf::int32 value) {
  set_has_jianghu_exp();
  jianghu_exp_ = value;
}

// optional int32 lijin = 5;
inline bool PrizeProto::has_lijin() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PrizeProto::set_has_lijin() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PrizeProto::clear_has_lijin() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PrizeProto::clear_lijin() {
  lijin_ = 0;
  clear_has_lijin();
}
inline ::google::protobuf::int32 PrizeProto::lijin() const {
  return lijin_;
}
inline void PrizeProto::set_lijin(::google::protobuf::int32 value) {
  set_has_lijin();
  lijin_ = value;
}

// optional int32 guild_lilian = 6;
inline bool PrizeProto::has_guild_lilian() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PrizeProto::set_has_guild_lilian() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PrizeProto::clear_has_guild_lilian() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PrizeProto::clear_guild_lilian() {
  guild_lilian_ = 0;
  clear_has_guild_lilian();
}
inline ::google::protobuf::int32 PrizeProto::guild_lilian() const {
  return guild_lilian_;
}
inline void PrizeProto::set_guild_lilian(::google::protobuf::int32 value) {
  set_has_guild_lilian();
  guild_lilian_ = value;
}

// optional int32 honor = 7;
inline bool PrizeProto::has_honor() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PrizeProto::set_has_honor() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PrizeProto::clear_has_honor() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PrizeProto::clear_honor() {
  honor_ = 0;
  clear_has_honor();
}
inline ::google::protobuf::int32 PrizeProto::honor() const {
  return honor_;
}
inline void PrizeProto::set_honor(::google::protobuf::int32 value) {
  set_has_honor();
  honor_ = value;
}

// optional int32 sou_shen_point = 8;
inline bool PrizeProto::has_sou_shen_point() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PrizeProto::set_has_sou_shen_point() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PrizeProto::clear_has_sou_shen_point() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PrizeProto::clear_sou_shen_point() {
  sou_shen_point_ = 0;
  clear_has_sou_shen_point();
}
inline ::google::protobuf::int32 PrizeProto::sou_shen_point() const {
  return sou_shen_point_;
}
inline void PrizeProto::set_sou_shen_point(::google::protobuf::int32 value) {
  set_has_sou_shen_point();
  sou_shen_point_ = value;
}

// repeated .app.message.GoodsWrapperProto goods_wrapper = 11;
inline int PrizeProto::goods_wrapper_size() const {
  return goods_wrapper_.size();
}
inline void PrizeProto::clear_goods_wrapper() {
  goods_wrapper_.Clear();
}
inline const ::app::message::GoodsWrapperProto& PrizeProto::goods_wrapper(int index) const {
  return goods_wrapper_.Get(index);
}
inline ::app::message::GoodsWrapperProto* PrizeProto::mutable_goods_wrapper(int index) {
  return goods_wrapper_.Mutable(index);
}
inline ::app::message::GoodsWrapperProto* PrizeProto::add_goods_wrapper() {
  return goods_wrapper_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto >&
PrizeProto::goods_wrapper() const {
  return goods_wrapper_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto >*
PrizeProto::mutable_goods_wrapper() {
  return &goods_wrapper_;
}

// optional int32 task_point = 12;
inline bool PrizeProto::has_task_point() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PrizeProto::set_has_task_point() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PrizeProto::clear_has_task_point() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PrizeProto::clear_task_point() {
  task_point_ = 0;
  clear_has_task_point();
}
inline ::google::protobuf::int32 PrizeProto::task_point() const {
  return task_point_;
}
inline void PrizeProto::set_task_point(::google::protobuf::int32 value) {
  set_has_task_point();
  task_point_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace app

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_prize_2eproto__INCLUDED
