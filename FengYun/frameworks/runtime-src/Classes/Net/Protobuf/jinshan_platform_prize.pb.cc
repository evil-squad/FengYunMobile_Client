// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: jinshan_platform_prize.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "jinshan_platform_prize.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace app {
namespace message {

namespace {

const ::google::protobuf::Descriptor* JinshanBoxLevelPrizeProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JinshanBoxLevelPrizeProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* JinshanBoxLevelPrizeConfigProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JinshanBoxLevelPrizeConfigProto_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_jinshan_5fplatform_5fprize_2eproto() {
  protobuf_AddDesc_jinshan_5fplatform_5fprize_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "jinshan_platform_prize.proto");
  GOOGLE_CHECK(file != NULL);
  JinshanBoxLevelPrizeProto_descriptor_ = file->message_type(0);
  static const int JinshanBoxLevelPrizeProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JinshanBoxLevelPrizeProto, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JinshanBoxLevelPrizeProto, desc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JinshanBoxLevelPrizeProto, prize_),
  };
  JinshanBoxLevelPrizeProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      JinshanBoxLevelPrizeProto_descriptor_,
      JinshanBoxLevelPrizeProto::default_instance_,
      JinshanBoxLevelPrizeProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JinshanBoxLevelPrizeProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JinshanBoxLevelPrizeProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(JinshanBoxLevelPrizeProto));
  JinshanBoxLevelPrizeConfigProto_descriptor_ = file->message_type(1);
  static const int JinshanBoxLevelPrizeConfigProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JinshanBoxLevelPrizeConfigProto, prizelist_),
  };
  JinshanBoxLevelPrizeConfigProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      JinshanBoxLevelPrizeConfigProto_descriptor_,
      JinshanBoxLevelPrizeConfigProto::default_instance_,
      JinshanBoxLevelPrizeConfigProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JinshanBoxLevelPrizeConfigProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JinshanBoxLevelPrizeConfigProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(JinshanBoxLevelPrizeConfigProto));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_jinshan_5fplatform_5fprize_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    JinshanBoxLevelPrizeProto_descriptor_, &JinshanBoxLevelPrizeProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    JinshanBoxLevelPrizeConfigProto_descriptor_, &JinshanBoxLevelPrizeConfigProto::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_jinshan_5fplatform_5fprize_2eproto() {
  delete JinshanBoxLevelPrizeProto::default_instance_;
  delete JinshanBoxLevelPrizeProto_reflection_;
  delete JinshanBoxLevelPrizeConfigProto::default_instance_;
  delete JinshanBoxLevelPrizeConfigProto_reflection_;
}

void protobuf_AddDesc_jinshan_5fplatform_5fprize_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::app::message::protobuf_AddDesc_goods_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\034jinshan_platform_prize.proto\022\013app.mess"
    "age\032\013goods.proto\"g\n\031JinshanBoxLevelPrize"
    "Proto\022\r\n\005level\030\001 \001(\005\022\014\n\004desc\030\002 \001(\014\022-\n\005pr"
    "ize\030\003 \003(\0132\036.app.message.GoodsWrapperProt"
    "o\"\\\n\037JinshanBoxLevelPrizeConfigProto\0229\n\t"
    "prizelist\030\001 \003(\0132&.app.message.JinshanBox"
    "LevelPrizeProtoB%\n\014app.protobufB\023Jinshan"
    "PrizeContentH\001", 294);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "jinshan_platform_prize.proto", &protobuf_RegisterTypes);
  JinshanBoxLevelPrizeProto::default_instance_ = new JinshanBoxLevelPrizeProto();
  JinshanBoxLevelPrizeConfigProto::default_instance_ = new JinshanBoxLevelPrizeConfigProto();
  JinshanBoxLevelPrizeProto::default_instance_->InitAsDefaultInstance();
  JinshanBoxLevelPrizeConfigProto::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_jinshan_5fplatform_5fprize_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_jinshan_5fplatform_5fprize_2eproto {
  StaticDescriptorInitializer_jinshan_5fplatform_5fprize_2eproto() {
    protobuf_AddDesc_jinshan_5fplatform_5fprize_2eproto();
  }
} static_descriptor_initializer_jinshan_5fplatform_5fprize_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int JinshanBoxLevelPrizeProto::kLevelFieldNumber;
const int JinshanBoxLevelPrizeProto::kDescFieldNumber;
const int JinshanBoxLevelPrizeProto::kPrizeFieldNumber;
#endif  // !_MSC_VER

JinshanBoxLevelPrizeProto::JinshanBoxLevelPrizeProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void JinshanBoxLevelPrizeProto::InitAsDefaultInstance() {
}

JinshanBoxLevelPrizeProto::JinshanBoxLevelPrizeProto(const JinshanBoxLevelPrizeProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void JinshanBoxLevelPrizeProto::SharedCtor() {
  _cached_size_ = 0;
  level_ = 0;
  desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

JinshanBoxLevelPrizeProto::~JinshanBoxLevelPrizeProto() {
  SharedDtor();
}

void JinshanBoxLevelPrizeProto::SharedDtor() {
  if (desc_ != &::google::protobuf::internal::kEmptyString) {
    delete desc_;
  }
  if (this != default_instance_) {
  }
}

void JinshanBoxLevelPrizeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JinshanBoxLevelPrizeProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JinshanBoxLevelPrizeProto_descriptor_;
}

const JinshanBoxLevelPrizeProto& JinshanBoxLevelPrizeProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_jinshan_5fplatform_5fprize_2eproto();
  return *default_instance_;
}

JinshanBoxLevelPrizeProto* JinshanBoxLevelPrizeProto::default_instance_ = NULL;

JinshanBoxLevelPrizeProto* JinshanBoxLevelPrizeProto::New() const {
  return new JinshanBoxLevelPrizeProto;
}

void JinshanBoxLevelPrizeProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    level_ = 0;
    if (has_desc()) {
      if (desc_ != &::google::protobuf::internal::kEmptyString) {
        desc_->clear();
      }
    }
  }
  prize_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool JinshanBoxLevelPrizeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 level = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_desc;
        break;
      }

      // optional bytes desc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_desc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_desc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_prize;
        break;
      }

      // repeated .app.message.GoodsWrapperProto prize = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_prize;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void JinshanBoxLevelPrizeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 level = 1;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }

  // optional bytes desc = 2;
  if (has_desc()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->desc(), output);
  }

  // repeated .app.message.GoodsWrapperProto prize = 3;
  for (int i = 0; i < this->prize_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->prize(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* JinshanBoxLevelPrizeProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 level = 1;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }

  // optional bytes desc = 2;
  if (has_desc()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->desc(), target);
  }

  // repeated .app.message.GoodsWrapperProto prize = 3;
  for (int i = 0; i < this->prize_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->prize(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int JinshanBoxLevelPrizeProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 level = 1;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // optional bytes desc = 2;
    if (has_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->desc());
    }

  }
  // repeated .app.message.GoodsWrapperProto prize = 3;
  total_size += 1 * this->prize_size();
  for (int i = 0; i < this->prize_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->prize(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JinshanBoxLevelPrizeProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const JinshanBoxLevelPrizeProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const JinshanBoxLevelPrizeProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void JinshanBoxLevelPrizeProto::MergeFrom(const JinshanBoxLevelPrizeProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  prize_.MergeFrom(from.prize_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_desc()) {
      set_desc(from.desc());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void JinshanBoxLevelPrizeProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JinshanBoxLevelPrizeProto::CopyFrom(const JinshanBoxLevelPrizeProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JinshanBoxLevelPrizeProto::IsInitialized() const {

  return true;
}

void JinshanBoxLevelPrizeProto::Swap(JinshanBoxLevelPrizeProto* other) {
  if (other != this) {
    std::swap(level_, other->level_);
    std::swap(desc_, other->desc_);
    prize_.Swap(&other->prize_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata JinshanBoxLevelPrizeProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JinshanBoxLevelPrizeProto_descriptor_;
  metadata.reflection = JinshanBoxLevelPrizeProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int JinshanBoxLevelPrizeConfigProto::kPrizelistFieldNumber;
#endif  // !_MSC_VER

JinshanBoxLevelPrizeConfigProto::JinshanBoxLevelPrizeConfigProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void JinshanBoxLevelPrizeConfigProto::InitAsDefaultInstance() {
}

JinshanBoxLevelPrizeConfigProto::JinshanBoxLevelPrizeConfigProto(const JinshanBoxLevelPrizeConfigProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void JinshanBoxLevelPrizeConfigProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

JinshanBoxLevelPrizeConfigProto::~JinshanBoxLevelPrizeConfigProto() {
  SharedDtor();
}

void JinshanBoxLevelPrizeConfigProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void JinshanBoxLevelPrizeConfigProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JinshanBoxLevelPrizeConfigProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JinshanBoxLevelPrizeConfigProto_descriptor_;
}

const JinshanBoxLevelPrizeConfigProto& JinshanBoxLevelPrizeConfigProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_jinshan_5fplatform_5fprize_2eproto();
  return *default_instance_;
}

JinshanBoxLevelPrizeConfigProto* JinshanBoxLevelPrizeConfigProto::default_instance_ = NULL;

JinshanBoxLevelPrizeConfigProto* JinshanBoxLevelPrizeConfigProto::New() const {
  return new JinshanBoxLevelPrizeConfigProto;
}

void JinshanBoxLevelPrizeConfigProto::Clear() {
  prizelist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool JinshanBoxLevelPrizeConfigProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .app.message.JinshanBoxLevelPrizeProto prizelist = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prizelist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_prizelist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_prizelist;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void JinshanBoxLevelPrizeConfigProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .app.message.JinshanBoxLevelPrizeProto prizelist = 1;
  for (int i = 0; i < this->prizelist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->prizelist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* JinshanBoxLevelPrizeConfigProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .app.message.JinshanBoxLevelPrizeProto prizelist = 1;
  for (int i = 0; i < this->prizelist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->prizelist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int JinshanBoxLevelPrizeConfigProto::ByteSize() const {
  int total_size = 0;

  // repeated .app.message.JinshanBoxLevelPrizeProto prizelist = 1;
  total_size += 1 * this->prizelist_size();
  for (int i = 0; i < this->prizelist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->prizelist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JinshanBoxLevelPrizeConfigProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const JinshanBoxLevelPrizeConfigProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const JinshanBoxLevelPrizeConfigProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void JinshanBoxLevelPrizeConfigProto::MergeFrom(const JinshanBoxLevelPrizeConfigProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  prizelist_.MergeFrom(from.prizelist_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void JinshanBoxLevelPrizeConfigProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JinshanBoxLevelPrizeConfigProto::CopyFrom(const JinshanBoxLevelPrizeConfigProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JinshanBoxLevelPrizeConfigProto::IsInitialized() const {

  return true;
}

void JinshanBoxLevelPrizeConfigProto::Swap(JinshanBoxLevelPrizeConfigProto* other) {
  if (other != this) {
    prizelist_.Swap(&other->prizelist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata JinshanBoxLevelPrizeConfigProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JinshanBoxLevelPrizeConfigProto_descriptor_;
  metadata.reflection = JinshanBoxLevelPrizeConfigProto_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace app

// @@protoc_insertion_point(global_scope)
