// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: platform_summer_prize.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "platform_summer_prize.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace app {
namespace message {

namespace {

const ::google::protobuf::Descriptor* PlatformSummerPrizeProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PlatformSummerPrizeProto_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_platform_5fsummer_5fprize_2eproto() {
  protobuf_AddDesc_platform_5fsummer_5fprize_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "platform_summer_prize.proto");
  GOOGLE_CHECK(file != NULL);
  PlatformSummerPrizeProto_descriptor_ = file->message_type(0);
  static const int PlatformSummerPrizeProto_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformSummerPrizeProto, icon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformSummerPrizeProto, desc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformSummerPrizeProto, prize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformSummerPrizeProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformSummerPrizeProto, end_time_),
  };
  PlatformSummerPrizeProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PlatformSummerPrizeProto_descriptor_,
      PlatformSummerPrizeProto::default_instance_,
      PlatformSummerPrizeProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformSummerPrizeProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlatformSummerPrizeProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PlatformSummerPrizeProto));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_platform_5fsummer_5fprize_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PlatformSummerPrizeProto_descriptor_, &PlatformSummerPrizeProto::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_platform_5fsummer_5fprize_2eproto() {
  delete PlatformSummerPrizeProto::default_instance_;
  delete PlatformSummerPrizeProto_reflection_;
}

void protobuf_AddDesc_platform_5fsummer_5fprize_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::app::message::protobuf_AddDesc_goods_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\033platform_summer_prize.proto\022\013app.messa"
    "ge\032\013goods.proto\"\213\001\n\030PlatformSummerPrizeP"
    "roto\022\014\n\004icon\030\001 \001(\t\022\014\n\004desc\030\002 \001(\014\022-\n\005priz"
    "e\030\003 \003(\0132\036.app.message.GoodsWrapperProto\022"
    "\022\n\nstart_time\030\004 \001(\003\022\020\n\010end_time\030\005 \001(\003B,\n"
    "\014app.protobufB\032PlatformSummerPrizeConten"
    "tH\001", 243);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "platform_summer_prize.proto", &protobuf_RegisterTypes);
  PlatformSummerPrizeProto::default_instance_ = new PlatformSummerPrizeProto();
  PlatformSummerPrizeProto::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_platform_5fsummer_5fprize_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_platform_5fsummer_5fprize_2eproto {
  StaticDescriptorInitializer_platform_5fsummer_5fprize_2eproto() {
    protobuf_AddDesc_platform_5fsummer_5fprize_2eproto();
  }
} static_descriptor_initializer_platform_5fsummer_5fprize_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int PlatformSummerPrizeProto::kIconFieldNumber;
const int PlatformSummerPrizeProto::kDescFieldNumber;
const int PlatformSummerPrizeProto::kPrizeFieldNumber;
const int PlatformSummerPrizeProto::kStartTimeFieldNumber;
const int PlatformSummerPrizeProto::kEndTimeFieldNumber;
#endif  // !_MSC_VER

PlatformSummerPrizeProto::PlatformSummerPrizeProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PlatformSummerPrizeProto::InitAsDefaultInstance() {
}

PlatformSummerPrizeProto::PlatformSummerPrizeProto(const PlatformSummerPrizeProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PlatformSummerPrizeProto::SharedCtor() {
  _cached_size_ = 0;
  icon_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PlatformSummerPrizeProto::~PlatformSummerPrizeProto() {
  SharedDtor();
}

void PlatformSummerPrizeProto::SharedDtor() {
  if (icon_ != &::google::protobuf::internal::kEmptyString) {
    delete icon_;
  }
  if (desc_ != &::google::protobuf::internal::kEmptyString) {
    delete desc_;
  }
  if (this != default_instance_) {
  }
}

void PlatformSummerPrizeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlatformSummerPrizeProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlatformSummerPrizeProto_descriptor_;
}

const PlatformSummerPrizeProto& PlatformSummerPrizeProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_platform_5fsummer_5fprize_2eproto();
  return *default_instance_;
}

PlatformSummerPrizeProto* PlatformSummerPrizeProto::default_instance_ = NULL;

PlatformSummerPrizeProto* PlatformSummerPrizeProto::New() const {
  return new PlatformSummerPrizeProto;
}

void PlatformSummerPrizeProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_icon()) {
      if (icon_ != &::google::protobuf::internal::kEmptyString) {
        icon_->clear();
      }
    }
    if (has_desc()) {
      if (desc_ != &::google::protobuf::internal::kEmptyString) {
        desc_->clear();
      }
    }
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
  }
  prize_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PlatformSummerPrizeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string icon = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_icon()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->icon().data(), this->icon().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_desc;
        break;
      }

      // optional bytes desc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_desc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_desc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_prize;
        break;
      }

      // repeated .app.message.GoodsWrapperProto prize = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_prize;
        if (input->ExpectTag(32)) goto parse_start_time;
        break;
      }

      // optional int64 start_time = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_start_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PlatformSummerPrizeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string icon = 1;
  if (has_icon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->icon().data(), this->icon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->icon(), output);
  }

  // optional bytes desc = 2;
  if (has_desc()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->desc(), output);
  }

  // repeated .app.message.GoodsWrapperProto prize = 3;
  for (int i = 0; i < this->prize_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->prize(i), output);
  }

  // optional int64 start_time = 4;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->start_time(), output);
  }

  // optional int64 end_time = 5;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->end_time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PlatformSummerPrizeProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string icon = 1;
  if (has_icon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->icon().data(), this->icon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->icon(), target);
  }

  // optional bytes desc = 2;
  if (has_desc()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->desc(), target);
  }

  // repeated .app.message.GoodsWrapperProto prize = 3;
  for (int i = 0; i < this->prize_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->prize(i), target);
  }

  // optional int64 start_time = 4;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->start_time(), target);
  }

  // optional int64 end_time = 5;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->end_time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PlatformSummerPrizeProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string icon = 1;
    if (has_icon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->icon());
    }

    // optional bytes desc = 2;
    if (has_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->desc());
    }

    // optional int64 start_time = 4;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 5;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

  }
  // repeated .app.message.GoodsWrapperProto prize = 3;
  total_size += 1 * this->prize_size();
  for (int i = 0; i < this->prize_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->prize(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlatformSummerPrizeProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PlatformSummerPrizeProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PlatformSummerPrizeProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PlatformSummerPrizeProto::MergeFrom(const PlatformSummerPrizeProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  prize_.MergeFrom(from.prize_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_icon()) {
      set_icon(from.icon());
    }
    if (from.has_desc()) {
      set_desc(from.desc());
    }
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PlatformSummerPrizeProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlatformSummerPrizeProto::CopyFrom(const PlatformSummerPrizeProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlatformSummerPrizeProto::IsInitialized() const {

  return true;
}

void PlatformSummerPrizeProto::Swap(PlatformSummerPrizeProto* other) {
  if (other != this) {
    std::swap(icon_, other->icon_);
    std::swap(desc_, other->desc_);
    prize_.Swap(&other->prize_);
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PlatformSummerPrizeProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PlatformSummerPrizeProto_descriptor_;
  metadata.reflection = PlatformSummerPrizeProto_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace app

// @@protoc_insertion_point(global_scope)
