// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: baidu_vip_prize.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "baidu_vip_prize.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace app {
namespace message {

namespace {

const ::google::protobuf::Descriptor* BaiduVipPrizeProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BaiduVipPrizeProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* BaiduVipPrizeConfigProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BaiduVipPrizeConfigProto_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_baidu_5fvip_5fprize_2eproto() {
  protobuf_AddDesc_baidu_5fvip_5fprize_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "baidu_vip_prize.proto");
  GOOGLE_CHECK(file != NULL);
  BaiduVipPrizeProto_descriptor_ = file->message_type(0);
  static const int BaiduVipPrizeProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaiduVipPrizeProto, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaiduVipPrizeProto, sub_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaiduVipPrizeProto, prize_),
  };
  BaiduVipPrizeProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BaiduVipPrizeProto_descriptor_,
      BaiduVipPrizeProto::default_instance_,
      BaiduVipPrizeProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaiduVipPrizeProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaiduVipPrizeProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BaiduVipPrizeProto));
  BaiduVipPrizeConfigProto_descriptor_ = file->message_type(1);
  static const int BaiduVipPrizeConfigProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaiduVipPrizeConfigProto, prizelist_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaiduVipPrizeConfigProto, nick_name_id_list_),
  };
  BaiduVipPrizeConfigProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BaiduVipPrizeConfigProto_descriptor_,
      BaiduVipPrizeConfigProto::default_instance_,
      BaiduVipPrizeConfigProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaiduVipPrizeConfigProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaiduVipPrizeConfigProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BaiduVipPrizeConfigProto));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_baidu_5fvip_5fprize_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BaiduVipPrizeProto_descriptor_, &BaiduVipPrizeProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BaiduVipPrizeConfigProto_descriptor_, &BaiduVipPrizeConfigProto::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_baidu_5fvip_5fprize_2eproto() {
  delete BaiduVipPrizeProto::default_instance_;
  delete BaiduVipPrizeProto_reflection_;
  delete BaiduVipPrizeConfigProto::default_instance_;
  delete BaiduVipPrizeConfigProto_reflection_;
}

void protobuf_AddDesc_baidu_5fvip_5fprize_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::app::message::protobuf_AddDesc_goods_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025baidu_vip_prize.proto\022\013app.message\032\013go"
    "ods.proto\"c\n\022BaiduVipPrizeProto\022\014\n\004type\030"
    "\001 \001(\005\022\020\n\010sub_type\030\002 \001(\005\022-\n\005prize\030\003 \003(\0132\036"
    ".app.message.GoodsWrapperProto\"i\n\030BaiduV"
    "ipPrizeConfigProto\0222\n\tprizelist\030\001 \003(\0132\037."
    "app.message.BaiduVipPrizeProto\022\031\n\021nick_n"
    "ame_id_list\030\002 \003(\005B&\n\014app.protobufB\024Baidu"
    "VipPrizeContentH\001", 297);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "baidu_vip_prize.proto", &protobuf_RegisterTypes);
  BaiduVipPrizeProto::default_instance_ = new BaiduVipPrizeProto();
  BaiduVipPrizeConfigProto::default_instance_ = new BaiduVipPrizeConfigProto();
  BaiduVipPrizeProto::default_instance_->InitAsDefaultInstance();
  BaiduVipPrizeConfigProto::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_baidu_5fvip_5fprize_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_baidu_5fvip_5fprize_2eproto {
  StaticDescriptorInitializer_baidu_5fvip_5fprize_2eproto() {
    protobuf_AddDesc_baidu_5fvip_5fprize_2eproto();
  }
} static_descriptor_initializer_baidu_5fvip_5fprize_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int BaiduVipPrizeProto::kTypeFieldNumber;
const int BaiduVipPrizeProto::kSubTypeFieldNumber;
const int BaiduVipPrizeProto::kPrizeFieldNumber;
#endif  // !_MSC_VER

BaiduVipPrizeProto::BaiduVipPrizeProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BaiduVipPrizeProto::InitAsDefaultInstance() {
}

BaiduVipPrizeProto::BaiduVipPrizeProto(const BaiduVipPrizeProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BaiduVipPrizeProto::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  sub_type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BaiduVipPrizeProto::~BaiduVipPrizeProto() {
  SharedDtor();
}

void BaiduVipPrizeProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BaiduVipPrizeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaiduVipPrizeProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BaiduVipPrizeProto_descriptor_;
}

const BaiduVipPrizeProto& BaiduVipPrizeProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_baidu_5fvip_5fprize_2eproto();
  return *default_instance_;
}

BaiduVipPrizeProto* BaiduVipPrizeProto::default_instance_ = NULL;

BaiduVipPrizeProto* BaiduVipPrizeProto::New() const {
  return new BaiduVipPrizeProto;
}

void BaiduVipPrizeProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    sub_type_ = 0;
  }
  prize_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BaiduVipPrizeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_sub_type;
        break;
      }

      // optional int32 sub_type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sub_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sub_type_)));
          set_has_sub_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_prize;
        break;
      }

      // repeated .app.message.GoodsWrapperProto prize = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_prize()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_prize;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BaiduVipPrizeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional int32 sub_type = 2;
  if (has_sub_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sub_type(), output);
  }

  // repeated .app.message.GoodsWrapperProto prize = 3;
  for (int i = 0; i < this->prize_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->prize(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BaiduVipPrizeProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional int32 sub_type = 2;
  if (has_sub_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sub_type(), target);
  }

  // repeated .app.message.GoodsWrapperProto prize = 3;
  for (int i = 0; i < this->prize_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->prize(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BaiduVipPrizeProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional int32 sub_type = 2;
    if (has_sub_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sub_type());
    }

  }
  // repeated .app.message.GoodsWrapperProto prize = 3;
  total_size += 1 * this->prize_size();
  for (int i = 0; i < this->prize_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->prize(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaiduVipPrizeProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BaiduVipPrizeProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BaiduVipPrizeProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BaiduVipPrizeProto::MergeFrom(const BaiduVipPrizeProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  prize_.MergeFrom(from.prize_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_sub_type()) {
      set_sub_type(from.sub_type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BaiduVipPrizeProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaiduVipPrizeProto::CopyFrom(const BaiduVipPrizeProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaiduVipPrizeProto::IsInitialized() const {

  return true;
}

void BaiduVipPrizeProto::Swap(BaiduVipPrizeProto* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(sub_type_, other->sub_type_);
    prize_.Swap(&other->prize_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BaiduVipPrizeProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BaiduVipPrizeProto_descriptor_;
  metadata.reflection = BaiduVipPrizeProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BaiduVipPrizeConfigProto::kPrizelistFieldNumber;
const int BaiduVipPrizeConfigProto::kNickNameIdListFieldNumber;
#endif  // !_MSC_VER

BaiduVipPrizeConfigProto::BaiduVipPrizeConfigProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BaiduVipPrizeConfigProto::InitAsDefaultInstance() {
}

BaiduVipPrizeConfigProto::BaiduVipPrizeConfigProto(const BaiduVipPrizeConfigProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BaiduVipPrizeConfigProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BaiduVipPrizeConfigProto::~BaiduVipPrizeConfigProto() {
  SharedDtor();
}

void BaiduVipPrizeConfigProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BaiduVipPrizeConfigProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaiduVipPrizeConfigProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BaiduVipPrizeConfigProto_descriptor_;
}

const BaiduVipPrizeConfigProto& BaiduVipPrizeConfigProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_baidu_5fvip_5fprize_2eproto();
  return *default_instance_;
}

BaiduVipPrizeConfigProto* BaiduVipPrizeConfigProto::default_instance_ = NULL;

BaiduVipPrizeConfigProto* BaiduVipPrizeConfigProto::New() const {
  return new BaiduVipPrizeConfigProto;
}

void BaiduVipPrizeConfigProto::Clear() {
  prizelist_.Clear();
  nick_name_id_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BaiduVipPrizeConfigProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .app.message.BaiduVipPrizeProto prizelist = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prizelist:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_prizelist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_prizelist;
        if (input->ExpectTag(16)) goto parse_nick_name_id_list;
        break;
      }

      // repeated int32 nick_name_id_list = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nick_name_id_list:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_nick_name_id_list())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_nick_name_id_list())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_nick_name_id_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BaiduVipPrizeConfigProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .app.message.BaiduVipPrizeProto prizelist = 1;
  for (int i = 0; i < this->prizelist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->prizelist(i), output);
  }

  // repeated int32 nick_name_id_list = 2;
  for (int i = 0; i < this->nick_name_id_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->nick_name_id_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BaiduVipPrizeConfigProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .app.message.BaiduVipPrizeProto prizelist = 1;
  for (int i = 0; i < this->prizelist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->prizelist(i), target);
  }

  // repeated int32 nick_name_id_list = 2;
  for (int i = 0; i < this->nick_name_id_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->nick_name_id_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BaiduVipPrizeConfigProto::ByteSize() const {
  int total_size = 0;

  // repeated .app.message.BaiduVipPrizeProto prizelist = 1;
  total_size += 1 * this->prizelist_size();
  for (int i = 0; i < this->prizelist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->prizelist(i));
  }

  // repeated int32 nick_name_id_list = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->nick_name_id_list_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->nick_name_id_list(i));
    }
    total_size += 1 * this->nick_name_id_list_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaiduVipPrizeConfigProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BaiduVipPrizeConfigProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BaiduVipPrizeConfigProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BaiduVipPrizeConfigProto::MergeFrom(const BaiduVipPrizeConfigProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  prizelist_.MergeFrom(from.prizelist_);
  nick_name_id_list_.MergeFrom(from.nick_name_id_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BaiduVipPrizeConfigProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaiduVipPrizeConfigProto::CopyFrom(const BaiduVipPrizeConfigProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaiduVipPrizeConfigProto::IsInitialized() const {

  return true;
}

void BaiduVipPrizeConfigProto::Swap(BaiduVipPrizeConfigProto* other) {
  if (other != this) {
    prizelist_.Swap(&other->prizelist_);
    nick_name_id_list_.Swap(&other->nick_name_id_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BaiduVipPrizeConfigProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BaiduVipPrizeConfigProto_descriptor_;
  metadata.reflection = BaiduVipPrizeConfigProto_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace app

// @@protoc_insertion_point(global_scope)
