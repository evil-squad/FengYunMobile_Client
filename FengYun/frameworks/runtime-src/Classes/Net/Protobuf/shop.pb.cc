// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: shop.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "shop.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace app {
namespace message {

namespace {

const ::google::protobuf::Descriptor* ShopProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShopProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* ShopTabProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShopTabProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* ShopGoodsProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ShopGoodsProto_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PriceType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_shop_2eproto() {
  protobuf_AddDesc_shop_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "shop.proto");
  GOOGLE_CHECK(file != NULL);
  ShopProto_descriptor_ = file->message_type(0);
  static const int ShopProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopProto, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopProto, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopProto, tab_list_),
  };
  ShopProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ShopProto_descriptor_,
      ShopProto::default_instance_,
      ShopProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ShopProto));
  ShopTabProto_descriptor_ = file->message_type(1);
  static const int ShopTabProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopTabProto, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopTabProto, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopTabProto, goods_list_),
  };
  ShopTabProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ShopTabProto_descriptor_,
      ShopTabProto::default_instance_,
      ShopTabProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopTabProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopTabProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ShopTabProto));
  ShopGoodsProto_descriptor_ = file->message_type(2);
  static const int ShopGoodsProto_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopGoodsProto, goods_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopGoodsProto, price_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopGoodsProto, price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopGoodsProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopGoodsProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopGoodsProto, promotion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopGoodsProto, expire_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopGoodsProto, duration_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopGoodsProto, show_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopGoodsProto, goods_wrapper_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopGoodsProto, desc_),
  };
  ShopGoodsProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ShopGoodsProto_descriptor_,
      ShopGoodsProto::default_instance_,
      ShopGoodsProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopGoodsProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopGoodsProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ShopGoodsProto));
  PriceType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_shop_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ShopProto_descriptor_, &ShopProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ShopTabProto_descriptor_, &ShopTabProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ShopGoodsProto_descriptor_, &ShopGoodsProto::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_shop_2eproto() {
  delete ShopProto::default_instance_;
  delete ShopProto_reflection_;
  delete ShopTabProto::default_instance_;
  delete ShopTabProto_reflection_;
  delete ShopGoodsProto::default_instance_;
  delete ShopGoodsProto_reflection_;
}

void protobuf_AddDesc_shop_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::app::message::protobuf_AddDesc_goods_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\nshop.proto\022\013app.message\032\013goods.proto\"R"
    "\n\tShopProto\022\n\n\002id\030\001 \001(\005\022\014\n\004name\030\002 \001(\014\022+\n"
    "\010tab_list\030\003 \003(\0132\031.app.message.ShopTabPro"
    "to\"\\\n\014ShopTabProto\022\r\n\005index\030\001 \001(\005\022\014\n\004nam"
    "e\030\002 \001(\014\022/\n\ngoods_list\030\003 \003(\0132\033.app.messag"
    "e.ShopGoodsProto\"\244\002\n\016ShopGoodsProto\022\026\n\ng"
    "oods_data\030\002 \001(\014B\002\030\001\022*\n\nprice_type\030\004 \001(\0162"
    "\026.app.message.PriceType\022\r\n\005price\030\005 \001(\005\022\022"
    "\n\nstart_time\030\007 \001(\003\022\020\n\010end_time\030\010 \001(\003\022\021\n\t"
    "promotion\030\t \001(\005\022\027\n\013expire_time\030\n \001(\003B\002\030\001"
    "\022\024\n\010duration\030\013 \001(\005B\002\030\001\022\022\n\nshow_price\030\014 \001"
    "(\005\0225\n\rgoods_wrapper\030\r \001(\0132\036.app.message."
    "GoodsWrapperProto\022\014\n\004desc\030\016 \001(\t*.\n\tPrice"
    "Type\022\t\n\005MONEY\020\000\022\t\n\005LIJIN\020\001\022\013\n\007YUANBAO\020\002B"
    "\035\n\014app.protobufB\013ShopContentH\001", 590);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "shop.proto", &protobuf_RegisterTypes);
  ShopProto::default_instance_ = new ShopProto();
  ShopTabProto::default_instance_ = new ShopTabProto();
  ShopGoodsProto::default_instance_ = new ShopGoodsProto();
  ShopProto::default_instance_->InitAsDefaultInstance();
  ShopTabProto::default_instance_->InitAsDefaultInstance();
  ShopGoodsProto::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_shop_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_shop_2eproto {
  StaticDescriptorInitializer_shop_2eproto() {
    protobuf_AddDesc_shop_2eproto();
  }
} static_descriptor_initializer_shop_2eproto_;
const ::google::protobuf::EnumDescriptor* PriceType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PriceType_descriptor_;
}
bool PriceType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int ShopProto::kIdFieldNumber;
const int ShopProto::kNameFieldNumber;
const int ShopProto::kTabListFieldNumber;
#endif  // !_MSC_VER

ShopProto::ShopProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ShopProto::InitAsDefaultInstance() {
}

ShopProto::ShopProto(const ShopProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ShopProto::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ShopProto::~ShopProto() {
  SharedDtor();
}

void ShopProto::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void ShopProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShopProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShopProto_descriptor_;
}

const ShopProto& ShopProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_shop_2eproto();
  return *default_instance_;
}

ShopProto* ShopProto::default_instance_ = NULL;

ShopProto* ShopProto::New() const {
  return new ShopProto;
}

void ShopProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
  }
  tab_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ShopProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional bytes name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_tab_list;
        break;
      }

      // repeated .app.message.ShopTabProto tab_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_tab_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tab_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_tab_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ShopProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional bytes name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->name(), output);
  }

  // repeated .app.message.ShopTabProto tab_list = 3;
  for (int i = 0; i < this->tab_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->tab_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ShopProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional bytes name = 2;
  if (has_name()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->name(), target);
  }

  // repeated .app.message.ShopTabProto tab_list = 3;
  for (int i = 0; i < this->tab_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->tab_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ShopProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional bytes name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->name());
    }

  }
  // repeated .app.message.ShopTabProto tab_list = 3;
  total_size += 1 * this->tab_list_size();
  for (int i = 0; i < this->tab_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tab_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShopProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ShopProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ShopProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ShopProto::MergeFrom(const ShopProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  tab_list_.MergeFrom(from.tab_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ShopProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShopProto::CopyFrom(const ShopProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShopProto::IsInitialized() const {

  return true;
}

void ShopProto::Swap(ShopProto* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(name_, other->name_);
    tab_list_.Swap(&other->tab_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ShopProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShopProto_descriptor_;
  metadata.reflection = ShopProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ShopTabProto::kIndexFieldNumber;
const int ShopTabProto::kNameFieldNumber;
const int ShopTabProto::kGoodsListFieldNumber;
#endif  // !_MSC_VER

ShopTabProto::ShopTabProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ShopTabProto::InitAsDefaultInstance() {
}

ShopTabProto::ShopTabProto(const ShopTabProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ShopTabProto::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ShopTabProto::~ShopTabProto() {
  SharedDtor();
}

void ShopTabProto::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void ShopTabProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShopTabProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShopTabProto_descriptor_;
}

const ShopTabProto& ShopTabProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_shop_2eproto();
  return *default_instance_;
}

ShopTabProto* ShopTabProto::default_instance_ = NULL;

ShopTabProto* ShopTabProto::New() const {
  return new ShopTabProto;
}

void ShopTabProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    index_ = 0;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
  }
  goods_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ShopTabProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional bytes name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_goods_list;
        break;
      }

      // repeated .app.message.ShopGoodsProto goods_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_goods_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_goods_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_goods_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ShopTabProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  // optional bytes name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->name(), output);
  }

  // repeated .app.message.ShopGoodsProto goods_list = 3;
  for (int i = 0; i < this->goods_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->goods_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ShopTabProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  // optional bytes name = 2;
  if (has_name()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->name(), target);
  }

  // repeated .app.message.ShopGoodsProto goods_list = 3;
  for (int i = 0; i < this->goods_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->goods_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ShopTabProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }

    // optional bytes name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->name());
    }

  }
  // repeated .app.message.ShopGoodsProto goods_list = 3;
  total_size += 1 * this->goods_list_size();
  for (int i = 0; i < this->goods_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->goods_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShopTabProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ShopTabProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ShopTabProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ShopTabProto::MergeFrom(const ShopTabProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  goods_list_.MergeFrom(from.goods_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ShopTabProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShopTabProto::CopyFrom(const ShopTabProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShopTabProto::IsInitialized() const {

  return true;
}

void ShopTabProto::Swap(ShopTabProto* other) {
  if (other != this) {
    std::swap(index_, other->index_);
    std::swap(name_, other->name_);
    goods_list_.Swap(&other->goods_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ShopTabProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShopTabProto_descriptor_;
  metadata.reflection = ShopTabProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ShopGoodsProto::kGoodsDataFieldNumber;
const int ShopGoodsProto::kPriceTypeFieldNumber;
const int ShopGoodsProto::kPriceFieldNumber;
const int ShopGoodsProto::kStartTimeFieldNumber;
const int ShopGoodsProto::kEndTimeFieldNumber;
const int ShopGoodsProto::kPromotionFieldNumber;
const int ShopGoodsProto::kExpireTimeFieldNumber;
const int ShopGoodsProto::kDurationFieldNumber;
const int ShopGoodsProto::kShowPriceFieldNumber;
const int ShopGoodsProto::kGoodsWrapperFieldNumber;
const int ShopGoodsProto::kDescFieldNumber;
#endif  // !_MSC_VER

ShopGoodsProto::ShopGoodsProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ShopGoodsProto::InitAsDefaultInstance() {
  goods_wrapper_ = const_cast< ::app::message::GoodsWrapperProto*>(&::app::message::GoodsWrapperProto::default_instance());
}

ShopGoodsProto::ShopGoodsProto(const ShopGoodsProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ShopGoodsProto::SharedCtor() {
  _cached_size_ = 0;
  goods_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  price_type_ = 0;
  price_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  promotion_ = 0;
  expire_time_ = GOOGLE_LONGLONG(0);
  duration_ = 0;
  show_price_ = 0;
  goods_wrapper_ = NULL;
  desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ShopGoodsProto::~ShopGoodsProto() {
  SharedDtor();
}

void ShopGoodsProto::SharedDtor() {
  if (goods_data_ != &::google::protobuf::internal::kEmptyString) {
    delete goods_data_;
  }
  if (desc_ != &::google::protobuf::internal::kEmptyString) {
    delete desc_;
  }
  if (this != default_instance_) {
    delete goods_wrapper_;
  }
}

void ShopGoodsProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShopGoodsProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ShopGoodsProto_descriptor_;
}

const ShopGoodsProto& ShopGoodsProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_shop_2eproto();
  return *default_instance_;
}

ShopGoodsProto* ShopGoodsProto::default_instance_ = NULL;

ShopGoodsProto* ShopGoodsProto::New() const {
  return new ShopGoodsProto;
}

void ShopGoodsProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_goods_data()) {
      if (goods_data_ != &::google::protobuf::internal::kEmptyString) {
        goods_data_->clear();
      }
    }
    price_type_ = 0;
    price_ = 0;
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    promotion_ = 0;
    expire_time_ = GOOGLE_LONGLONG(0);
    duration_ = 0;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    show_price_ = 0;
    if (has_goods_wrapper()) {
      if (goods_wrapper_ != NULL) goods_wrapper_->::app::message::GoodsWrapperProto::Clear();
    }
    if (has_desc()) {
      if (desc_ != &::google::protobuf::internal::kEmptyString) {
        desc_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ShopGoodsProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes goods_data = 2 [deprecated = true];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_goods_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_price_type;
        break;
      }

      // optional .app.message.PriceType price_type = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_price_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::app::message::PriceType_IsValid(value)) {
            set_price_type(static_cast< ::app::message::PriceType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_price;
        break;
      }

      // optional int32 price = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &price_)));
          set_has_price();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_start_time;
        break;
      }

      // optional int64 start_time = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_start_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse_promotion;
        break;
      }

      // optional int32 promotion = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_promotion:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &promotion_)));
          set_has_promotion();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse_expire_time;
        break;
      }

      // optional int64 expire_time = 10 [deprecated = true];
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_expire_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &expire_time_)));
          set_has_expire_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_duration;
        break;
      }

      // optional int32 duration = 11 [deprecated = true];
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_duration:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &duration_)));
          set_has_duration();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_show_price;
        break;
      }

      // optional int32 show_price = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_show_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &show_price_)));
          set_has_show_price();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_goods_wrapper;
        break;
      }

      // optional .app.message.GoodsWrapperProto goods_wrapper = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_goods_wrapper:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_goods_wrapper()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_desc;
        break;
      }

      // optional string desc = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_desc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->desc().data(), this->desc().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ShopGoodsProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional bytes goods_data = 2 [deprecated = true];
  if (has_goods_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->goods_data(), output);
  }

  // optional .app.message.PriceType price_type = 4;
  if (has_price_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->price_type(), output);
  }

  // optional int32 price = 5;
  if (has_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->price(), output);
  }

  // optional int64 start_time = 7;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->start_time(), output);
  }

  // optional int64 end_time = 8;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->end_time(), output);
  }

  // optional int32 promotion = 9;
  if (has_promotion()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->promotion(), output);
  }

  // optional int64 expire_time = 10 [deprecated = true];
  if (has_expire_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(10, this->expire_time(), output);
  }

  // optional int32 duration = 11 [deprecated = true];
  if (has_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->duration(), output);
  }

  // optional int32 show_price = 12;
  if (has_show_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->show_price(), output);
  }

  // optional .app.message.GoodsWrapperProto goods_wrapper = 13;
  if (has_goods_wrapper()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->goods_wrapper(), output);
  }

  // optional string desc = 14;
  if (has_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      14, this->desc(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ShopGoodsProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bytes goods_data = 2 [deprecated = true];
  if (has_goods_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->goods_data(), target);
  }

  // optional .app.message.PriceType price_type = 4;
  if (has_price_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->price_type(), target);
  }

  // optional int32 price = 5;
  if (has_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->price(), target);
  }

  // optional int64 start_time = 7;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->start_time(), target);
  }

  // optional int64 end_time = 8;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->end_time(), target);
  }

  // optional int32 promotion = 9;
  if (has_promotion()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->promotion(), target);
  }

  // optional int64 expire_time = 10 [deprecated = true];
  if (has_expire_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(10, this->expire_time(), target);
  }

  // optional int32 duration = 11 [deprecated = true];
  if (has_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->duration(), target);
  }

  // optional int32 show_price = 12;
  if (has_show_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->show_price(), target);
  }

  // optional .app.message.GoodsWrapperProto goods_wrapper = 13;
  if (has_goods_wrapper()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->goods_wrapper(), target);
  }

  // optional string desc = 14;
  if (has_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->desc(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ShopGoodsProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes goods_data = 2 [deprecated = true];
    if (has_goods_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->goods_data());
    }

    // optional .app.message.PriceType price_type = 4;
    if (has_price_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->price_type());
    }

    // optional int32 price = 5;
    if (has_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->price());
    }

    // optional int64 start_time = 7;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 8;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional int32 promotion = 9;
    if (has_promotion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->promotion());
    }

    // optional int64 expire_time = 10 [deprecated = true];
    if (has_expire_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->expire_time());
    }

    // optional int32 duration = 11 [deprecated = true];
    if (has_duration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->duration());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int32 show_price = 12;
    if (has_show_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->show_price());
    }

    // optional .app.message.GoodsWrapperProto goods_wrapper = 13;
    if (has_goods_wrapper()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->goods_wrapper());
    }

    // optional string desc = 14;
    if (has_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->desc());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShopGoodsProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ShopGoodsProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ShopGoodsProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ShopGoodsProto::MergeFrom(const ShopGoodsProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_goods_data()) {
      set_goods_data(from.goods_data());
    }
    if (from.has_price_type()) {
      set_price_type(from.price_type());
    }
    if (from.has_price()) {
      set_price(from.price());
    }
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_promotion()) {
      set_promotion(from.promotion());
    }
    if (from.has_expire_time()) {
      set_expire_time(from.expire_time());
    }
    if (from.has_duration()) {
      set_duration(from.duration());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_show_price()) {
      set_show_price(from.show_price());
    }
    if (from.has_goods_wrapper()) {
      mutable_goods_wrapper()->::app::message::GoodsWrapperProto::MergeFrom(from.goods_wrapper());
    }
    if (from.has_desc()) {
      set_desc(from.desc());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ShopGoodsProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShopGoodsProto::CopyFrom(const ShopGoodsProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShopGoodsProto::IsInitialized() const {

  return true;
}

void ShopGoodsProto::Swap(ShopGoodsProto* other) {
  if (other != this) {
    std::swap(goods_data_, other->goods_data_);
    std::swap(price_type_, other->price_type_);
    std::swap(price_, other->price_);
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    std::swap(promotion_, other->promotion_);
    std::swap(expire_time_, other->expire_time_);
    std::swap(duration_, other->duration_);
    std::swap(show_price_, other->show_price_);
    std::swap(goods_wrapper_, other->goods_wrapper_);
    std::swap(desc_, other->desc_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ShopGoodsProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ShopGoodsProto_descriptor_;
  metadata.reflection = ShopGoodsProto_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace app

// @@protoc_insertion_point(global_scope)
