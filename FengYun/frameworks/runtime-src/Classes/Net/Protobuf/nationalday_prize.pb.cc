// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nationalday_prize.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "nationalday_prize.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace app {
namespace message {

namespace {

const ::google::protobuf::Descriptor* LoginPrizeProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginPrizeProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoginPrizeConfigProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginPrizeConfigProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* NationalDayRechargePrizeProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NationalDayRechargePrizeProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* NationalDayRechargePrizeConfigProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NationalDayRechargePrizeConfigProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* NationalDayShopGoodsProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NationalDayShopGoodsProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* NationalDayShopGoodsConfigProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NationalDayShopGoodsConfigProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* NationalDayShopGoodsAllConfigProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NationalDayShopGoodsAllConfigProto_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_nationalday_5fprize_2eproto() {
  protobuf_AddDesc_nationalday_5fprize_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "nationalday_prize.proto");
  GOOGLE_CHECK(file != NULL);
  LoginPrizeProto_descriptor_ = file->message_type(0);
  static const int LoginPrizeProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginPrizeProto, goods_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginPrizeProto, total_login_day_),
  };
  LoginPrizeProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LoginPrizeProto_descriptor_,
      LoginPrizeProto::default_instance_,
      LoginPrizeProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginPrizeProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginPrizeProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LoginPrizeProto));
  LoginPrizeConfigProto_descriptor_ = file->message_type(1);
  static const int LoginPrizeConfigProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginPrizeConfigProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginPrizeConfigProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginPrizeConfigProto, prize_list_),
  };
  LoginPrizeConfigProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LoginPrizeConfigProto_descriptor_,
      LoginPrizeConfigProto::default_instance_,
      LoginPrizeConfigProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginPrizeConfigProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginPrizeConfigProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LoginPrizeConfigProto));
  NationalDayRechargePrizeProto_descriptor_ = file->message_type(2);
  static const int NationalDayRechargePrizeProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NationalDayRechargePrizeProto, goods_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NationalDayRechargePrizeProto, total_recharge_day_),
  };
  NationalDayRechargePrizeProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NationalDayRechargePrizeProto_descriptor_,
      NationalDayRechargePrizeProto::default_instance_,
      NationalDayRechargePrizeProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NationalDayRechargePrizeProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NationalDayRechargePrizeProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NationalDayRechargePrizeProto));
  NationalDayRechargePrizeConfigProto_descriptor_ = file->message_type(3);
  static const int NationalDayRechargePrizeConfigProto_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NationalDayRechargePrizeConfigProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NationalDayRechargePrizeConfigProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NationalDayRechargePrizeConfigProto, prize_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NationalDayRechargePrizeConfigProto, min_recharge_yuanbao_per_day_),
  };
  NationalDayRechargePrizeConfigProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NationalDayRechargePrizeConfigProto_descriptor_,
      NationalDayRechargePrizeConfigProto::default_instance_,
      NationalDayRechargePrizeConfigProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NationalDayRechargePrizeConfigProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NationalDayRechargePrizeConfigProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NationalDayRechargePrizeConfigProto));
  NationalDayShopGoodsProto_descriptor_ = file->message_type(4);
  static const int NationalDayShopGoodsProto_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NationalDayShopGoodsProto, goods_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NationalDayShopGoodsProto, price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NationalDayShopGoodsProto, show_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NationalDayShopGoodsProto, desc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NationalDayShopGoodsProto, index_),
  };
  NationalDayShopGoodsProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NationalDayShopGoodsProto_descriptor_,
      NationalDayShopGoodsProto::default_instance_,
      NationalDayShopGoodsProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NationalDayShopGoodsProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NationalDayShopGoodsProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NationalDayShopGoodsProto));
  NationalDayShopGoodsConfigProto_descriptor_ = file->message_type(5);
  static const int NationalDayShopGoodsConfigProto_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NationalDayShopGoodsConfigProto, start_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NationalDayShopGoodsConfigProto, end_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NationalDayShopGoodsConfigProto, goods_config_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NationalDayShopGoodsConfigProto, max_buy_count_per_day_),
  };
  NationalDayShopGoodsConfigProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NationalDayShopGoodsConfigProto_descriptor_,
      NationalDayShopGoodsConfigProto::default_instance_,
      NationalDayShopGoodsConfigProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NationalDayShopGoodsConfigProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NationalDayShopGoodsConfigProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NationalDayShopGoodsConfigProto));
  NationalDayShopGoodsAllConfigProto_descriptor_ = file->message_type(6);
  static const int NationalDayShopGoodsAllConfigProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NationalDayShopGoodsAllConfigProto, config_list_),
  };
  NationalDayShopGoodsAllConfigProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NationalDayShopGoodsAllConfigProto_descriptor_,
      NationalDayShopGoodsAllConfigProto::default_instance_,
      NationalDayShopGoodsAllConfigProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NationalDayShopGoodsAllConfigProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NationalDayShopGoodsAllConfigProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NationalDayShopGoodsAllConfigProto));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_nationalday_5fprize_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LoginPrizeProto_descriptor_, &LoginPrizeProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LoginPrizeConfigProto_descriptor_, &LoginPrizeConfigProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NationalDayRechargePrizeProto_descriptor_, &NationalDayRechargePrizeProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NationalDayRechargePrizeConfigProto_descriptor_, &NationalDayRechargePrizeConfigProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NationalDayShopGoodsProto_descriptor_, &NationalDayShopGoodsProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NationalDayShopGoodsConfigProto_descriptor_, &NationalDayShopGoodsConfigProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NationalDayShopGoodsAllConfigProto_descriptor_, &NationalDayShopGoodsAllConfigProto::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_nationalday_5fprize_2eproto() {
  delete LoginPrizeProto::default_instance_;
  delete LoginPrizeProto_reflection_;
  delete LoginPrizeConfigProto::default_instance_;
  delete LoginPrizeConfigProto_reflection_;
  delete NationalDayRechargePrizeProto::default_instance_;
  delete NationalDayRechargePrizeProto_reflection_;
  delete NationalDayRechargePrizeConfigProto::default_instance_;
  delete NationalDayRechargePrizeConfigProto_reflection_;
  delete NationalDayShopGoodsProto::default_instance_;
  delete NationalDayShopGoodsProto_reflection_;
  delete NationalDayShopGoodsConfigProto::default_instance_;
  delete NationalDayShopGoodsConfigProto_reflection_;
  delete NationalDayShopGoodsAllConfigProto::default_instance_;
  delete NationalDayShopGoodsAllConfigProto_reflection_;
}

void protobuf_AddDesc_nationalday_5fprize_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::app::message::protobuf_AddDesc_goods_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027nationalday_prize.proto\022\013app.message\032\013"
    "goods.proto\"Y\n\017LoginPrizeProto\022-\n\005goods\030"
    "\001 \003(\0132\036.app.message.GoodsWrapperProto\022\027\n"
    "\017total_login_day\030\002 \001(\005\"o\n\025LoginPrizeConf"
    "igProto\022\022\n\nstart_time\030\001 \001(\003\022\020\n\010end_time\030"
    "\002 \001(\003\0220\n\nprize_list\030\003 \003(\0132\034.app.message."
    "LoginPrizeProto\"j\n\035NationalDayRechargePr"
    "izeProto\022-\n\005goods\030\001 \003(\0132\036.app.message.Go"
    "odsWrapperProto\022\032\n\022total_recharge_day\030\002 "
    "\001(\005\"\261\001\n#NationalDayRechargePrizeConfigPr"
    "oto\022\022\n\nstart_time\030\001 \001(\003\022\020\n\010end_time\030\002 \001("
    "\003\022>\n\nprize_list\030\003 \003(\0132*.app.message.Nati"
    "onalDayRechargePrizeProto\022$\n\034min_recharg"
    "e_yuanbao_per_day\030\004 \001(\005\"\212\001\n\031NationalDayS"
    "hopGoodsProto\022-\n\005goods\030\001 \001(\0132\036.app.messa"
    "ge.GoodsWrapperProto\022\r\n\005price\030\002 \001(\005\022\022\n\ns"
    "how_price\030\003 \001(\005\022\014\n\004desc\030\004 \001(\t\022\r\n\005index\030\005"
    " \001(\005\"\244\001\n\037NationalDayShopGoodsConfigProto"
    "\022\022\n\nstart_time\030\001 \001(\003\022\020\n\010end_time\030\002 \001(\003\022<"
    "\n\014goods_config\030\003 \003(\0132&.app.message.Natio"
    "nalDayShopGoodsProto\022\035\n\025max_buy_count_pe"
    "r_day\030\004 \001(\005\"g\n\"NationalDayShopGoodsAllCo"
    "nfigProto\022A\n\013config_list\030\001 \003(\0132,.app.mes"
    "sage.NationalDayShopGoodsConfigProtoB)\n\014"
    "app.protobufB\027NationalDayPrizeContentH\001", 999);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "nationalday_prize.proto", &protobuf_RegisterTypes);
  LoginPrizeProto::default_instance_ = new LoginPrizeProto();
  LoginPrizeConfigProto::default_instance_ = new LoginPrizeConfigProto();
  NationalDayRechargePrizeProto::default_instance_ = new NationalDayRechargePrizeProto();
  NationalDayRechargePrizeConfigProto::default_instance_ = new NationalDayRechargePrizeConfigProto();
  NationalDayShopGoodsProto::default_instance_ = new NationalDayShopGoodsProto();
  NationalDayShopGoodsConfigProto::default_instance_ = new NationalDayShopGoodsConfigProto();
  NationalDayShopGoodsAllConfigProto::default_instance_ = new NationalDayShopGoodsAllConfigProto();
  LoginPrizeProto::default_instance_->InitAsDefaultInstance();
  LoginPrizeConfigProto::default_instance_->InitAsDefaultInstance();
  NationalDayRechargePrizeProto::default_instance_->InitAsDefaultInstance();
  NationalDayRechargePrizeConfigProto::default_instance_->InitAsDefaultInstance();
  NationalDayShopGoodsProto::default_instance_->InitAsDefaultInstance();
  NationalDayShopGoodsConfigProto::default_instance_->InitAsDefaultInstance();
  NationalDayShopGoodsAllConfigProto::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_nationalday_5fprize_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_nationalday_5fprize_2eproto {
  StaticDescriptorInitializer_nationalday_5fprize_2eproto() {
    protobuf_AddDesc_nationalday_5fprize_2eproto();
  }
} static_descriptor_initializer_nationalday_5fprize_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int LoginPrizeProto::kGoodsFieldNumber;
const int LoginPrizeProto::kTotalLoginDayFieldNumber;
#endif  // !_MSC_VER

LoginPrizeProto::LoginPrizeProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void LoginPrizeProto::InitAsDefaultInstance() {
}

LoginPrizeProto::LoginPrizeProto(const LoginPrizeProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void LoginPrizeProto::SharedCtor() {
  _cached_size_ = 0;
  total_login_day_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LoginPrizeProto::~LoginPrizeProto() {
  SharedDtor();
}

void LoginPrizeProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LoginPrizeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginPrizeProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginPrizeProto_descriptor_;
}

const LoginPrizeProto& LoginPrizeProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nationalday_5fprize_2eproto();
  return *default_instance_;
}

LoginPrizeProto* LoginPrizeProto::default_instance_ = NULL;

LoginPrizeProto* LoginPrizeProto::New() const {
  return new LoginPrizeProto;
}

void LoginPrizeProto::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    total_login_day_ = 0;
  }
  goods_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LoginPrizeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .app.message.GoodsWrapperProto goods = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_goods:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_goods()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_goods;
        if (input->ExpectTag(16)) goto parse_total_login_day;
        break;
      }

      // optional int32 total_login_day = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_login_day:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_login_day_)));
          set_has_total_login_day();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void LoginPrizeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .app.message.GoodsWrapperProto goods = 1;
  for (int i = 0; i < this->goods_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->goods(i), output);
  }

  // optional int32 total_login_day = 2;
  if (has_total_login_day()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->total_login_day(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* LoginPrizeProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .app.message.GoodsWrapperProto goods = 1;
  for (int i = 0; i < this->goods_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->goods(i), target);
  }

  // optional int32 total_login_day = 2;
  if (has_total_login_day()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->total_login_day(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int LoginPrizeProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 total_login_day = 2;
    if (has_total_login_day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_login_day());
    }

  }
  // repeated .app.message.GoodsWrapperProto goods = 1;
  total_size += 1 * this->goods_size();
  for (int i = 0; i < this->goods_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->goods(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginPrizeProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LoginPrizeProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LoginPrizeProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LoginPrizeProto::MergeFrom(const LoginPrizeProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  goods_.MergeFrom(from.goods_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_total_login_day()) {
      set_total_login_day(from.total_login_day());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LoginPrizeProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginPrizeProto::CopyFrom(const LoginPrizeProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginPrizeProto::IsInitialized() const {

  return true;
}

void LoginPrizeProto::Swap(LoginPrizeProto* other) {
  if (other != this) {
    goods_.Swap(&other->goods_);
    std::swap(total_login_day_, other->total_login_day_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LoginPrizeProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginPrizeProto_descriptor_;
  metadata.reflection = LoginPrizeProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LoginPrizeConfigProto::kStartTimeFieldNumber;
const int LoginPrizeConfigProto::kEndTimeFieldNumber;
const int LoginPrizeConfigProto::kPrizeListFieldNumber;
#endif  // !_MSC_VER

LoginPrizeConfigProto::LoginPrizeConfigProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void LoginPrizeConfigProto::InitAsDefaultInstance() {
}

LoginPrizeConfigProto::LoginPrizeConfigProto(const LoginPrizeConfigProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void LoginPrizeConfigProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LoginPrizeConfigProto::~LoginPrizeConfigProto() {
  SharedDtor();
}

void LoginPrizeConfigProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void LoginPrizeConfigProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginPrizeConfigProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginPrizeConfigProto_descriptor_;
}

const LoginPrizeConfigProto& LoginPrizeConfigProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nationalday_5fprize_2eproto();
  return *default_instance_;
}

LoginPrizeConfigProto* LoginPrizeConfigProto::default_instance_ = NULL;

LoginPrizeConfigProto* LoginPrizeConfigProto::New() const {
  return new LoginPrizeConfigProto;
}

void LoginPrizeConfigProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
  }
  prize_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LoginPrizeConfigProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_prize_list;
        break;
      }

      // repeated .app.message.LoginPrizeProto prize_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_prize_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_prize_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void LoginPrizeConfigProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // repeated .app.message.LoginPrizeProto prize_list = 3;
  for (int i = 0; i < this->prize_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->prize_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* LoginPrizeConfigProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // repeated .app.message.LoginPrizeProto prize_list = 3;
  for (int i = 0; i < this->prize_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->prize_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int LoginPrizeConfigProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

  }
  // repeated .app.message.LoginPrizeProto prize_list = 3;
  total_size += 1 * this->prize_list_size();
  for (int i = 0; i < this->prize_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->prize_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginPrizeConfigProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LoginPrizeConfigProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LoginPrizeConfigProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LoginPrizeConfigProto::MergeFrom(const LoginPrizeConfigProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  prize_list_.MergeFrom(from.prize_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LoginPrizeConfigProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginPrizeConfigProto::CopyFrom(const LoginPrizeConfigProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginPrizeConfigProto::IsInitialized() const {

  return true;
}

void LoginPrizeConfigProto::Swap(LoginPrizeConfigProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    prize_list_.Swap(&other->prize_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LoginPrizeConfigProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginPrizeConfigProto_descriptor_;
  metadata.reflection = LoginPrizeConfigProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NationalDayRechargePrizeProto::kGoodsFieldNumber;
const int NationalDayRechargePrizeProto::kTotalRechargeDayFieldNumber;
#endif  // !_MSC_VER

NationalDayRechargePrizeProto::NationalDayRechargePrizeProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NationalDayRechargePrizeProto::InitAsDefaultInstance() {
}

NationalDayRechargePrizeProto::NationalDayRechargePrizeProto(const NationalDayRechargePrizeProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NationalDayRechargePrizeProto::SharedCtor() {
  _cached_size_ = 0;
  total_recharge_day_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NationalDayRechargePrizeProto::~NationalDayRechargePrizeProto() {
  SharedDtor();
}

void NationalDayRechargePrizeProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NationalDayRechargePrizeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NationalDayRechargePrizeProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NationalDayRechargePrizeProto_descriptor_;
}

const NationalDayRechargePrizeProto& NationalDayRechargePrizeProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nationalday_5fprize_2eproto();
  return *default_instance_;
}

NationalDayRechargePrizeProto* NationalDayRechargePrizeProto::default_instance_ = NULL;

NationalDayRechargePrizeProto* NationalDayRechargePrizeProto::New() const {
  return new NationalDayRechargePrizeProto;
}

void NationalDayRechargePrizeProto::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    total_recharge_day_ = 0;
  }
  goods_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NationalDayRechargePrizeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .app.message.GoodsWrapperProto goods = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_goods:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_goods()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_goods;
        if (input->ExpectTag(16)) goto parse_total_recharge_day;
        break;
      }

      // optional int32 total_recharge_day = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_total_recharge_day:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_recharge_day_)));
          set_has_total_recharge_day();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void NationalDayRechargePrizeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .app.message.GoodsWrapperProto goods = 1;
  for (int i = 0; i < this->goods_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->goods(i), output);
  }

  // optional int32 total_recharge_day = 2;
  if (has_total_recharge_day()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->total_recharge_day(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NationalDayRechargePrizeProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .app.message.GoodsWrapperProto goods = 1;
  for (int i = 0; i < this->goods_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->goods(i), target);
  }

  // optional int32 total_recharge_day = 2;
  if (has_total_recharge_day()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->total_recharge_day(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NationalDayRechargePrizeProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional int32 total_recharge_day = 2;
    if (has_total_recharge_day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_recharge_day());
    }

  }
  // repeated .app.message.GoodsWrapperProto goods = 1;
  total_size += 1 * this->goods_size();
  for (int i = 0; i < this->goods_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->goods(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NationalDayRechargePrizeProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NationalDayRechargePrizeProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NationalDayRechargePrizeProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NationalDayRechargePrizeProto::MergeFrom(const NationalDayRechargePrizeProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  goods_.MergeFrom(from.goods_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_total_recharge_day()) {
      set_total_recharge_day(from.total_recharge_day());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NationalDayRechargePrizeProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NationalDayRechargePrizeProto::CopyFrom(const NationalDayRechargePrizeProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NationalDayRechargePrizeProto::IsInitialized() const {

  return true;
}

void NationalDayRechargePrizeProto::Swap(NationalDayRechargePrizeProto* other) {
  if (other != this) {
    goods_.Swap(&other->goods_);
    std::swap(total_recharge_day_, other->total_recharge_day_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NationalDayRechargePrizeProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NationalDayRechargePrizeProto_descriptor_;
  metadata.reflection = NationalDayRechargePrizeProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NationalDayRechargePrizeConfigProto::kStartTimeFieldNumber;
const int NationalDayRechargePrizeConfigProto::kEndTimeFieldNumber;
const int NationalDayRechargePrizeConfigProto::kPrizeListFieldNumber;
const int NationalDayRechargePrizeConfigProto::kMinRechargeYuanbaoPerDayFieldNumber;
#endif  // !_MSC_VER

NationalDayRechargePrizeConfigProto::NationalDayRechargePrizeConfigProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NationalDayRechargePrizeConfigProto::InitAsDefaultInstance() {
}

NationalDayRechargePrizeConfigProto::NationalDayRechargePrizeConfigProto(const NationalDayRechargePrizeConfigProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NationalDayRechargePrizeConfigProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  min_recharge_yuanbao_per_day_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NationalDayRechargePrizeConfigProto::~NationalDayRechargePrizeConfigProto() {
  SharedDtor();
}

void NationalDayRechargePrizeConfigProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NationalDayRechargePrizeConfigProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NationalDayRechargePrizeConfigProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NationalDayRechargePrizeConfigProto_descriptor_;
}

const NationalDayRechargePrizeConfigProto& NationalDayRechargePrizeConfigProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nationalday_5fprize_2eproto();
  return *default_instance_;
}

NationalDayRechargePrizeConfigProto* NationalDayRechargePrizeConfigProto::default_instance_ = NULL;

NationalDayRechargePrizeConfigProto* NationalDayRechargePrizeConfigProto::New() const {
  return new NationalDayRechargePrizeConfigProto;
}

void NationalDayRechargePrizeConfigProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    min_recharge_yuanbao_per_day_ = 0;
  }
  prize_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NationalDayRechargePrizeConfigProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_prize_list;
        break;
      }

      // repeated .app.message.NationalDayRechargePrizeProto prize_list = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_prize_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_prize_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_prize_list;
        if (input->ExpectTag(32)) goto parse_min_recharge_yuanbao_per_day;
        break;
      }

      // optional int32 min_recharge_yuanbao_per_day = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_min_recharge_yuanbao_per_day:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &min_recharge_yuanbao_per_day_)));
          set_has_min_recharge_yuanbao_per_day();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void NationalDayRechargePrizeConfigProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // repeated .app.message.NationalDayRechargePrizeProto prize_list = 3;
  for (int i = 0; i < this->prize_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->prize_list(i), output);
  }

  // optional int32 min_recharge_yuanbao_per_day = 4;
  if (has_min_recharge_yuanbao_per_day()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->min_recharge_yuanbao_per_day(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NationalDayRechargePrizeConfigProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // repeated .app.message.NationalDayRechargePrizeProto prize_list = 3;
  for (int i = 0; i < this->prize_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->prize_list(i), target);
  }

  // optional int32 min_recharge_yuanbao_per_day = 4;
  if (has_min_recharge_yuanbao_per_day()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->min_recharge_yuanbao_per_day(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NationalDayRechargePrizeConfigProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional int32 min_recharge_yuanbao_per_day = 4;
    if (has_min_recharge_yuanbao_per_day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->min_recharge_yuanbao_per_day());
    }

  }
  // repeated .app.message.NationalDayRechargePrizeProto prize_list = 3;
  total_size += 1 * this->prize_list_size();
  for (int i = 0; i < this->prize_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->prize_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NationalDayRechargePrizeConfigProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NationalDayRechargePrizeConfigProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NationalDayRechargePrizeConfigProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NationalDayRechargePrizeConfigProto::MergeFrom(const NationalDayRechargePrizeConfigProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  prize_list_.MergeFrom(from.prize_list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_min_recharge_yuanbao_per_day()) {
      set_min_recharge_yuanbao_per_day(from.min_recharge_yuanbao_per_day());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NationalDayRechargePrizeConfigProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NationalDayRechargePrizeConfigProto::CopyFrom(const NationalDayRechargePrizeConfigProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NationalDayRechargePrizeConfigProto::IsInitialized() const {

  return true;
}

void NationalDayRechargePrizeConfigProto::Swap(NationalDayRechargePrizeConfigProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    prize_list_.Swap(&other->prize_list_);
    std::swap(min_recharge_yuanbao_per_day_, other->min_recharge_yuanbao_per_day_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NationalDayRechargePrizeConfigProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NationalDayRechargePrizeConfigProto_descriptor_;
  metadata.reflection = NationalDayRechargePrizeConfigProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NationalDayShopGoodsProto::kGoodsFieldNumber;
const int NationalDayShopGoodsProto::kPriceFieldNumber;
const int NationalDayShopGoodsProto::kShowPriceFieldNumber;
const int NationalDayShopGoodsProto::kDescFieldNumber;
const int NationalDayShopGoodsProto::kIndexFieldNumber;
#endif  // !_MSC_VER

NationalDayShopGoodsProto::NationalDayShopGoodsProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NationalDayShopGoodsProto::InitAsDefaultInstance() {
  goods_ = const_cast< ::app::message::GoodsWrapperProto*>(&::app::message::GoodsWrapperProto::default_instance());
}

NationalDayShopGoodsProto::NationalDayShopGoodsProto(const NationalDayShopGoodsProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NationalDayShopGoodsProto::SharedCtor() {
  _cached_size_ = 0;
  goods_ = NULL;
  price_ = 0;
  show_price_ = 0;
  desc_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  index_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NationalDayShopGoodsProto::~NationalDayShopGoodsProto() {
  SharedDtor();
}

void NationalDayShopGoodsProto::SharedDtor() {
  if (desc_ != &::google::protobuf::internal::kEmptyString) {
    delete desc_;
  }
  if (this != default_instance_) {
    delete goods_;
  }
}

void NationalDayShopGoodsProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NationalDayShopGoodsProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NationalDayShopGoodsProto_descriptor_;
}

const NationalDayShopGoodsProto& NationalDayShopGoodsProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nationalday_5fprize_2eproto();
  return *default_instance_;
}

NationalDayShopGoodsProto* NationalDayShopGoodsProto::default_instance_ = NULL;

NationalDayShopGoodsProto* NationalDayShopGoodsProto::New() const {
  return new NationalDayShopGoodsProto;
}

void NationalDayShopGoodsProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_goods()) {
      if (goods_ != NULL) goods_->::app::message::GoodsWrapperProto::Clear();
    }
    price_ = 0;
    show_price_ = 0;
    if (has_desc()) {
      if (desc_ != &::google::protobuf::internal::kEmptyString) {
        desc_->clear();
      }
    }
    index_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NationalDayShopGoodsProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .app.message.GoodsWrapperProto goods = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_goods()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_price;
        break;
      }

      // optional int32 price = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &price_)));
          set_has_price();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_show_price;
        break;
      }

      // optional int32 show_price = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_show_price:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &show_price_)));
          set_has_show_price();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_desc;
        break;
      }

      // optional string desc = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_desc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->desc().data(), this->desc().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_index;
        break;
      }

      // optional int32 index = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void NationalDayShopGoodsProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .app.message.GoodsWrapperProto goods = 1;
  if (has_goods()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->goods(), output);
  }

  // optional int32 price = 2;
  if (has_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->price(), output);
  }

  // optional int32 show_price = 3;
  if (has_show_price()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->show_price(), output);
  }

  // optional string desc = 4;
  if (has_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->desc(), output);
  }

  // optional int32 index = 5;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->index(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NationalDayShopGoodsProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .app.message.GoodsWrapperProto goods = 1;
  if (has_goods()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->goods(), target);
  }

  // optional int32 price = 2;
  if (has_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->price(), target);
  }

  // optional int32 show_price = 3;
  if (has_show_price()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->show_price(), target);
  }

  // optional string desc = 4;
  if (has_desc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->desc().data(), this->desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->desc(), target);
  }

  // optional int32 index = 5;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->index(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NationalDayShopGoodsProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .app.message.GoodsWrapperProto goods = 1;
    if (has_goods()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->goods());
    }

    // optional int32 price = 2;
    if (has_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->price());
    }

    // optional int32 show_price = 3;
    if (has_show_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->show_price());
    }

    // optional string desc = 4;
    if (has_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->desc());
    }

    // optional int32 index = 5;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->index());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NationalDayShopGoodsProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NationalDayShopGoodsProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NationalDayShopGoodsProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NationalDayShopGoodsProto::MergeFrom(const NationalDayShopGoodsProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_goods()) {
      mutable_goods()->::app::message::GoodsWrapperProto::MergeFrom(from.goods());
    }
    if (from.has_price()) {
      set_price(from.price());
    }
    if (from.has_show_price()) {
      set_show_price(from.show_price());
    }
    if (from.has_desc()) {
      set_desc(from.desc());
    }
    if (from.has_index()) {
      set_index(from.index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NationalDayShopGoodsProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NationalDayShopGoodsProto::CopyFrom(const NationalDayShopGoodsProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NationalDayShopGoodsProto::IsInitialized() const {

  return true;
}

void NationalDayShopGoodsProto::Swap(NationalDayShopGoodsProto* other) {
  if (other != this) {
    std::swap(goods_, other->goods_);
    std::swap(price_, other->price_);
    std::swap(show_price_, other->show_price_);
    std::swap(desc_, other->desc_);
    std::swap(index_, other->index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NationalDayShopGoodsProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NationalDayShopGoodsProto_descriptor_;
  metadata.reflection = NationalDayShopGoodsProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NationalDayShopGoodsConfigProto::kStartTimeFieldNumber;
const int NationalDayShopGoodsConfigProto::kEndTimeFieldNumber;
const int NationalDayShopGoodsConfigProto::kGoodsConfigFieldNumber;
const int NationalDayShopGoodsConfigProto::kMaxBuyCountPerDayFieldNumber;
#endif  // !_MSC_VER

NationalDayShopGoodsConfigProto::NationalDayShopGoodsConfigProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NationalDayShopGoodsConfigProto::InitAsDefaultInstance() {
}

NationalDayShopGoodsConfigProto::NationalDayShopGoodsConfigProto(const NationalDayShopGoodsConfigProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NationalDayShopGoodsConfigProto::SharedCtor() {
  _cached_size_ = 0;
  start_time_ = GOOGLE_LONGLONG(0);
  end_time_ = GOOGLE_LONGLONG(0);
  max_buy_count_per_day_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NationalDayShopGoodsConfigProto::~NationalDayShopGoodsConfigProto() {
  SharedDtor();
}

void NationalDayShopGoodsConfigProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NationalDayShopGoodsConfigProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NationalDayShopGoodsConfigProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NationalDayShopGoodsConfigProto_descriptor_;
}

const NationalDayShopGoodsConfigProto& NationalDayShopGoodsConfigProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nationalday_5fprize_2eproto();
  return *default_instance_;
}

NationalDayShopGoodsConfigProto* NationalDayShopGoodsConfigProto::default_instance_ = NULL;

NationalDayShopGoodsConfigProto* NationalDayShopGoodsConfigProto::New() const {
  return new NationalDayShopGoodsConfigProto;
}

void NationalDayShopGoodsConfigProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    start_time_ = GOOGLE_LONGLONG(0);
    end_time_ = GOOGLE_LONGLONG(0);
    max_buy_count_per_day_ = 0;
  }
  goods_config_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NationalDayShopGoodsConfigProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 start_time = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &start_time_)));
          set_has_start_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_end_time;
        break;
      }

      // optional int64 end_time = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_end_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_time_)));
          set_has_end_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_goods_config;
        break;
      }

      // repeated .app.message.NationalDayShopGoodsProto goods_config = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_goods_config:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_goods_config()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_goods_config;
        if (input->ExpectTag(32)) goto parse_max_buy_count_per_day;
        break;
      }

      // optional int32 max_buy_count_per_day = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_max_buy_count_per_day:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_buy_count_per_day_)));
          set_has_max_buy_count_per_day();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void NationalDayShopGoodsConfigProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->start_time(), output);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end_time(), output);
  }

  // repeated .app.message.NationalDayShopGoodsProto goods_config = 3;
  for (int i = 0; i < this->goods_config_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->goods_config(i), output);
  }

  // optional int32 max_buy_count_per_day = 4;
  if (has_max_buy_count_per_day()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->max_buy_count_per_day(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NationalDayShopGoodsConfigProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 start_time = 1;
  if (has_start_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->start_time(), target);
  }

  // optional int64 end_time = 2;
  if (has_end_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end_time(), target);
  }

  // repeated .app.message.NationalDayShopGoodsProto goods_config = 3;
  for (int i = 0; i < this->goods_config_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->goods_config(i), target);
  }

  // optional int32 max_buy_count_per_day = 4;
  if (has_max_buy_count_per_day()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->max_buy_count_per_day(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NationalDayShopGoodsConfigProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 start_time = 1;
    if (has_start_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->start_time());
    }

    // optional int64 end_time = 2;
    if (has_end_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end_time());
    }

    // optional int32 max_buy_count_per_day = 4;
    if (has_max_buy_count_per_day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->max_buy_count_per_day());
    }

  }
  // repeated .app.message.NationalDayShopGoodsProto goods_config = 3;
  total_size += 1 * this->goods_config_size();
  for (int i = 0; i < this->goods_config_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->goods_config(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NationalDayShopGoodsConfigProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NationalDayShopGoodsConfigProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NationalDayShopGoodsConfigProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NationalDayShopGoodsConfigProto::MergeFrom(const NationalDayShopGoodsConfigProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  goods_config_.MergeFrom(from.goods_config_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_start_time()) {
      set_start_time(from.start_time());
    }
    if (from.has_end_time()) {
      set_end_time(from.end_time());
    }
    if (from.has_max_buy_count_per_day()) {
      set_max_buy_count_per_day(from.max_buy_count_per_day());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NationalDayShopGoodsConfigProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NationalDayShopGoodsConfigProto::CopyFrom(const NationalDayShopGoodsConfigProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NationalDayShopGoodsConfigProto::IsInitialized() const {

  return true;
}

void NationalDayShopGoodsConfigProto::Swap(NationalDayShopGoodsConfigProto* other) {
  if (other != this) {
    std::swap(start_time_, other->start_time_);
    std::swap(end_time_, other->end_time_);
    goods_config_.Swap(&other->goods_config_);
    std::swap(max_buy_count_per_day_, other->max_buy_count_per_day_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NationalDayShopGoodsConfigProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NationalDayShopGoodsConfigProto_descriptor_;
  metadata.reflection = NationalDayShopGoodsConfigProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NationalDayShopGoodsAllConfigProto::kConfigListFieldNumber;
#endif  // !_MSC_VER

NationalDayShopGoodsAllConfigProto::NationalDayShopGoodsAllConfigProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NationalDayShopGoodsAllConfigProto::InitAsDefaultInstance() {
}

NationalDayShopGoodsAllConfigProto::NationalDayShopGoodsAllConfigProto(const NationalDayShopGoodsAllConfigProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NationalDayShopGoodsAllConfigProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NationalDayShopGoodsAllConfigProto::~NationalDayShopGoodsAllConfigProto() {
  SharedDtor();
}

void NationalDayShopGoodsAllConfigProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NationalDayShopGoodsAllConfigProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NationalDayShopGoodsAllConfigProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NationalDayShopGoodsAllConfigProto_descriptor_;
}

const NationalDayShopGoodsAllConfigProto& NationalDayShopGoodsAllConfigProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_nationalday_5fprize_2eproto();
  return *default_instance_;
}

NationalDayShopGoodsAllConfigProto* NationalDayShopGoodsAllConfigProto::default_instance_ = NULL;

NationalDayShopGoodsAllConfigProto* NationalDayShopGoodsAllConfigProto::New() const {
  return new NationalDayShopGoodsAllConfigProto;
}

void NationalDayShopGoodsAllConfigProto::Clear() {
  config_list_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NationalDayShopGoodsAllConfigProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .app.message.NationalDayShopGoodsConfigProto config_list = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_config_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_config_list()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_config_list;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void NationalDayShopGoodsAllConfigProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .app.message.NationalDayShopGoodsConfigProto config_list = 1;
  for (int i = 0; i < this->config_list_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->config_list(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NationalDayShopGoodsAllConfigProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .app.message.NationalDayShopGoodsConfigProto config_list = 1;
  for (int i = 0; i < this->config_list_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->config_list(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NationalDayShopGoodsAllConfigProto::ByteSize() const {
  int total_size = 0;

  // repeated .app.message.NationalDayShopGoodsConfigProto config_list = 1;
  total_size += 1 * this->config_list_size();
  for (int i = 0; i < this->config_list_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->config_list(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NationalDayShopGoodsAllConfigProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NationalDayShopGoodsAllConfigProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NationalDayShopGoodsAllConfigProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NationalDayShopGoodsAllConfigProto::MergeFrom(const NationalDayShopGoodsAllConfigProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  config_list_.MergeFrom(from.config_list_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NationalDayShopGoodsAllConfigProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NationalDayShopGoodsAllConfigProto::CopyFrom(const NationalDayShopGoodsAllConfigProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NationalDayShopGoodsAllConfigProto::IsInitialized() const {

  return true;
}

void NationalDayShopGoodsAllConfigProto::Swap(NationalDayShopGoodsAllConfigProto* other) {
  if (other != this) {
    config_list_.Swap(&other->config_list_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NationalDayShopGoodsAllConfigProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NationalDayShopGoodsAllConfigProto_descriptor_;
  metadata.reflection = NationalDayShopGoodsAllConfigProto_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace app

// @@protoc_insertion_point(global_scope)
