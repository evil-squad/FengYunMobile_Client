// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dungeon.proto

#ifndef PROTOBUF_dungeon_2eproto__INCLUDED
#define PROTOBUF_dungeon_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "goods.pb.h"
#include "prize.pb.h"
// @@protoc_insertion_point(includes)

namespace app {
namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_dungeon_2eproto();
void protobuf_AssignDesc_dungeon_2eproto();
void protobuf_ShutdownFile_dungeon_2eproto();

class DungeonBatchInfoProto;
class DamageRecordProto;
class GroupDungeonFinishStatProto;
class GroupDungeonCollectablePrizeProto;
class ArenaResultProto;
class ArenaEachHeroResult;
class DotaInitInfoProto;
class DotaEachHeroInitProto;
class DotaFinalInfoProto;
class DotaEachHeroFinalProto;
class HtzWorldRecordProto;
class HtzTimeRecordProto;
class HtzDestroyRecordProto;
class WuLinProto;
class WuLinGroupProto;
class WuLinMatchProto;
class WuLinHeroProto;
class WuLinMatchResultProto;
class MeleeInitProto;
class MeleeEachHeroInfoProto;
class MeleeFinalInfoProto;

enum WuLinMatchType {
  GROUP = 1,
  M_16 = 2,
  M_8 = 3,
  M_4 = 4,
  M_2 = 5
};
bool WuLinMatchType_IsValid(int value);
const WuLinMatchType WuLinMatchType_MIN = GROUP;
const WuLinMatchType WuLinMatchType_MAX = M_2;
const int WuLinMatchType_ARRAYSIZE = WuLinMatchType_MAX + 1;

const ::google::protobuf::EnumDescriptor* WuLinMatchType_descriptor();
inline const ::std::string& WuLinMatchType_Name(WuLinMatchType value) {
  return ::google::protobuf::internal::NameOfEnum(
    WuLinMatchType_descriptor(), value);
}
inline bool WuLinMatchType_Parse(
    const ::std::string& name, WuLinMatchType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WuLinMatchType>(
    WuLinMatchType_descriptor(), name, value);
}
// ===================================================================

class DungeonBatchInfoProto : public ::google::protobuf::Message {
 public:
  DungeonBatchInfoProto();
  virtual ~DungeonBatchInfoProto();

  DungeonBatchInfoProto(const DungeonBatchInfoProto& from);

  inline DungeonBatchInfoProto& operator=(const DungeonBatchInfoProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DungeonBatchInfoProto& default_instance();

  void Swap(DungeonBatchInfoProto* other);

  // implements Message ----------------------------------------------

  DungeonBatchInfoProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DungeonBatchInfoProto& from);
  void MergeFrom(const DungeonBatchInfoProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 batch_number = 1;
  inline bool has_batch_number() const;
  inline void clear_batch_number();
  static const int kBatchNumberFieldNumber = 1;
  inline ::google::protobuf::int32 batch_number() const;
  inline void set_batch_number(::google::protobuf::int32 value);

  // optional int32 current_monster_type_id = 2;
  inline bool has_current_monster_type_id() const;
  inline void clear_current_monster_type_id();
  static const int kCurrentMonsterTypeIdFieldNumber = 2;
  inline ::google::protobuf::int32 current_monster_type_id() const;
  inline void set_current_monster_type_id(::google::protobuf::int32 value);

  // optional int32 next_monster_type_id = 3;
  inline bool has_next_monster_type_id() const;
  inline void clear_next_monster_type_id();
  static const int kNextMonsterTypeIdFieldNumber = 3;
  inline ::google::protobuf::int32 next_monster_type_id() const;
  inline void set_next_monster_type_id(::google::protobuf::int32 value);

  // optional .app.message.PrizeProto current_batch_prize = 4;
  inline bool has_current_batch_prize() const;
  inline void clear_current_batch_prize();
  static const int kCurrentBatchPrizeFieldNumber = 4;
  inline const ::app::message::PrizeProto& current_batch_prize() const;
  inline ::app::message::PrizeProto* mutable_current_batch_prize();
  inline ::app::message::PrizeProto* release_current_batch_prize();
  inline void set_allocated_current_batch_prize(::app::message::PrizeProto* current_batch_prize);

  // optional int64 expire_duration = 5;
  inline bool has_expire_duration() const;
  inline void clear_expire_duration();
  static const int kExpireDurationFieldNumber = 5;
  inline ::google::protobuf::int64 expire_duration() const;
  inline void set_expire_duration(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:app.message.DungeonBatchInfoProto)
 private:
  inline void set_has_batch_number();
  inline void clear_has_batch_number();
  inline void set_has_current_monster_type_id();
  inline void clear_has_current_monster_type_id();
  inline void set_has_next_monster_type_id();
  inline void clear_has_next_monster_type_id();
  inline void set_has_current_batch_prize();
  inline void clear_has_current_batch_prize();
  inline void set_has_expire_duration();
  inline void clear_has_expire_duration();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 batch_number_;
  ::google::protobuf::int32 current_monster_type_id_;
  ::app::message::PrizeProto* current_batch_prize_;
  ::google::protobuf::int64 expire_duration_;
  ::google::protobuf::int32 next_monster_type_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_dungeon_2eproto();
  friend void protobuf_AssignDesc_dungeon_2eproto();
  friend void protobuf_ShutdownFile_dungeon_2eproto();

  void InitAsDefaultInstance();
  static DungeonBatchInfoProto* default_instance_;
};
// -------------------------------------------------------------------

class DamageRecordProto : public ::google::protobuf::Message {
 public:
  DamageRecordProto();
  virtual ~DamageRecordProto();

  DamageRecordProto(const DamageRecordProto& from);

  inline DamageRecordProto& operator=(const DamageRecordProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DamageRecordProto& default_instance();

  void Swap(DamageRecordProto* other);

  // implements Message ----------------------------------------------

  DamageRecordProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DamageRecordProto& from);
  void MergeFrom(const DamageRecordProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 hero_id = 1;
  inline int hero_id_size() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::int64 hero_id(int index) const;
  inline void set_hero_id(int index, ::google::protobuf::int64 value);
  inline void add_hero_id(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      hero_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_hero_id();

  // repeated bytes hero_name = 2;
  inline int hero_name_size() const;
  inline void clear_hero_name();
  static const int kHeroNameFieldNumber = 2;
  inline const ::std::string& hero_name(int index) const;
  inline ::std::string* mutable_hero_name(int index);
  inline void set_hero_name(int index, const ::std::string& value);
  inline void set_hero_name(int index, const char* value);
  inline void set_hero_name(int index, const void* value, size_t size);
  inline ::std::string* add_hero_name();
  inline void add_hero_name(const ::std::string& value);
  inline void add_hero_name(const char* value);
  inline void add_hero_name(const void* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& hero_name() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_hero_name();

  // repeated int64 damage_divided_by_1000 = 3;
  inline int damage_divided_by_1000_size() const;
  inline void clear_damage_divided_by_1000();
  static const int kDamageDividedBy1000FieldNumber = 3;
  inline ::google::protobuf::int64 damage_divided_by_1000(int index) const;
  inline void set_damage_divided_by_1000(int index, ::google::protobuf::int64 value);
  inline void add_damage_divided_by_1000(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      damage_divided_by_1000() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_damage_divided_by_1000();

  // repeated bool is_offline = 4;
  inline int is_offline_size() const;
  inline void clear_is_offline();
  static const int kIsOfflineFieldNumber = 4;
  inline bool is_offline(int index) const;
  inline void set_is_offline(int index, bool value);
  inline void add_is_offline(bool value);
  inline const ::google::protobuf::RepeatedField< bool >&
      is_offline() const;
  inline ::google::protobuf::RepeatedField< bool >*
      mutable_is_offline();

  // @@protoc_insertion_point(class_scope:app.message.DamageRecordProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > hero_id_;
  ::google::protobuf::RepeatedPtrField< ::std::string> hero_name_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > damage_divided_by_1000_;
  ::google::protobuf::RepeatedField< bool > is_offline_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_dungeon_2eproto();
  friend void protobuf_AssignDesc_dungeon_2eproto();
  friend void protobuf_ShutdownFile_dungeon_2eproto();

  void InitAsDefaultInstance();
  static DamageRecordProto* default_instance_;
};
// -------------------------------------------------------------------

class GroupDungeonFinishStatProto : public ::google::protobuf::Message {
 public:
  GroupDungeonFinishStatProto();
  virtual ~GroupDungeonFinishStatProto();

  GroupDungeonFinishStatProto(const GroupDungeonFinishStatProto& from);

  inline GroupDungeonFinishStatProto& operator=(const GroupDungeonFinishStatProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupDungeonFinishStatProto& default_instance();

  void Swap(GroupDungeonFinishStatProto* other);

  // implements Message ----------------------------------------------

  GroupDungeonFinishStatProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GroupDungeonFinishStatProto& from);
  void MergeFrom(const GroupDungeonFinishStatProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 total_time = 1;
  inline bool has_total_time() const;
  inline void clear_total_time();
  static const int kTotalTimeFieldNumber = 1;
  inline ::google::protobuf::int32 total_time() const;
  inline void set_total_time(::google::protobuf::int32 value);

  // optional int32 dead_count = 2;
  inline bool has_dead_count() const;
  inline void clear_dead_count();
  static const int kDeadCountFieldNumber = 2;
  inline ::google::protobuf::int32 dead_count() const;
  inline void set_dead_count(::google::protobuf::int32 value);

  // optional int32 monster_exp = 3;
  inline bool has_monster_exp() const;
  inline void clear_monster_exp();
  static const int kMonsterExpFieldNumber = 3;
  inline ::google::protobuf::int32 monster_exp() const;
  inline void set_monster_exp(::google::protobuf::int32 value);

  // optional int32 score = 4;
  inline bool has_score() const;
  inline void clear_score();
  static const int kScoreFieldNumber = 4;
  inline ::google::protobuf::int32 score() const;
  inline void set_score(::google::protobuf::int32 value);

  // repeated .app.message.GoodsWrapperProto score_s_prize = 5;
  inline int score_s_prize_size() const;
  inline void clear_score_s_prize();
  static const int kScoreSPrizeFieldNumber = 5;
  inline const ::app::message::GoodsWrapperProto& score_s_prize(int index) const;
  inline ::app::message::GoodsWrapperProto* mutable_score_s_prize(int index);
  inline ::app::message::GoodsWrapperProto* add_score_s_prize();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto >&
      score_s_prize() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto >*
      mutable_score_s_prize();

  // repeated .app.message.GoodsWrapperProto vip_prize = 6;
  inline int vip_prize_size() const;
  inline void clear_vip_prize();
  static const int kVipPrizeFieldNumber = 6;
  inline const ::app::message::GoodsWrapperProto& vip_prize(int index) const;
  inline ::app::message::GoodsWrapperProto* mutable_vip_prize(int index);
  inline ::app::message::GoodsWrapperProto* add_vip_prize();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto >&
      vip_prize() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto >*
      mutable_vip_prize();

  // @@protoc_insertion_point(class_scope:app.message.GroupDungeonFinishStatProto)
 private:
  inline void set_has_total_time();
  inline void clear_has_total_time();
  inline void set_has_dead_count();
  inline void clear_has_dead_count();
  inline void set_has_monster_exp();
  inline void clear_has_monster_exp();
  inline void set_has_score();
  inline void clear_has_score();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 total_time_;
  ::google::protobuf::int32 dead_count_;
  ::google::protobuf::int32 monster_exp_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto > score_s_prize_;
  ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto > vip_prize_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_dungeon_2eproto();
  friend void protobuf_AssignDesc_dungeon_2eproto();
  friend void protobuf_ShutdownFile_dungeon_2eproto();

  void InitAsDefaultInstance();
  static GroupDungeonFinishStatProto* default_instance_;
};
// -------------------------------------------------------------------

class GroupDungeonCollectablePrizeProto : public ::google::protobuf::Message {
 public:
  GroupDungeonCollectablePrizeProto();
  virtual ~GroupDungeonCollectablePrizeProto();

  GroupDungeonCollectablePrizeProto(const GroupDungeonCollectablePrizeProto& from);

  inline GroupDungeonCollectablePrizeProto& operator=(const GroupDungeonCollectablePrizeProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupDungeonCollectablePrizeProto& default_instance();

  void Swap(GroupDungeonCollectablePrizeProto* other);

  // implements Message ----------------------------------------------

  GroupDungeonCollectablePrizeProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GroupDungeonCollectablePrizeProto& from);
  void MergeFrom(const GroupDungeonCollectablePrizeProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 dungeon_id = 1;
  inline bool has_dungeon_id() const;
  inline void clear_dungeon_id();
  static const int kDungeonIdFieldNumber = 1;
  inline ::google::protobuf::int32 dungeon_id() const;
  inline void set_dungeon_id(::google::protobuf::int32 value);

  // optional bool no_score_s_prize = 2;
  inline bool has_no_score_s_prize() const;
  inline void clear_no_score_s_prize();
  static const int kNoScoreSPrizeFieldNumber = 2;
  inline bool no_score_s_prize() const;
  inline void set_no_score_s_prize(bool value);

  // optional int64 expire_time = 4;
  inline bool has_expire_time() const;
  inline void clear_expire_time();
  static const int kExpireTimeFieldNumber = 4;
  inline ::google::protobuf::int64 expire_time() const;
  inline void set_expire_time(::google::protobuf::int64 value);

  // optional bytes randomed_s_prize = 5;
  inline bool has_randomed_s_prize() const;
  inline void clear_randomed_s_prize();
  static const int kRandomedSPrizeFieldNumber = 5;
  inline const ::std::string& randomed_s_prize() const;
  inline void set_randomed_s_prize(const ::std::string& value);
  inline void set_randomed_s_prize(const char* value);
  inline void set_randomed_s_prize(const void* value, size_t size);
  inline ::std::string* mutable_randomed_s_prize();
  inline ::std::string* release_randomed_s_prize();
  inline void set_allocated_randomed_s_prize(::std::string* randomed_s_prize);

  // optional bytes randomed_vip_prize = 6;
  inline bool has_randomed_vip_prize() const;
  inline void clear_randomed_vip_prize();
  static const int kRandomedVipPrizeFieldNumber = 6;
  inline const ::std::string& randomed_vip_prize() const;
  inline void set_randomed_vip_prize(const ::std::string& value);
  inline void set_randomed_vip_prize(const char* value);
  inline void set_randomed_vip_prize(const void* value, size_t size);
  inline ::std::string* mutable_randomed_vip_prize();
  inline ::std::string* release_randomed_vip_prize();
  inline void set_allocated_randomed_vip_prize(::std::string* randomed_vip_prize);

  // @@protoc_insertion_point(class_scope:app.message.GroupDungeonCollectablePrizeProto)
 private:
  inline void set_has_dungeon_id();
  inline void clear_has_dungeon_id();
  inline void set_has_no_score_s_prize();
  inline void clear_has_no_score_s_prize();
  inline void set_has_expire_time();
  inline void clear_has_expire_time();
  inline void set_has_randomed_s_prize();
  inline void clear_has_randomed_s_prize();
  inline void set_has_randomed_vip_prize();
  inline void clear_has_randomed_vip_prize();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 dungeon_id_;
  bool no_score_s_prize_;
  ::google::protobuf::int64 expire_time_;
  ::std::string* randomed_s_prize_;
  ::std::string* randomed_vip_prize_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_dungeon_2eproto();
  friend void protobuf_AssignDesc_dungeon_2eproto();
  friend void protobuf_ShutdownFile_dungeon_2eproto();

  void InitAsDefaultInstance();
  static GroupDungeonCollectablePrizeProto* default_instance_;
};
// -------------------------------------------------------------------

class ArenaResultProto : public ::google::protobuf::Message {
 public:
  ArenaResultProto();
  virtual ~ArenaResultProto();

  ArenaResultProto(const ArenaResultProto& from);

  inline ArenaResultProto& operator=(const ArenaResultProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArenaResultProto& default_instance();

  void Swap(ArenaResultProto* other);

  // implements Message ----------------------------------------------

  ArenaResultProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArenaResultProto& from);
  void MergeFrom(const ArenaResultProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .app.message.ArenaEachHeroResult win_hero = 1;
  inline int win_hero_size() const;
  inline void clear_win_hero();
  static const int kWinHeroFieldNumber = 1;
  inline const ::app::message::ArenaEachHeroResult& win_hero(int index) const;
  inline ::app::message::ArenaEachHeroResult* mutable_win_hero(int index);
  inline ::app::message::ArenaEachHeroResult* add_win_hero();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::ArenaEachHeroResult >&
      win_hero() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::ArenaEachHeroResult >*
      mutable_win_hero();

  // repeated .app.message.ArenaEachHeroResult lose_hero = 2;
  inline int lose_hero_size() const;
  inline void clear_lose_hero();
  static const int kLoseHeroFieldNumber = 2;
  inline const ::app::message::ArenaEachHeroResult& lose_hero(int index) const;
  inline ::app::message::ArenaEachHeroResult* mutable_lose_hero(int index);
  inline ::app::message::ArenaEachHeroResult* add_lose_hero();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::ArenaEachHeroResult >&
      lose_hero() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::ArenaEachHeroResult >*
      mutable_lose_hero();

  // optional bool is_draw = 3;
  inline bool has_is_draw() const;
  inline void clear_is_draw();
  static const int kIsDrawFieldNumber = 3;
  inline bool is_draw() const;
  inline void set_is_draw(bool value);

  // optional bytes win_fighting_team_name = 4;
  inline bool has_win_fighting_team_name() const;
  inline void clear_win_fighting_team_name();
  static const int kWinFightingTeamNameFieldNumber = 4;
  inline const ::std::string& win_fighting_team_name() const;
  inline void set_win_fighting_team_name(const ::std::string& value);
  inline void set_win_fighting_team_name(const char* value);
  inline void set_win_fighting_team_name(const void* value, size_t size);
  inline ::std::string* mutable_win_fighting_team_name();
  inline ::std::string* release_win_fighting_team_name();
  inline void set_allocated_win_fighting_team_name(::std::string* win_fighting_team_name);

  // optional bytes lose_fighting_team_name = 5;
  inline bool has_lose_fighting_team_name() const;
  inline void clear_lose_fighting_team_name();
  static const int kLoseFightingTeamNameFieldNumber = 5;
  inline const ::std::string& lose_fighting_team_name() const;
  inline void set_lose_fighting_team_name(const ::std::string& value);
  inline void set_lose_fighting_team_name(const char* value);
  inline void set_lose_fighting_team_name(const void* value, size_t size);
  inline ::std::string* mutable_lose_fighting_team_name();
  inline ::std::string* release_lose_fighting_team_name();
  inline void set_allocated_lose_fighting_team_name(::std::string* lose_fighting_team_name);

  // optional int32 win_fighting_team_pair_point = 6;
  inline bool has_win_fighting_team_pair_point() const;
  inline void clear_win_fighting_team_pair_point();
  static const int kWinFightingTeamPairPointFieldNumber = 6;
  inline ::google::protobuf::int32 win_fighting_team_pair_point() const;
  inline void set_win_fighting_team_pair_point(::google::protobuf::int32 value);

  // optional int32 win_fighting_team_changed_pair_point = 7;
  inline bool has_win_fighting_team_changed_pair_point() const;
  inline void clear_win_fighting_team_changed_pair_point();
  static const int kWinFightingTeamChangedPairPointFieldNumber = 7;
  inline ::google::protobuf::int32 win_fighting_team_changed_pair_point() const;
  inline void set_win_fighting_team_changed_pair_point(::google::protobuf::int32 value);

  // optional int32 lose_fighting_team_pair_point = 8;
  inline bool has_lose_fighting_team_pair_point() const;
  inline void clear_lose_fighting_team_pair_point();
  static const int kLoseFightingTeamPairPointFieldNumber = 8;
  inline ::google::protobuf::int32 lose_fighting_team_pair_point() const;
  inline void set_lose_fighting_team_pair_point(::google::protobuf::int32 value);

  // optional int32 lose_fighting_team_changed_pair_point = 9;
  inline bool has_lose_fighting_team_changed_pair_point() const;
  inline void clear_lose_fighting_team_changed_pair_point();
  static const int kLoseFightingTeamChangedPairPointFieldNumber = 9;
  inline ::google::protobuf::int32 lose_fighting_team_changed_pair_point() const;
  inline void set_lose_fighting_team_changed_pair_point(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:app.message.ArenaResultProto)
 private:
  inline void set_has_is_draw();
  inline void clear_has_is_draw();
  inline void set_has_win_fighting_team_name();
  inline void clear_has_win_fighting_team_name();
  inline void set_has_lose_fighting_team_name();
  inline void clear_has_lose_fighting_team_name();
  inline void set_has_win_fighting_team_pair_point();
  inline void clear_has_win_fighting_team_pair_point();
  inline void set_has_win_fighting_team_changed_pair_point();
  inline void clear_has_win_fighting_team_changed_pair_point();
  inline void set_has_lose_fighting_team_pair_point();
  inline void clear_has_lose_fighting_team_pair_point();
  inline void set_has_lose_fighting_team_changed_pair_point();
  inline void clear_has_lose_fighting_team_changed_pair_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::app::message::ArenaEachHeroResult > win_hero_;
  ::google::protobuf::RepeatedPtrField< ::app::message::ArenaEachHeroResult > lose_hero_;
  ::std::string* win_fighting_team_name_;
  bool is_draw_;
  ::google::protobuf::int32 win_fighting_team_pair_point_;
  ::std::string* lose_fighting_team_name_;
  ::google::protobuf::int32 win_fighting_team_changed_pair_point_;
  ::google::protobuf::int32 lose_fighting_team_pair_point_;
  ::google::protobuf::int32 lose_fighting_team_changed_pair_point_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_dungeon_2eproto();
  friend void protobuf_AssignDesc_dungeon_2eproto();
  friend void protobuf_ShutdownFile_dungeon_2eproto();

  void InitAsDefaultInstance();
  static ArenaResultProto* default_instance_;
};
// -------------------------------------------------------------------

class ArenaEachHeroResult : public ::google::protobuf::Message {
 public:
  ArenaEachHeroResult();
  virtual ~ArenaEachHeroResult();

  ArenaEachHeroResult(const ArenaEachHeroResult& from);

  inline ArenaEachHeroResult& operator=(const ArenaEachHeroResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ArenaEachHeroResult& default_instance();

  void Swap(ArenaEachHeroResult* other);

  // implements Message ----------------------------------------------

  ArenaEachHeroResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ArenaEachHeroResult& from);
  void MergeFrom(const ArenaEachHeroResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 hero_id = 1;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::int64 hero_id() const;
  inline void set_hero_id(::google::protobuf::int64 value);

  // optional string hero_name = 2;
  inline bool has_hero_name() const;
  inline void clear_hero_name();
  static const int kHeroNameFieldNumber = 2;
  inline const ::std::string& hero_name() const;
  inline void set_hero_name(const ::std::string& value);
  inline void set_hero_name(const char* value);
  inline void set_hero_name(const char* value, size_t size);
  inline ::std::string* mutable_hero_name();
  inline ::std::string* release_hero_name();
  inline void set_allocated_hero_name(::std::string* hero_name);

  // optional int32 old_pair_point = 3;
  inline bool has_old_pair_point() const;
  inline void clear_old_pair_point();
  static const int kOldPairPointFieldNumber = 3;
  inline ::google::protobuf::int32 old_pair_point() const;
  inline void set_old_pair_point(::google::protobuf::int32 value);

  // optional sint32 pair_point_change = 4;
  inline bool has_pair_point_change() const;
  inline void clear_pair_point_change();
  static const int kPairPointChangeFieldNumber = 4;
  inline ::google::protobuf::int32 pair_point_change() const;
  inline void set_pair_point_change(::google::protobuf::int32 value);

  // optional int32 win_damage = 5;
  inline bool has_win_damage() const;
  inline void clear_win_damage();
  static const int kWinDamageFieldNumber = 5;
  inline ::google::protobuf::int32 win_damage() const;
  inline void set_win_damage(::google::protobuf::int32 value);

  // optional int32 race_id = 6;
  inline bool has_race_id() const;
  inline void clear_race_id();
  static const int kRaceIdFieldNumber = 6;
  inline ::google::protobuf::int32 race_id() const;
  inline void set_race_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:app.message.ArenaEachHeroResult)
 private:
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_hero_name();
  inline void clear_has_hero_name();
  inline void set_has_old_pair_point();
  inline void clear_has_old_pair_point();
  inline void set_has_pair_point_change();
  inline void clear_has_pair_point_change();
  inline void set_has_win_damage();
  inline void clear_has_win_damage();
  inline void set_has_race_id();
  inline void clear_has_race_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 hero_id_;
  ::std::string* hero_name_;
  ::google::protobuf::int32 old_pair_point_;
  ::google::protobuf::int32 pair_point_change_;
  ::google::protobuf::int32 win_damage_;
  ::google::protobuf::int32 race_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_dungeon_2eproto();
  friend void protobuf_AssignDesc_dungeon_2eproto();
  friend void protobuf_ShutdownFile_dungeon_2eproto();

  void InitAsDefaultInstance();
  static ArenaEachHeroResult* default_instance_;
};
// -------------------------------------------------------------------

class DotaInitInfoProto : public ::google::protobuf::Message {
 public:
  DotaInitInfoProto();
  virtual ~DotaInitInfoProto();

  DotaInitInfoProto(const DotaInitInfoProto& from);

  inline DotaInitInfoProto& operator=(const DotaInitInfoProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DotaInitInfoProto& default_instance();

  void Swap(DotaInitInfoProto* other);

  // implements Message ----------------------------------------------

  DotaInitInfoProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DotaInitInfoProto& from);
  void MergeFrom(const DotaInitInfoProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .app.message.DotaEachHeroInitProto heroes = 1;
  inline int heroes_size() const;
  inline void clear_heroes();
  static const int kHeroesFieldNumber = 1;
  inline const ::app::message::DotaEachHeroInitProto& heroes(int index) const;
  inline ::app::message::DotaEachHeroInitProto* mutable_heroes(int index);
  inline ::app::message::DotaEachHeroInitProto* add_heroes();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::DotaEachHeroInitProto >&
      heroes() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::DotaEachHeroInitProto >*
      mutable_heroes();

  // repeated int64 party_1_tower_id = 2;
  inline int party_1_tower_id_size() const;
  inline void clear_party_1_tower_id();
  static const int kParty1TowerIdFieldNumber = 2;
  inline ::google::protobuf::int64 party_1_tower_id(int index) const;
  inline void set_party_1_tower_id(int index, ::google::protobuf::int64 value);
  inline void add_party_1_tower_id(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      party_1_tower_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_party_1_tower_id();

  // repeated int64 party_2_tower_id = 3;
  inline int party_2_tower_id_size() const;
  inline void clear_party_2_tower_id();
  static const int kParty2TowerIdFieldNumber = 3;
  inline ::google::protobuf::int64 party_2_tower_id(int index) const;
  inline void set_party_2_tower_id(int index, ::google::protobuf::int64 value);
  inline void add_party_2_tower_id(::google::protobuf::int64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      party_2_tower_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_party_2_tower_id();

  // optional int64 party_1_home_id = 4;
  inline bool has_party_1_home_id() const;
  inline void clear_party_1_home_id();
  static const int kParty1HomeIdFieldNumber = 4;
  inline ::google::protobuf::int64 party_1_home_id() const;
  inline void set_party_1_home_id(::google::protobuf::int64 value);

  // optional int64 party_2_home_id = 5;
  inline bool has_party_2_home_id() const;
  inline void clear_party_2_home_id();
  static const int kParty2HomeIdFieldNumber = 5;
  inline ::google::protobuf::int64 party_2_home_id() const;
  inline void set_party_2_home_id(::google::protobuf::int64 value);

  // optional int64 end_time = 6;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 6;
  inline ::google::protobuf::int64 end_time() const;
  inline void set_end_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:app.message.DotaInitInfoProto)
 private:
  inline void set_has_party_1_home_id();
  inline void clear_has_party_1_home_id();
  inline void set_has_party_2_home_id();
  inline void clear_has_party_2_home_id();
  inline void set_has_end_time();
  inline void clear_has_end_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::app::message::DotaEachHeroInitProto > heroes_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > party_1_tower_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > party_2_tower_id_;
  ::google::protobuf::int64 party_1_home_id_;
  ::google::protobuf::int64 party_2_home_id_;
  ::google::protobuf::int64 end_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_dungeon_2eproto();
  friend void protobuf_AssignDesc_dungeon_2eproto();
  friend void protobuf_ShutdownFile_dungeon_2eproto();

  void InitAsDefaultInstance();
  static DotaInitInfoProto* default_instance_;
};
// -------------------------------------------------------------------

class DotaEachHeroInitProto : public ::google::protobuf::Message {
 public:
  DotaEachHeroInitProto();
  virtual ~DotaEachHeroInitProto();

  DotaEachHeroInitProto(const DotaEachHeroInitProto& from);

  inline DotaEachHeroInitProto& operator=(const DotaEachHeroInitProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DotaEachHeroInitProto& default_instance();

  void Swap(DotaEachHeroInitProto* other);

  // implements Message ----------------------------------------------

  DotaEachHeroInitProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DotaEachHeroInitProto& from);
  void MergeFrom(const DotaEachHeroInitProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 hero_id = 1;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::int64 hero_id() const;
  inline void set_hero_id(::google::protobuf::int64 value);

  // optional string hero_name = 2;
  inline bool has_hero_name() const;
  inline void clear_hero_name();
  static const int kHeroNameFieldNumber = 2;
  inline const ::std::string& hero_name() const;
  inline void set_hero_name(const ::std::string& value);
  inline void set_hero_name(const char* value);
  inline void set_hero_name(const char* value, size_t size);
  inline ::std::string* mutable_hero_name();
  inline ::std::string* release_hero_name();
  inline void set_allocated_hero_name(::std::string* hero_name);

  // optional int32 party = 3;
  inline bool has_party() const;
  inline void clear_party();
  static const int kPartyFieldNumber = 3;
  inline ::google::protobuf::int32 party() const;
  inline void set_party(::google::protobuf::int32 value);

  // optional int32 point = 4;
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 4;
  inline ::google::protobuf::int32 point() const;
  inline void set_point(::google::protobuf::int32 value);

  // optional int64 point_change_time = 5;
  inline bool has_point_change_time() const;
  inline void clear_point_change_time();
  static const int kPointChangeTimeFieldNumber = 5;
  inline ::google::protobuf::int64 point_change_time() const;
  inline void set_point_change_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:app.message.DotaEachHeroInitProto)
 private:
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_hero_name();
  inline void clear_has_hero_name();
  inline void set_has_party();
  inline void clear_has_party();
  inline void set_has_point();
  inline void clear_has_point();
  inline void set_has_point_change_time();
  inline void clear_has_point_change_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 hero_id_;
  ::std::string* hero_name_;
  ::google::protobuf::int32 party_;
  ::google::protobuf::int32 point_;
  ::google::protobuf::int64 point_change_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_dungeon_2eproto();
  friend void protobuf_AssignDesc_dungeon_2eproto();
  friend void protobuf_ShutdownFile_dungeon_2eproto();

  void InitAsDefaultInstance();
  static DotaEachHeroInitProto* default_instance_;
};
// -------------------------------------------------------------------

class DotaFinalInfoProto : public ::google::protobuf::Message {
 public:
  DotaFinalInfoProto();
  virtual ~DotaFinalInfoProto();

  DotaFinalInfoProto(const DotaFinalInfoProto& from);

  inline DotaFinalInfoProto& operator=(const DotaFinalInfoProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DotaFinalInfoProto& default_instance();

  void Swap(DotaFinalInfoProto* other);

  // implements Message ----------------------------------------------

  DotaFinalInfoProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DotaFinalInfoProto& from);
  void MergeFrom(const DotaFinalInfoProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .app.message.DotaEachHeroFinalProto party_1_heroes = 1;
  inline int party_1_heroes_size() const;
  inline void clear_party_1_heroes();
  static const int kParty1HeroesFieldNumber = 1;
  inline const ::app::message::DotaEachHeroFinalProto& party_1_heroes(int index) const;
  inline ::app::message::DotaEachHeroFinalProto* mutable_party_1_heroes(int index);
  inline ::app::message::DotaEachHeroFinalProto* add_party_1_heroes();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::DotaEachHeroFinalProto >&
      party_1_heroes() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::DotaEachHeroFinalProto >*
      mutable_party_1_heroes();

  // repeated .app.message.DotaEachHeroFinalProto party_2_heroes = 2;
  inline int party_2_heroes_size() const;
  inline void clear_party_2_heroes();
  static const int kParty2HeroesFieldNumber = 2;
  inline const ::app::message::DotaEachHeroFinalProto& party_2_heroes(int index) const;
  inline ::app::message::DotaEachHeroFinalProto* mutable_party_2_heroes(int index);
  inline ::app::message::DotaEachHeroFinalProto* add_party_2_heroes();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::DotaEachHeroFinalProto >&
      party_2_heroes() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::DotaEachHeroFinalProto >*
      mutable_party_2_heroes();

  // optional int32 result = 3;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 3;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional .app.message.PrizeProto prize = 4;
  inline bool has_prize() const;
  inline void clear_prize();
  static const int kPrizeFieldNumber = 4;
  inline const ::app::message::PrizeProto& prize() const;
  inline ::app::message::PrizeProto* mutable_prize();
  inline ::app::message::PrizeProto* release_prize();
  inline void set_allocated_prize(::app::message::PrizeProto* prize);

  // @@protoc_insertion_point(class_scope:app.message.DotaFinalInfoProto)
 private:
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_prize();
  inline void clear_has_prize();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::app::message::DotaEachHeroFinalProto > party_1_heroes_;
  ::google::protobuf::RepeatedPtrField< ::app::message::DotaEachHeroFinalProto > party_2_heroes_;
  ::app::message::PrizeProto* prize_;
  ::google::protobuf::int32 result_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_dungeon_2eproto();
  friend void protobuf_AssignDesc_dungeon_2eproto();
  friend void protobuf_ShutdownFile_dungeon_2eproto();

  void InitAsDefaultInstance();
  static DotaFinalInfoProto* default_instance_;
};
// -------------------------------------------------------------------

class DotaEachHeroFinalProto : public ::google::protobuf::Message {
 public:
  DotaEachHeroFinalProto();
  virtual ~DotaEachHeroFinalProto();

  DotaEachHeroFinalProto(const DotaEachHeroFinalProto& from);

  inline DotaEachHeroFinalProto& operator=(const DotaEachHeroFinalProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DotaEachHeroFinalProto& default_instance();

  void Swap(DotaEachHeroFinalProto* other);

  // implements Message ----------------------------------------------

  DotaEachHeroFinalProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DotaEachHeroFinalProto& from);
  void MergeFrom(const DotaEachHeroFinalProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 hero_id = 1;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::int64 hero_id() const;
  inline void set_hero_id(::google::protobuf::int64 value);

  // optional string hero_name = 2;
  inline bool has_hero_name() const;
  inline void clear_hero_name();
  static const int kHeroNameFieldNumber = 2;
  inline const ::std::string& hero_name() const;
  inline void set_hero_name(const ::std::string& value);
  inline void set_hero_name(const char* value);
  inline void set_hero_name(const char* value, size_t size);
  inline ::std::string* mutable_hero_name();
  inline ::std::string* release_hero_name();
  inline void set_allocated_hero_name(::std::string* hero_name);

  // optional int32 point = 3;
  inline bool has_point() const;
  inline void clear_point();
  static const int kPointFieldNumber = 3;
  inline ::google::protobuf::int32 point() const;
  inline void set_point(::google::protobuf::int32 value);

  // optional int32 kill_count = 4;
  inline bool has_kill_count() const;
  inline void clear_kill_count();
  static const int kKillCountFieldNumber = 4;
  inline ::google::protobuf::int32 kill_count() const;
  inline void set_kill_count(::google::protobuf::int32 value);

  // optional int32 dead_count = 5;
  inline bool has_dead_count() const;
  inline void clear_dead_count();
  static const int kDeadCountFieldNumber = 5;
  inline ::google::protobuf::int32 dead_count() const;
  inline void set_dead_count(::google::protobuf::int32 value);

  // optional int32 level = 6;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 6;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:app.message.DotaEachHeroFinalProto)
 private:
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_hero_name();
  inline void clear_has_hero_name();
  inline void set_has_point();
  inline void clear_has_point();
  inline void set_has_kill_count();
  inline void clear_has_kill_count();
  inline void set_has_dead_count();
  inline void clear_has_dead_count();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 hero_id_;
  ::std::string* hero_name_;
  ::google::protobuf::int32 point_;
  ::google::protobuf::int32 kill_count_;
  ::google::protobuf::int32 dead_count_;
  ::google::protobuf::int32 level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_dungeon_2eproto();
  friend void protobuf_AssignDesc_dungeon_2eproto();
  friend void protobuf_ShutdownFile_dungeon_2eproto();

  void InitAsDefaultInstance();
  static DotaEachHeroFinalProto* default_instance_;
};
// -------------------------------------------------------------------

class HtzWorldRecordProto : public ::google::protobuf::Message {
 public:
  HtzWorldRecordProto();
  virtual ~HtzWorldRecordProto();

  HtzWorldRecordProto(const HtzWorldRecordProto& from);

  inline HtzWorldRecordProto& operator=(const HtzWorldRecordProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HtzWorldRecordProto& default_instance();

  void Swap(HtzWorldRecordProto* other);

  // implements Message ----------------------------------------------

  HtzWorldRecordProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HtzWorldRecordProto& from);
  void MergeFrom(const HtzWorldRecordProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .app.message.HtzTimeRecordProto time_record = 1;
  inline bool has_time_record() const;
  inline void clear_time_record();
  static const int kTimeRecordFieldNumber = 1;
  inline const ::app::message::HtzTimeRecordProto& time_record() const;
  inline ::app::message::HtzTimeRecordProto* mutable_time_record();
  inline ::app::message::HtzTimeRecordProto* release_time_record();
  inline void set_allocated_time_record(::app::message::HtzTimeRecordProto* time_record);

  // optional .app.message.HtzDestroyRecordProto destroy_record = 2;
  inline bool has_destroy_record() const;
  inline void clear_destroy_record();
  static const int kDestroyRecordFieldNumber = 2;
  inline const ::app::message::HtzDestroyRecordProto& destroy_record() const;
  inline ::app::message::HtzDestroyRecordProto* mutable_destroy_record();
  inline ::app::message::HtzDestroyRecordProto* release_destroy_record();
  inline void set_allocated_destroy_record(::app::message::HtzDestroyRecordProto* destroy_record);

  // @@protoc_insertion_point(class_scope:app.message.HtzWorldRecordProto)
 private:
  inline void set_has_time_record();
  inline void clear_has_time_record();
  inline void set_has_destroy_record();
  inline void clear_has_destroy_record();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::app::message::HtzTimeRecordProto* time_record_;
  ::app::message::HtzDestroyRecordProto* destroy_record_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_dungeon_2eproto();
  friend void protobuf_AssignDesc_dungeon_2eproto();
  friend void protobuf_ShutdownFile_dungeon_2eproto();

  void InitAsDefaultInstance();
  static HtzWorldRecordProto* default_instance_;
};
// -------------------------------------------------------------------

class HtzTimeRecordProto : public ::google::protobuf::Message {
 public:
  HtzTimeRecordProto();
  virtual ~HtzTimeRecordProto();

  HtzTimeRecordProto(const HtzTimeRecordProto& from);

  inline HtzTimeRecordProto& operator=(const HtzTimeRecordProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HtzTimeRecordProto& default_instance();

  void Swap(HtzTimeRecordProto* other);

  // implements Message ----------------------------------------------

  HtzTimeRecordProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HtzTimeRecordProto& from);
  void MergeFrom(const HtzTimeRecordProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int64 time = 3;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 3;
  inline ::google::protobuf::int64 time() const;
  inline void set_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:app.message.HtzTimeRecordProto)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_time();
  inline void clear_has_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::std::string* name_;
  ::google::protobuf::int64 time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_dungeon_2eproto();
  friend void protobuf_AssignDesc_dungeon_2eproto();
  friend void protobuf_ShutdownFile_dungeon_2eproto();

  void InitAsDefaultInstance();
  static HtzTimeRecordProto* default_instance_;
};
// -------------------------------------------------------------------

class HtzDestroyRecordProto : public ::google::protobuf::Message {
 public:
  HtzDestroyRecordProto();
  virtual ~HtzDestroyRecordProto();

  HtzDestroyRecordProto(const HtzDestroyRecordProto& from);

  inline HtzDestroyRecordProto& operator=(const HtzDestroyRecordProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HtzDestroyRecordProto& default_instance();

  void Swap(HtzDestroyRecordProto* other);

  // implements Message ----------------------------------------------

  HtzDestroyRecordProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HtzDestroyRecordProto& from);
  void MergeFrom(const HtzDestroyRecordProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional int32 max_destory = 3;
  inline bool has_max_destory() const;
  inline void clear_max_destory();
  static const int kMaxDestoryFieldNumber = 3;
  inline ::google::protobuf::int32 max_destory() const;
  inline void set_max_destory(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:app.message.HtzDestroyRecordProto)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_max_destory();
  inline void clear_has_max_destory();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::std::string* name_;
  ::google::protobuf::int32 max_destory_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_dungeon_2eproto();
  friend void protobuf_AssignDesc_dungeon_2eproto();
  friend void protobuf_ShutdownFile_dungeon_2eproto();

  void InitAsDefaultInstance();
  static HtzDestroyRecordProto* default_instance_;
};
// -------------------------------------------------------------------

class WuLinProto : public ::google::protobuf::Message {
 public:
  WuLinProto();
  virtual ~WuLinProto();

  WuLinProto(const WuLinProto& from);

  inline WuLinProto& operator=(const WuLinProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WuLinProto& default_instance();

  void Swap(WuLinProto* other);

  // implements Message ----------------------------------------------

  WuLinProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WuLinProto& from);
  void MergeFrom(const WuLinProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 group_match_time = 1;
  inline bool has_group_match_time() const;
  inline void clear_group_match_time();
  static const int kGroupMatchTimeFieldNumber = 1;
  inline ::google::protobuf::int64 group_match_time() const;
  inline void set_group_match_time(::google::protobuf::int64 value);

  // repeated .app.message.WuLinGroupProto group = 2;
  inline int group_size() const;
  inline void clear_group();
  static const int kGroupFieldNumber = 2;
  inline const ::app::message::WuLinGroupProto& group(int index) const;
  inline ::app::message::WuLinGroupProto* mutable_group(int index);
  inline ::app::message::WuLinGroupProto* add_group();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::WuLinGroupProto >&
      group() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::WuLinGroupProto >*
      mutable_group();

  // repeated .app.message.WuLinMatchProto match_16 = 3;
  inline int match_16_size() const;
  inline void clear_match_16();
  static const int kMatch16FieldNumber = 3;
  inline const ::app::message::WuLinMatchProto& match_16(int index) const;
  inline ::app::message::WuLinMatchProto* mutable_match_16(int index);
  inline ::app::message::WuLinMatchProto* add_match_16();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::WuLinMatchProto >&
      match_16() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::WuLinMatchProto >*
      mutable_match_16();

  // repeated .app.message.WuLinMatchProto match_8 = 4;
  inline int match_8_size() const;
  inline void clear_match_8();
  static const int kMatch8FieldNumber = 4;
  inline const ::app::message::WuLinMatchProto& match_8(int index) const;
  inline ::app::message::WuLinMatchProto* mutable_match_8(int index);
  inline ::app::message::WuLinMatchProto* add_match_8();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::WuLinMatchProto >&
      match_8() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::WuLinMatchProto >*
      mutable_match_8();

  // repeated .app.message.WuLinMatchProto match_4 = 5;
  inline int match_4_size() const;
  inline void clear_match_4();
  static const int kMatch4FieldNumber = 5;
  inline const ::app::message::WuLinMatchProto& match_4(int index) const;
  inline ::app::message::WuLinMatchProto* mutable_match_4(int index);
  inline ::app::message::WuLinMatchProto* add_match_4();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::WuLinMatchProto >&
      match_4() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::WuLinMatchProto >*
      mutable_match_4();

  // repeated .app.message.WuLinMatchProto match_2 = 6;
  inline int match_2_size() const;
  inline void clear_match_2();
  static const int kMatch2FieldNumber = 6;
  inline const ::app::message::WuLinMatchProto& match_2(int index) const;
  inline ::app::message::WuLinMatchProto* mutable_match_2(int index);
  inline ::app::message::WuLinMatchProto* add_match_2();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::WuLinMatchProto >&
      match_2() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::WuLinMatchProto >*
      mutable_match_2();

  // @@protoc_insertion_point(class_scope:app.message.WuLinProto)
 private:
  inline void set_has_group_match_time();
  inline void clear_has_group_match_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 group_match_time_;
  ::google::protobuf::RepeatedPtrField< ::app::message::WuLinGroupProto > group_;
  ::google::protobuf::RepeatedPtrField< ::app::message::WuLinMatchProto > match_16_;
  ::google::protobuf::RepeatedPtrField< ::app::message::WuLinMatchProto > match_8_;
  ::google::protobuf::RepeatedPtrField< ::app::message::WuLinMatchProto > match_4_;
  ::google::protobuf::RepeatedPtrField< ::app::message::WuLinMatchProto > match_2_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_dungeon_2eproto();
  friend void protobuf_AssignDesc_dungeon_2eproto();
  friend void protobuf_ShutdownFile_dungeon_2eproto();

  void InitAsDefaultInstance();
  static WuLinProto* default_instance_;
};
// -------------------------------------------------------------------

class WuLinGroupProto : public ::google::protobuf::Message {
 public:
  WuLinGroupProto();
  virtual ~WuLinGroupProto();

  WuLinGroupProto(const WuLinGroupProto& from);

  inline WuLinGroupProto& operator=(const WuLinGroupProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WuLinGroupProto& default_instance();

  void Swap(WuLinGroupProto* other);

  // implements Message ----------------------------------------------

  WuLinGroupProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WuLinGroupProto& from);
  void MergeFrom(const WuLinGroupProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .app.message.WuLinHeroProto hero_a = 1;
  inline int hero_a_size() const;
  inline void clear_hero_a();
  static const int kHeroAFieldNumber = 1;
  inline const ::app::message::WuLinHeroProto& hero_a(int index) const;
  inline ::app::message::WuLinHeroProto* mutable_hero_a(int index);
  inline ::app::message::WuLinHeroProto* add_hero_a();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::WuLinHeroProto >&
      hero_a() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::WuLinHeroProto >*
      mutable_hero_a();

  // repeated .app.message.WuLinMatchProto match_a = 2;
  inline int match_a_size() const;
  inline void clear_match_a();
  static const int kMatchAFieldNumber = 2;
  inline const ::app::message::WuLinMatchProto& match_a(int index) const;
  inline ::app::message::WuLinMatchProto* mutable_match_a(int index);
  inline ::app::message::WuLinMatchProto* add_match_a();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::WuLinMatchProto >&
      match_a() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::WuLinMatchProto >*
      mutable_match_a();

  // repeated .app.message.WuLinHeroProto hero_b = 3;
  inline int hero_b_size() const;
  inline void clear_hero_b();
  static const int kHeroBFieldNumber = 3;
  inline const ::app::message::WuLinHeroProto& hero_b(int index) const;
  inline ::app::message::WuLinHeroProto* mutable_hero_b(int index);
  inline ::app::message::WuLinHeroProto* add_hero_b();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::WuLinHeroProto >&
      hero_b() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::WuLinHeroProto >*
      mutable_hero_b();

  // repeated .app.message.WuLinMatchProto match_b = 4;
  inline int match_b_size() const;
  inline void clear_match_b();
  static const int kMatchBFieldNumber = 4;
  inline const ::app::message::WuLinMatchProto& match_b(int index) const;
  inline ::app::message::WuLinMatchProto* mutable_match_b(int index);
  inline ::app::message::WuLinMatchProto* add_match_b();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::WuLinMatchProto >&
      match_b() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::WuLinMatchProto >*
      mutable_match_b();

  // @@protoc_insertion_point(class_scope:app.message.WuLinGroupProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::app::message::WuLinHeroProto > hero_a_;
  ::google::protobuf::RepeatedPtrField< ::app::message::WuLinMatchProto > match_a_;
  ::google::protobuf::RepeatedPtrField< ::app::message::WuLinHeroProto > hero_b_;
  ::google::protobuf::RepeatedPtrField< ::app::message::WuLinMatchProto > match_b_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_dungeon_2eproto();
  friend void protobuf_AssignDesc_dungeon_2eproto();
  friend void protobuf_ShutdownFile_dungeon_2eproto();

  void InitAsDefaultInstance();
  static WuLinGroupProto* default_instance_;
};
// -------------------------------------------------------------------

class WuLinMatchProto : public ::google::protobuf::Message {
 public:
  WuLinMatchProto();
  virtual ~WuLinMatchProto();

  WuLinMatchProto(const WuLinMatchProto& from);

  inline WuLinMatchProto& operator=(const WuLinMatchProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WuLinMatchProto& default_instance();

  void Swap(WuLinMatchProto* other);

  // implements Message ----------------------------------------------

  WuLinMatchProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WuLinMatchProto& from);
  void MergeFrom(const WuLinMatchProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 start_time = 1;
  inline bool has_start_time() const;
  inline void clear_start_time();
  static const int kStartTimeFieldNumber = 1;
  inline ::google::protobuf::int64 start_time() const;
  inline void set_start_time(::google::protobuf::int64 value);

  // optional int64 end_time = 10;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 10;
  inline ::google::protobuf::int64 end_time() const;
  inline void set_end_time(::google::protobuf::int64 value);

  // optional int32 result = 8;
  inline bool has_result() const;
  inline void clear_result();
  static const int kResultFieldNumber = 8;
  inline ::google::protobuf::int32 result() const;
  inline void set_result(::google::protobuf::int32 value);

  // optional int32 match_id = 9;
  inline bool has_match_id() const;
  inline void clear_match_id();
  static const int kMatchIdFieldNumber = 9;
  inline ::google::protobuf::int32 match_id() const;
  inline void set_match_id(::google::protobuf::int32 value);

  // optional .app.message.WuLinHeroProto hero_1 = 2;
  inline bool has_hero_1() const;
  inline void clear_hero_1();
  static const int kHero1FieldNumber = 2;
  inline const ::app::message::WuLinHeroProto& hero_1() const;
  inline ::app::message::WuLinHeroProto* mutable_hero_1();
  inline ::app::message::WuLinHeroProto* release_hero_1();
  inline void set_allocated_hero_1(::app::message::WuLinHeroProto* hero_1);

  // optional .app.message.WuLinHeroProto hero_2 = 3;
  inline bool has_hero_2() const;
  inline void clear_hero_2();
  static const int kHero2FieldNumber = 3;
  inline const ::app::message::WuLinHeroProto& hero_2() const;
  inline ::app::message::WuLinHeroProto* mutable_hero_2();
  inline ::app::message::WuLinHeroProto* release_hero_2();
  inline void set_allocated_hero_2(::app::message::WuLinHeroProto* hero_2);

  // optional int32 uuid = 4;
  inline bool has_uuid() const;
  inline void clear_uuid();
  static const int kUuidFieldNumber = 4;
  inline ::google::protobuf::int32 uuid() const;
  inline void set_uuid(::google::protobuf::int32 value);

  // optional int64 combat_server_id = 5;
  inline bool has_combat_server_id() const;
  inline void clear_combat_server_id();
  static const int kCombatServerIdFieldNumber = 5;
  inline ::google::protobuf::int64 combat_server_id() const;
  inline void set_combat_server_id(::google::protobuf::int64 value);

  // optional .app.message.WuLinMatchType match_type = 6;
  inline bool has_match_type() const;
  inline void clear_match_type();
  static const int kMatchTypeFieldNumber = 6;
  inline ::app::message::WuLinMatchType match_type() const;
  inline void set_match_type(::app::message::WuLinMatchType value);

  // @@protoc_insertion_point(class_scope:app.message.WuLinMatchProto)
 private:
  inline void set_has_start_time();
  inline void clear_has_start_time();
  inline void set_has_end_time();
  inline void clear_has_end_time();
  inline void set_has_result();
  inline void clear_has_result();
  inline void set_has_match_id();
  inline void clear_has_match_id();
  inline void set_has_hero_1();
  inline void clear_has_hero_1();
  inline void set_has_hero_2();
  inline void clear_has_hero_2();
  inline void set_has_uuid();
  inline void clear_has_uuid();
  inline void set_has_combat_server_id();
  inline void clear_has_combat_server_id();
  inline void set_has_match_type();
  inline void clear_has_match_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 start_time_;
  ::google::protobuf::int64 end_time_;
  ::google::protobuf::int32 result_;
  ::google::protobuf::int32 match_id_;
  ::app::message::WuLinHeroProto* hero_1_;
  ::app::message::WuLinHeroProto* hero_2_;
  ::google::protobuf::int64 combat_server_id_;
  ::google::protobuf::int32 uuid_;
  int match_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_dungeon_2eproto();
  friend void protobuf_AssignDesc_dungeon_2eproto();
  friend void protobuf_ShutdownFile_dungeon_2eproto();

  void InitAsDefaultInstance();
  static WuLinMatchProto* default_instance_;
};
// -------------------------------------------------------------------

class WuLinHeroProto : public ::google::protobuf::Message {
 public:
  WuLinHeroProto();
  virtual ~WuLinHeroProto();

  WuLinHeroProto(const WuLinHeroProto& from);

  inline WuLinHeroProto& operator=(const WuLinHeroProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WuLinHeroProto& default_instance();

  void Swap(WuLinHeroProto* other);

  // implements Message ----------------------------------------------

  WuLinHeroProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WuLinHeroProto& from);
  void MergeFrom(const WuLinHeroProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 hero_id = 1;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::int64 hero_id() const;
  inline void set_hero_id(::google::protobuf::int64 value);

  // optional int32 hero_race = 2;
  inline bool has_hero_race() const;
  inline void clear_hero_race();
  static const int kHeroRaceFieldNumber = 2;
  inline ::google::protobuf::int32 hero_race() const;
  inline void set_hero_race(::google::protobuf::int32 value);

  // optional string hero_name = 3;
  inline bool has_hero_name() const;
  inline void clear_hero_name();
  static const int kHeroNameFieldNumber = 3;
  inline const ::std::string& hero_name() const;
  inline void set_hero_name(const ::std::string& value);
  inline void set_hero_name(const char* value);
  inline void set_hero_name(const char* value, size_t size);
  inline ::std::string* mutable_hero_name();
  inline ::std::string* release_hero_name();
  inline void set_allocated_hero_name(::std::string* hero_name);

  // optional int32 pair_point = 4;
  inline bool has_pair_point() const;
  inline void clear_pair_point();
  static const int kPairPointFieldNumber = 4;
  inline ::google::protobuf::int32 pair_point() const;
  inline void set_pair_point(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:app.message.WuLinHeroProto)
 private:
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_hero_race();
  inline void clear_has_hero_race();
  inline void set_has_hero_name();
  inline void clear_has_hero_name();
  inline void set_has_pair_point();
  inline void clear_has_pair_point();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 hero_id_;
  ::std::string* hero_name_;
  ::google::protobuf::int32 hero_race_;
  ::google::protobuf::int32 pair_point_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_dungeon_2eproto();
  friend void protobuf_AssignDesc_dungeon_2eproto();
  friend void protobuf_ShutdownFile_dungeon_2eproto();

  void InitAsDefaultInstance();
  static WuLinHeroProto* default_instance_;
};
// -------------------------------------------------------------------

class WuLinMatchResultProto : public ::google::protobuf::Message {
 public:
  WuLinMatchResultProto();
  virtual ~WuLinMatchResultProto();

  WuLinMatchResultProto(const WuLinMatchResultProto& from);

  inline WuLinMatchResultProto& operator=(const WuLinMatchResultProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WuLinMatchResultProto& default_instance();

  void Swap(WuLinMatchResultProto* other);

  // implements Message ----------------------------------------------

  WuLinMatchResultProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WuLinMatchResultProto& from);
  void MergeFrom(const WuLinMatchResultProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 win_hero_id = 1;
  inline bool has_win_hero_id() const;
  inline void clear_win_hero_id();
  static const int kWinHeroIdFieldNumber = 1;
  inline ::google::protobuf::int64 win_hero_id() const;
  inline void set_win_hero_id(::google::protobuf::int64 value);

  // optional string win_hero_name = 2;
  inline bool has_win_hero_name() const;
  inline void clear_win_hero_name();
  static const int kWinHeroNameFieldNumber = 2;
  inline const ::std::string& win_hero_name() const;
  inline void set_win_hero_name(const ::std::string& value);
  inline void set_win_hero_name(const char* value);
  inline void set_win_hero_name(const char* value, size_t size);
  inline ::std::string* mutable_win_hero_name();
  inline ::std::string* release_win_hero_name();
  inline void set_allocated_win_hero_name(::std::string* win_hero_name);

  // optional int32 win_hero_damage = 3;
  inline bool has_win_hero_damage() const;
  inline void clear_win_hero_damage();
  static const int kWinHeroDamageFieldNumber = 3;
  inline ::google::protobuf::int32 win_hero_damage() const;
  inline void set_win_hero_damage(::google::protobuf::int32 value);

  // optional int64 lose_hero_id = 4;
  inline bool has_lose_hero_id() const;
  inline void clear_lose_hero_id();
  static const int kLoseHeroIdFieldNumber = 4;
  inline ::google::protobuf::int64 lose_hero_id() const;
  inline void set_lose_hero_id(::google::protobuf::int64 value);

  // optional string lose_hero_name = 5;
  inline bool has_lose_hero_name() const;
  inline void clear_lose_hero_name();
  static const int kLoseHeroNameFieldNumber = 5;
  inline const ::std::string& lose_hero_name() const;
  inline void set_lose_hero_name(const ::std::string& value);
  inline void set_lose_hero_name(const char* value);
  inline void set_lose_hero_name(const char* value, size_t size);
  inline ::std::string* mutable_lose_hero_name();
  inline ::std::string* release_lose_hero_name();
  inline void set_allocated_lose_hero_name(::std::string* lose_hero_name);

  // optional int32 lose_hero_damage = 6;
  inline bool has_lose_hero_damage() const;
  inline void clear_lose_hero_damage();
  static const int kLoseHeroDamageFieldNumber = 6;
  inline ::google::protobuf::int32 lose_hero_damage() const;
  inline void set_lose_hero_damage(::google::protobuf::int32 value);

  // optional .app.message.WuLinMatchType match_type = 7;
  inline bool has_match_type() const;
  inline void clear_match_type();
  static const int kMatchTypeFieldNumber = 7;
  inline ::app::message::WuLinMatchType match_type() const;
  inline void set_match_type(::app::message::WuLinMatchType value);

  // @@protoc_insertion_point(class_scope:app.message.WuLinMatchResultProto)
 private:
  inline void set_has_win_hero_id();
  inline void clear_has_win_hero_id();
  inline void set_has_win_hero_name();
  inline void clear_has_win_hero_name();
  inline void set_has_win_hero_damage();
  inline void clear_has_win_hero_damage();
  inline void set_has_lose_hero_id();
  inline void clear_has_lose_hero_id();
  inline void set_has_lose_hero_name();
  inline void clear_has_lose_hero_name();
  inline void set_has_lose_hero_damage();
  inline void clear_has_lose_hero_damage();
  inline void set_has_match_type();
  inline void clear_has_match_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 win_hero_id_;
  ::std::string* win_hero_name_;
  ::google::protobuf::int64 lose_hero_id_;
  ::google::protobuf::int32 win_hero_damage_;
  ::google::protobuf::int32 lose_hero_damage_;
  ::std::string* lose_hero_name_;
  int match_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_dungeon_2eproto();
  friend void protobuf_AssignDesc_dungeon_2eproto();
  friend void protobuf_ShutdownFile_dungeon_2eproto();

  void InitAsDefaultInstance();
  static WuLinMatchResultProto* default_instance_;
};
// -------------------------------------------------------------------

class MeleeInitProto : public ::google::protobuf::Message {
 public:
  MeleeInitProto();
  virtual ~MeleeInitProto();

  MeleeInitProto(const MeleeInitProto& from);

  inline MeleeInitProto& operator=(const MeleeInitProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MeleeInitProto& default_instance();

  void Swap(MeleeInitProto* other);

  // implements Message ----------------------------------------------

  MeleeInitProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MeleeInitProto& from);
  void MergeFrom(const MeleeInitProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .app.message.MeleeEachHeroInfoProto heroes = 1;
  inline int heroes_size() const;
  inline void clear_heroes();
  static const int kHeroesFieldNumber = 1;
  inline const ::app::message::MeleeEachHeroInfoProto& heroes(int index) const;
  inline ::app::message::MeleeEachHeroInfoProto* mutable_heroes(int index);
  inline ::app::message::MeleeEachHeroInfoProto* add_heroes();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::MeleeEachHeroInfoProto >&
      heroes() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::MeleeEachHeroInfoProto >*
      mutable_heroes();

  // optional int64 battle_start_time = 2;
  inline bool has_battle_start_time() const;
  inline void clear_battle_start_time();
  static const int kBattleStartTimeFieldNumber = 2;
  inline ::google::protobuf::int64 battle_start_time() const;
  inline void set_battle_start_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:app.message.MeleeInitProto)
 private:
  inline void set_has_battle_start_time();
  inline void clear_has_battle_start_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::app::message::MeleeEachHeroInfoProto > heroes_;
  ::google::protobuf::int64 battle_start_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_dungeon_2eproto();
  friend void protobuf_AssignDesc_dungeon_2eproto();
  friend void protobuf_ShutdownFile_dungeon_2eproto();

  void InitAsDefaultInstance();
  static MeleeInitProto* default_instance_;
};
// -------------------------------------------------------------------

class MeleeEachHeroInfoProto : public ::google::protobuf::Message {
 public:
  MeleeEachHeroInfoProto();
  virtual ~MeleeEachHeroInfoProto();

  MeleeEachHeroInfoProto(const MeleeEachHeroInfoProto& from);

  inline MeleeEachHeroInfoProto& operator=(const MeleeEachHeroInfoProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MeleeEachHeroInfoProto& default_instance();

  void Swap(MeleeEachHeroInfoProto* other);

  // implements Message ----------------------------------------------

  MeleeEachHeroInfoProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MeleeEachHeroInfoProto& from);
  void MergeFrom(const MeleeEachHeroInfoProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 hero_id = 1;
  inline bool has_hero_id() const;
  inline void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  inline ::google::protobuf::int64 hero_id() const;
  inline void set_hero_id(::google::protobuf::int64 value);

  // optional string hero_name = 2;
  inline bool has_hero_name() const;
  inline void clear_hero_name();
  static const int kHeroNameFieldNumber = 2;
  inline const ::std::string& hero_name() const;
  inline void set_hero_name(const ::std::string& value);
  inline void set_hero_name(const char* value);
  inline void set_hero_name(const char* value, size_t size);
  inline ::std::string* mutable_hero_name();
  inline ::std::string* release_hero_name();
  inline void set_allocated_hero_name(::std::string* hero_name);

  // optional int32 kill = 3;
  inline bool has_kill() const;
  inline void clear_kill();
  static const int kKillFieldNumber = 3;
  inline ::google::protobuf::int32 kill() const;
  inline void set_kill(::google::protobuf::int32 value);

  // optional int32 assist = 4;
  inline bool has_assist() const;
  inline void clear_assist();
  static const int kAssistFieldNumber = 4;
  inline ::google::protobuf::int32 assist() const;
  inline void set_assist(::google::protobuf::int32 value);

  // optional int64 kill_change_time = 5;
  inline bool has_kill_change_time() const;
  inline void clear_kill_change_time();
  static const int kKillChangeTimeFieldNumber = 5;
  inline ::google::protobuf::int64 kill_change_time() const;
  inline void set_kill_change_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:app.message.MeleeEachHeroInfoProto)
 private:
  inline void set_has_hero_id();
  inline void clear_has_hero_id();
  inline void set_has_hero_name();
  inline void clear_has_hero_name();
  inline void set_has_kill();
  inline void clear_has_kill();
  inline void set_has_assist();
  inline void clear_has_assist();
  inline void set_has_kill_change_time();
  inline void clear_has_kill_change_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 hero_id_;
  ::std::string* hero_name_;
  ::google::protobuf::int32 kill_;
  ::google::protobuf::int32 assist_;
  ::google::protobuf::int64 kill_change_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_dungeon_2eproto();
  friend void protobuf_AssignDesc_dungeon_2eproto();
  friend void protobuf_ShutdownFile_dungeon_2eproto();

  void InitAsDefaultInstance();
  static MeleeEachHeroInfoProto* default_instance_;
};
// -------------------------------------------------------------------

class MeleeFinalInfoProto : public ::google::protobuf::Message {
 public:
  MeleeFinalInfoProto();
  virtual ~MeleeFinalInfoProto();

  MeleeFinalInfoProto(const MeleeFinalInfoProto& from);

  inline MeleeFinalInfoProto& operator=(const MeleeFinalInfoProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MeleeFinalInfoProto& default_instance();

  void Swap(MeleeFinalInfoProto* other);

  // implements Message ----------------------------------------------

  MeleeFinalInfoProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MeleeFinalInfoProto& from);
  void MergeFrom(const MeleeFinalInfoProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .app.message.MeleeEachHeroInfoProto heroes = 1;
  inline int heroes_size() const;
  inline void clear_heroes();
  static const int kHeroesFieldNumber = 1;
  inline const ::app::message::MeleeEachHeroInfoProto& heroes(int index) const;
  inline ::app::message::MeleeEachHeroInfoProto* mutable_heroes(int index);
  inline ::app::message::MeleeEachHeroInfoProto* add_heroes();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::MeleeEachHeroInfoProto >&
      heroes() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::MeleeEachHeroInfoProto >*
      mutable_heroes();

  // optional int64 win_hero_id = 2;
  inline bool has_win_hero_id() const;
  inline void clear_win_hero_id();
  static const int kWinHeroIdFieldNumber = 2;
  inline ::google::protobuf::int64 win_hero_id() const;
  inline void set_win_hero_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:app.message.MeleeFinalInfoProto)
 private:
  inline void set_has_win_hero_id();
  inline void clear_has_win_hero_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::app::message::MeleeEachHeroInfoProto > heroes_;
  ::google::protobuf::int64 win_hero_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_dungeon_2eproto();
  friend void protobuf_AssignDesc_dungeon_2eproto();
  friend void protobuf_ShutdownFile_dungeon_2eproto();

  void InitAsDefaultInstance();
  static MeleeFinalInfoProto* default_instance_;
};
// ===================================================================


// ===================================================================

// DungeonBatchInfoProto

// optional int32 batch_number = 1;
inline bool DungeonBatchInfoProto::has_batch_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DungeonBatchInfoProto::set_has_batch_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DungeonBatchInfoProto::clear_has_batch_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DungeonBatchInfoProto::clear_batch_number() {
  batch_number_ = 0;
  clear_has_batch_number();
}
inline ::google::protobuf::int32 DungeonBatchInfoProto::batch_number() const {
  return batch_number_;
}
inline void DungeonBatchInfoProto::set_batch_number(::google::protobuf::int32 value) {
  set_has_batch_number();
  batch_number_ = value;
}

// optional int32 current_monster_type_id = 2;
inline bool DungeonBatchInfoProto::has_current_monster_type_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DungeonBatchInfoProto::set_has_current_monster_type_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DungeonBatchInfoProto::clear_has_current_monster_type_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DungeonBatchInfoProto::clear_current_monster_type_id() {
  current_monster_type_id_ = 0;
  clear_has_current_monster_type_id();
}
inline ::google::protobuf::int32 DungeonBatchInfoProto::current_monster_type_id() const {
  return current_monster_type_id_;
}
inline void DungeonBatchInfoProto::set_current_monster_type_id(::google::protobuf::int32 value) {
  set_has_current_monster_type_id();
  current_monster_type_id_ = value;
}

// optional int32 next_monster_type_id = 3;
inline bool DungeonBatchInfoProto::has_next_monster_type_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DungeonBatchInfoProto::set_has_next_monster_type_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DungeonBatchInfoProto::clear_has_next_monster_type_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DungeonBatchInfoProto::clear_next_monster_type_id() {
  next_monster_type_id_ = 0;
  clear_has_next_monster_type_id();
}
inline ::google::protobuf::int32 DungeonBatchInfoProto::next_monster_type_id() const {
  return next_monster_type_id_;
}
inline void DungeonBatchInfoProto::set_next_monster_type_id(::google::protobuf::int32 value) {
  set_has_next_monster_type_id();
  next_monster_type_id_ = value;
}

// optional .app.message.PrizeProto current_batch_prize = 4;
inline bool DungeonBatchInfoProto::has_current_batch_prize() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DungeonBatchInfoProto::set_has_current_batch_prize() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DungeonBatchInfoProto::clear_has_current_batch_prize() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DungeonBatchInfoProto::clear_current_batch_prize() {
  if (current_batch_prize_ != NULL) current_batch_prize_->::app::message::PrizeProto::Clear();
  clear_has_current_batch_prize();
}
inline const ::app::message::PrizeProto& DungeonBatchInfoProto::current_batch_prize() const {
  return current_batch_prize_ != NULL ? *current_batch_prize_ : *default_instance_->current_batch_prize_;
}
inline ::app::message::PrizeProto* DungeonBatchInfoProto::mutable_current_batch_prize() {
  set_has_current_batch_prize();
  if (current_batch_prize_ == NULL) current_batch_prize_ = new ::app::message::PrizeProto;
  return current_batch_prize_;
}
inline ::app::message::PrizeProto* DungeonBatchInfoProto::release_current_batch_prize() {
  clear_has_current_batch_prize();
  ::app::message::PrizeProto* temp = current_batch_prize_;
  current_batch_prize_ = NULL;
  return temp;
}
inline void DungeonBatchInfoProto::set_allocated_current_batch_prize(::app::message::PrizeProto* current_batch_prize) {
  delete current_batch_prize_;
  current_batch_prize_ = current_batch_prize;
  if (current_batch_prize) {
    set_has_current_batch_prize();
  } else {
    clear_has_current_batch_prize();
  }
}

// optional int64 expire_duration = 5;
inline bool DungeonBatchInfoProto::has_expire_duration() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DungeonBatchInfoProto::set_has_expire_duration() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DungeonBatchInfoProto::clear_has_expire_duration() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DungeonBatchInfoProto::clear_expire_duration() {
  expire_duration_ = GOOGLE_LONGLONG(0);
  clear_has_expire_duration();
}
inline ::google::protobuf::int64 DungeonBatchInfoProto::expire_duration() const {
  return expire_duration_;
}
inline void DungeonBatchInfoProto::set_expire_duration(::google::protobuf::int64 value) {
  set_has_expire_duration();
  expire_duration_ = value;
}

// -------------------------------------------------------------------

// DamageRecordProto

// repeated int64 hero_id = 1;
inline int DamageRecordProto::hero_id_size() const {
  return hero_id_.size();
}
inline void DamageRecordProto::clear_hero_id() {
  hero_id_.Clear();
}
inline ::google::protobuf::int64 DamageRecordProto::hero_id(int index) const {
  return hero_id_.Get(index);
}
inline void DamageRecordProto::set_hero_id(int index, ::google::protobuf::int64 value) {
  hero_id_.Set(index, value);
}
inline void DamageRecordProto::add_hero_id(::google::protobuf::int64 value) {
  hero_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
DamageRecordProto::hero_id() const {
  return hero_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
DamageRecordProto::mutable_hero_id() {
  return &hero_id_;
}

// repeated bytes hero_name = 2;
inline int DamageRecordProto::hero_name_size() const {
  return hero_name_.size();
}
inline void DamageRecordProto::clear_hero_name() {
  hero_name_.Clear();
}
inline const ::std::string& DamageRecordProto::hero_name(int index) const {
  return hero_name_.Get(index);
}
inline ::std::string* DamageRecordProto::mutable_hero_name(int index) {
  return hero_name_.Mutable(index);
}
inline void DamageRecordProto::set_hero_name(int index, const ::std::string& value) {
  hero_name_.Mutable(index)->assign(value);
}
inline void DamageRecordProto::set_hero_name(int index, const char* value) {
  hero_name_.Mutable(index)->assign(value);
}
inline void DamageRecordProto::set_hero_name(int index, const void* value, size_t size) {
  hero_name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DamageRecordProto::add_hero_name() {
  return hero_name_.Add();
}
inline void DamageRecordProto::add_hero_name(const ::std::string& value) {
  hero_name_.Add()->assign(value);
}
inline void DamageRecordProto::add_hero_name(const char* value) {
  hero_name_.Add()->assign(value);
}
inline void DamageRecordProto::add_hero_name(const void* value, size_t size) {
  hero_name_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DamageRecordProto::hero_name() const {
  return hero_name_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DamageRecordProto::mutable_hero_name() {
  return &hero_name_;
}

// repeated int64 damage_divided_by_1000 = 3;
inline int DamageRecordProto::damage_divided_by_1000_size() const {
  return damage_divided_by_1000_.size();
}
inline void DamageRecordProto::clear_damage_divided_by_1000() {
  damage_divided_by_1000_.Clear();
}
inline ::google::protobuf::int64 DamageRecordProto::damage_divided_by_1000(int index) const {
  return damage_divided_by_1000_.Get(index);
}
inline void DamageRecordProto::set_damage_divided_by_1000(int index, ::google::protobuf::int64 value) {
  damage_divided_by_1000_.Set(index, value);
}
inline void DamageRecordProto::add_damage_divided_by_1000(::google::protobuf::int64 value) {
  damage_divided_by_1000_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
DamageRecordProto::damage_divided_by_1000() const {
  return damage_divided_by_1000_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
DamageRecordProto::mutable_damage_divided_by_1000() {
  return &damage_divided_by_1000_;
}

// repeated bool is_offline = 4;
inline int DamageRecordProto::is_offline_size() const {
  return is_offline_.size();
}
inline void DamageRecordProto::clear_is_offline() {
  is_offline_.Clear();
}
inline bool DamageRecordProto::is_offline(int index) const {
  return is_offline_.Get(index);
}
inline void DamageRecordProto::set_is_offline(int index, bool value) {
  is_offline_.Set(index, value);
}
inline void DamageRecordProto::add_is_offline(bool value) {
  is_offline_.Add(value);
}
inline const ::google::protobuf::RepeatedField< bool >&
DamageRecordProto::is_offline() const {
  return is_offline_;
}
inline ::google::protobuf::RepeatedField< bool >*
DamageRecordProto::mutable_is_offline() {
  return &is_offline_;
}

// -------------------------------------------------------------------

// GroupDungeonFinishStatProto

// optional int32 total_time = 1;
inline bool GroupDungeonFinishStatProto::has_total_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupDungeonFinishStatProto::set_has_total_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupDungeonFinishStatProto::clear_has_total_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupDungeonFinishStatProto::clear_total_time() {
  total_time_ = 0;
  clear_has_total_time();
}
inline ::google::protobuf::int32 GroupDungeonFinishStatProto::total_time() const {
  return total_time_;
}
inline void GroupDungeonFinishStatProto::set_total_time(::google::protobuf::int32 value) {
  set_has_total_time();
  total_time_ = value;
}

// optional int32 dead_count = 2;
inline bool GroupDungeonFinishStatProto::has_dead_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupDungeonFinishStatProto::set_has_dead_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupDungeonFinishStatProto::clear_has_dead_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupDungeonFinishStatProto::clear_dead_count() {
  dead_count_ = 0;
  clear_has_dead_count();
}
inline ::google::protobuf::int32 GroupDungeonFinishStatProto::dead_count() const {
  return dead_count_;
}
inline void GroupDungeonFinishStatProto::set_dead_count(::google::protobuf::int32 value) {
  set_has_dead_count();
  dead_count_ = value;
}

// optional int32 monster_exp = 3;
inline bool GroupDungeonFinishStatProto::has_monster_exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupDungeonFinishStatProto::set_has_monster_exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupDungeonFinishStatProto::clear_has_monster_exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupDungeonFinishStatProto::clear_monster_exp() {
  monster_exp_ = 0;
  clear_has_monster_exp();
}
inline ::google::protobuf::int32 GroupDungeonFinishStatProto::monster_exp() const {
  return monster_exp_;
}
inline void GroupDungeonFinishStatProto::set_monster_exp(::google::protobuf::int32 value) {
  set_has_monster_exp();
  monster_exp_ = value;
}

// optional int32 score = 4;
inline bool GroupDungeonFinishStatProto::has_score() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GroupDungeonFinishStatProto::set_has_score() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GroupDungeonFinishStatProto::clear_has_score() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GroupDungeonFinishStatProto::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 GroupDungeonFinishStatProto::score() const {
  return score_;
}
inline void GroupDungeonFinishStatProto::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
}

// repeated .app.message.GoodsWrapperProto score_s_prize = 5;
inline int GroupDungeonFinishStatProto::score_s_prize_size() const {
  return score_s_prize_.size();
}
inline void GroupDungeonFinishStatProto::clear_score_s_prize() {
  score_s_prize_.Clear();
}
inline const ::app::message::GoodsWrapperProto& GroupDungeonFinishStatProto::score_s_prize(int index) const {
  return score_s_prize_.Get(index);
}
inline ::app::message::GoodsWrapperProto* GroupDungeonFinishStatProto::mutable_score_s_prize(int index) {
  return score_s_prize_.Mutable(index);
}
inline ::app::message::GoodsWrapperProto* GroupDungeonFinishStatProto::add_score_s_prize() {
  return score_s_prize_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto >&
GroupDungeonFinishStatProto::score_s_prize() const {
  return score_s_prize_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto >*
GroupDungeonFinishStatProto::mutable_score_s_prize() {
  return &score_s_prize_;
}

// repeated .app.message.GoodsWrapperProto vip_prize = 6;
inline int GroupDungeonFinishStatProto::vip_prize_size() const {
  return vip_prize_.size();
}
inline void GroupDungeonFinishStatProto::clear_vip_prize() {
  vip_prize_.Clear();
}
inline const ::app::message::GoodsWrapperProto& GroupDungeonFinishStatProto::vip_prize(int index) const {
  return vip_prize_.Get(index);
}
inline ::app::message::GoodsWrapperProto* GroupDungeonFinishStatProto::mutable_vip_prize(int index) {
  return vip_prize_.Mutable(index);
}
inline ::app::message::GoodsWrapperProto* GroupDungeonFinishStatProto::add_vip_prize() {
  return vip_prize_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto >&
GroupDungeonFinishStatProto::vip_prize() const {
  return vip_prize_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto >*
GroupDungeonFinishStatProto::mutable_vip_prize() {
  return &vip_prize_;
}

// -------------------------------------------------------------------

// GroupDungeonCollectablePrizeProto

// optional int32 dungeon_id = 1;
inline bool GroupDungeonCollectablePrizeProto::has_dungeon_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupDungeonCollectablePrizeProto::set_has_dungeon_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupDungeonCollectablePrizeProto::clear_has_dungeon_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupDungeonCollectablePrizeProto::clear_dungeon_id() {
  dungeon_id_ = 0;
  clear_has_dungeon_id();
}
inline ::google::protobuf::int32 GroupDungeonCollectablePrizeProto::dungeon_id() const {
  return dungeon_id_;
}
inline void GroupDungeonCollectablePrizeProto::set_dungeon_id(::google::protobuf::int32 value) {
  set_has_dungeon_id();
  dungeon_id_ = value;
}

// optional bool no_score_s_prize = 2;
inline bool GroupDungeonCollectablePrizeProto::has_no_score_s_prize() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupDungeonCollectablePrizeProto::set_has_no_score_s_prize() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupDungeonCollectablePrizeProto::clear_has_no_score_s_prize() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupDungeonCollectablePrizeProto::clear_no_score_s_prize() {
  no_score_s_prize_ = false;
  clear_has_no_score_s_prize();
}
inline bool GroupDungeonCollectablePrizeProto::no_score_s_prize() const {
  return no_score_s_prize_;
}
inline void GroupDungeonCollectablePrizeProto::set_no_score_s_prize(bool value) {
  set_has_no_score_s_prize();
  no_score_s_prize_ = value;
}

// optional int64 expire_time = 4;
inline bool GroupDungeonCollectablePrizeProto::has_expire_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupDungeonCollectablePrizeProto::set_has_expire_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupDungeonCollectablePrizeProto::clear_has_expire_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupDungeonCollectablePrizeProto::clear_expire_time() {
  expire_time_ = GOOGLE_LONGLONG(0);
  clear_has_expire_time();
}
inline ::google::protobuf::int64 GroupDungeonCollectablePrizeProto::expire_time() const {
  return expire_time_;
}
inline void GroupDungeonCollectablePrizeProto::set_expire_time(::google::protobuf::int64 value) {
  set_has_expire_time();
  expire_time_ = value;
}

// optional bytes randomed_s_prize = 5;
inline bool GroupDungeonCollectablePrizeProto::has_randomed_s_prize() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GroupDungeonCollectablePrizeProto::set_has_randomed_s_prize() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GroupDungeonCollectablePrizeProto::clear_has_randomed_s_prize() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GroupDungeonCollectablePrizeProto::clear_randomed_s_prize() {
  if (randomed_s_prize_ != &::google::protobuf::internal::kEmptyString) {
    randomed_s_prize_->clear();
  }
  clear_has_randomed_s_prize();
}
inline const ::std::string& GroupDungeonCollectablePrizeProto::randomed_s_prize() const {
  return *randomed_s_prize_;
}
inline void GroupDungeonCollectablePrizeProto::set_randomed_s_prize(const ::std::string& value) {
  set_has_randomed_s_prize();
  if (randomed_s_prize_ == &::google::protobuf::internal::kEmptyString) {
    randomed_s_prize_ = new ::std::string;
  }
  randomed_s_prize_->assign(value);
}
inline void GroupDungeonCollectablePrizeProto::set_randomed_s_prize(const char* value) {
  set_has_randomed_s_prize();
  if (randomed_s_prize_ == &::google::protobuf::internal::kEmptyString) {
    randomed_s_prize_ = new ::std::string;
  }
  randomed_s_prize_->assign(value);
}
inline void GroupDungeonCollectablePrizeProto::set_randomed_s_prize(const void* value, size_t size) {
  set_has_randomed_s_prize();
  if (randomed_s_prize_ == &::google::protobuf::internal::kEmptyString) {
    randomed_s_prize_ = new ::std::string;
  }
  randomed_s_prize_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GroupDungeonCollectablePrizeProto::mutable_randomed_s_prize() {
  set_has_randomed_s_prize();
  if (randomed_s_prize_ == &::google::protobuf::internal::kEmptyString) {
    randomed_s_prize_ = new ::std::string;
  }
  return randomed_s_prize_;
}
inline ::std::string* GroupDungeonCollectablePrizeProto::release_randomed_s_prize() {
  clear_has_randomed_s_prize();
  if (randomed_s_prize_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = randomed_s_prize_;
    randomed_s_prize_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GroupDungeonCollectablePrizeProto::set_allocated_randomed_s_prize(::std::string* randomed_s_prize) {
  if (randomed_s_prize_ != &::google::protobuf::internal::kEmptyString) {
    delete randomed_s_prize_;
  }
  if (randomed_s_prize) {
    set_has_randomed_s_prize();
    randomed_s_prize_ = randomed_s_prize;
  } else {
    clear_has_randomed_s_prize();
    randomed_s_prize_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes randomed_vip_prize = 6;
inline bool GroupDungeonCollectablePrizeProto::has_randomed_vip_prize() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GroupDungeonCollectablePrizeProto::set_has_randomed_vip_prize() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GroupDungeonCollectablePrizeProto::clear_has_randomed_vip_prize() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GroupDungeonCollectablePrizeProto::clear_randomed_vip_prize() {
  if (randomed_vip_prize_ != &::google::protobuf::internal::kEmptyString) {
    randomed_vip_prize_->clear();
  }
  clear_has_randomed_vip_prize();
}
inline const ::std::string& GroupDungeonCollectablePrizeProto::randomed_vip_prize() const {
  return *randomed_vip_prize_;
}
inline void GroupDungeonCollectablePrizeProto::set_randomed_vip_prize(const ::std::string& value) {
  set_has_randomed_vip_prize();
  if (randomed_vip_prize_ == &::google::protobuf::internal::kEmptyString) {
    randomed_vip_prize_ = new ::std::string;
  }
  randomed_vip_prize_->assign(value);
}
inline void GroupDungeonCollectablePrizeProto::set_randomed_vip_prize(const char* value) {
  set_has_randomed_vip_prize();
  if (randomed_vip_prize_ == &::google::protobuf::internal::kEmptyString) {
    randomed_vip_prize_ = new ::std::string;
  }
  randomed_vip_prize_->assign(value);
}
inline void GroupDungeonCollectablePrizeProto::set_randomed_vip_prize(const void* value, size_t size) {
  set_has_randomed_vip_prize();
  if (randomed_vip_prize_ == &::google::protobuf::internal::kEmptyString) {
    randomed_vip_prize_ = new ::std::string;
  }
  randomed_vip_prize_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GroupDungeonCollectablePrizeProto::mutable_randomed_vip_prize() {
  set_has_randomed_vip_prize();
  if (randomed_vip_prize_ == &::google::protobuf::internal::kEmptyString) {
    randomed_vip_prize_ = new ::std::string;
  }
  return randomed_vip_prize_;
}
inline ::std::string* GroupDungeonCollectablePrizeProto::release_randomed_vip_prize() {
  clear_has_randomed_vip_prize();
  if (randomed_vip_prize_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = randomed_vip_prize_;
    randomed_vip_prize_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GroupDungeonCollectablePrizeProto::set_allocated_randomed_vip_prize(::std::string* randomed_vip_prize) {
  if (randomed_vip_prize_ != &::google::protobuf::internal::kEmptyString) {
    delete randomed_vip_prize_;
  }
  if (randomed_vip_prize) {
    set_has_randomed_vip_prize();
    randomed_vip_prize_ = randomed_vip_prize;
  } else {
    clear_has_randomed_vip_prize();
    randomed_vip_prize_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// ArenaResultProto

// repeated .app.message.ArenaEachHeroResult win_hero = 1;
inline int ArenaResultProto::win_hero_size() const {
  return win_hero_.size();
}
inline void ArenaResultProto::clear_win_hero() {
  win_hero_.Clear();
}
inline const ::app::message::ArenaEachHeroResult& ArenaResultProto::win_hero(int index) const {
  return win_hero_.Get(index);
}
inline ::app::message::ArenaEachHeroResult* ArenaResultProto::mutable_win_hero(int index) {
  return win_hero_.Mutable(index);
}
inline ::app::message::ArenaEachHeroResult* ArenaResultProto::add_win_hero() {
  return win_hero_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::ArenaEachHeroResult >&
ArenaResultProto::win_hero() const {
  return win_hero_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::ArenaEachHeroResult >*
ArenaResultProto::mutable_win_hero() {
  return &win_hero_;
}

// repeated .app.message.ArenaEachHeroResult lose_hero = 2;
inline int ArenaResultProto::lose_hero_size() const {
  return lose_hero_.size();
}
inline void ArenaResultProto::clear_lose_hero() {
  lose_hero_.Clear();
}
inline const ::app::message::ArenaEachHeroResult& ArenaResultProto::lose_hero(int index) const {
  return lose_hero_.Get(index);
}
inline ::app::message::ArenaEachHeroResult* ArenaResultProto::mutable_lose_hero(int index) {
  return lose_hero_.Mutable(index);
}
inline ::app::message::ArenaEachHeroResult* ArenaResultProto::add_lose_hero() {
  return lose_hero_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::ArenaEachHeroResult >&
ArenaResultProto::lose_hero() const {
  return lose_hero_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::ArenaEachHeroResult >*
ArenaResultProto::mutable_lose_hero() {
  return &lose_hero_;
}

// optional bool is_draw = 3;
inline bool ArenaResultProto::has_is_draw() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ArenaResultProto::set_has_is_draw() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ArenaResultProto::clear_has_is_draw() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ArenaResultProto::clear_is_draw() {
  is_draw_ = false;
  clear_has_is_draw();
}
inline bool ArenaResultProto::is_draw() const {
  return is_draw_;
}
inline void ArenaResultProto::set_is_draw(bool value) {
  set_has_is_draw();
  is_draw_ = value;
}

// optional bytes win_fighting_team_name = 4;
inline bool ArenaResultProto::has_win_fighting_team_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ArenaResultProto::set_has_win_fighting_team_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ArenaResultProto::clear_has_win_fighting_team_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ArenaResultProto::clear_win_fighting_team_name() {
  if (win_fighting_team_name_ != &::google::protobuf::internal::kEmptyString) {
    win_fighting_team_name_->clear();
  }
  clear_has_win_fighting_team_name();
}
inline const ::std::string& ArenaResultProto::win_fighting_team_name() const {
  return *win_fighting_team_name_;
}
inline void ArenaResultProto::set_win_fighting_team_name(const ::std::string& value) {
  set_has_win_fighting_team_name();
  if (win_fighting_team_name_ == &::google::protobuf::internal::kEmptyString) {
    win_fighting_team_name_ = new ::std::string;
  }
  win_fighting_team_name_->assign(value);
}
inline void ArenaResultProto::set_win_fighting_team_name(const char* value) {
  set_has_win_fighting_team_name();
  if (win_fighting_team_name_ == &::google::protobuf::internal::kEmptyString) {
    win_fighting_team_name_ = new ::std::string;
  }
  win_fighting_team_name_->assign(value);
}
inline void ArenaResultProto::set_win_fighting_team_name(const void* value, size_t size) {
  set_has_win_fighting_team_name();
  if (win_fighting_team_name_ == &::google::protobuf::internal::kEmptyString) {
    win_fighting_team_name_ = new ::std::string;
  }
  win_fighting_team_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ArenaResultProto::mutable_win_fighting_team_name() {
  set_has_win_fighting_team_name();
  if (win_fighting_team_name_ == &::google::protobuf::internal::kEmptyString) {
    win_fighting_team_name_ = new ::std::string;
  }
  return win_fighting_team_name_;
}
inline ::std::string* ArenaResultProto::release_win_fighting_team_name() {
  clear_has_win_fighting_team_name();
  if (win_fighting_team_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = win_fighting_team_name_;
    win_fighting_team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ArenaResultProto::set_allocated_win_fighting_team_name(::std::string* win_fighting_team_name) {
  if (win_fighting_team_name_ != &::google::protobuf::internal::kEmptyString) {
    delete win_fighting_team_name_;
  }
  if (win_fighting_team_name) {
    set_has_win_fighting_team_name();
    win_fighting_team_name_ = win_fighting_team_name;
  } else {
    clear_has_win_fighting_team_name();
    win_fighting_team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes lose_fighting_team_name = 5;
inline bool ArenaResultProto::has_lose_fighting_team_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ArenaResultProto::set_has_lose_fighting_team_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ArenaResultProto::clear_has_lose_fighting_team_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ArenaResultProto::clear_lose_fighting_team_name() {
  if (lose_fighting_team_name_ != &::google::protobuf::internal::kEmptyString) {
    lose_fighting_team_name_->clear();
  }
  clear_has_lose_fighting_team_name();
}
inline const ::std::string& ArenaResultProto::lose_fighting_team_name() const {
  return *lose_fighting_team_name_;
}
inline void ArenaResultProto::set_lose_fighting_team_name(const ::std::string& value) {
  set_has_lose_fighting_team_name();
  if (lose_fighting_team_name_ == &::google::protobuf::internal::kEmptyString) {
    lose_fighting_team_name_ = new ::std::string;
  }
  lose_fighting_team_name_->assign(value);
}
inline void ArenaResultProto::set_lose_fighting_team_name(const char* value) {
  set_has_lose_fighting_team_name();
  if (lose_fighting_team_name_ == &::google::protobuf::internal::kEmptyString) {
    lose_fighting_team_name_ = new ::std::string;
  }
  lose_fighting_team_name_->assign(value);
}
inline void ArenaResultProto::set_lose_fighting_team_name(const void* value, size_t size) {
  set_has_lose_fighting_team_name();
  if (lose_fighting_team_name_ == &::google::protobuf::internal::kEmptyString) {
    lose_fighting_team_name_ = new ::std::string;
  }
  lose_fighting_team_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ArenaResultProto::mutable_lose_fighting_team_name() {
  set_has_lose_fighting_team_name();
  if (lose_fighting_team_name_ == &::google::protobuf::internal::kEmptyString) {
    lose_fighting_team_name_ = new ::std::string;
  }
  return lose_fighting_team_name_;
}
inline ::std::string* ArenaResultProto::release_lose_fighting_team_name() {
  clear_has_lose_fighting_team_name();
  if (lose_fighting_team_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = lose_fighting_team_name_;
    lose_fighting_team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ArenaResultProto::set_allocated_lose_fighting_team_name(::std::string* lose_fighting_team_name) {
  if (lose_fighting_team_name_ != &::google::protobuf::internal::kEmptyString) {
    delete lose_fighting_team_name_;
  }
  if (lose_fighting_team_name) {
    set_has_lose_fighting_team_name();
    lose_fighting_team_name_ = lose_fighting_team_name;
  } else {
    clear_has_lose_fighting_team_name();
    lose_fighting_team_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 win_fighting_team_pair_point = 6;
inline bool ArenaResultProto::has_win_fighting_team_pair_point() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ArenaResultProto::set_has_win_fighting_team_pair_point() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ArenaResultProto::clear_has_win_fighting_team_pair_point() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ArenaResultProto::clear_win_fighting_team_pair_point() {
  win_fighting_team_pair_point_ = 0;
  clear_has_win_fighting_team_pair_point();
}
inline ::google::protobuf::int32 ArenaResultProto::win_fighting_team_pair_point() const {
  return win_fighting_team_pair_point_;
}
inline void ArenaResultProto::set_win_fighting_team_pair_point(::google::protobuf::int32 value) {
  set_has_win_fighting_team_pair_point();
  win_fighting_team_pair_point_ = value;
}

// optional int32 win_fighting_team_changed_pair_point = 7;
inline bool ArenaResultProto::has_win_fighting_team_changed_pair_point() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ArenaResultProto::set_has_win_fighting_team_changed_pair_point() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ArenaResultProto::clear_has_win_fighting_team_changed_pair_point() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ArenaResultProto::clear_win_fighting_team_changed_pair_point() {
  win_fighting_team_changed_pair_point_ = 0;
  clear_has_win_fighting_team_changed_pair_point();
}
inline ::google::protobuf::int32 ArenaResultProto::win_fighting_team_changed_pair_point() const {
  return win_fighting_team_changed_pair_point_;
}
inline void ArenaResultProto::set_win_fighting_team_changed_pair_point(::google::protobuf::int32 value) {
  set_has_win_fighting_team_changed_pair_point();
  win_fighting_team_changed_pair_point_ = value;
}

// optional int32 lose_fighting_team_pair_point = 8;
inline bool ArenaResultProto::has_lose_fighting_team_pair_point() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ArenaResultProto::set_has_lose_fighting_team_pair_point() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ArenaResultProto::clear_has_lose_fighting_team_pair_point() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ArenaResultProto::clear_lose_fighting_team_pair_point() {
  lose_fighting_team_pair_point_ = 0;
  clear_has_lose_fighting_team_pair_point();
}
inline ::google::protobuf::int32 ArenaResultProto::lose_fighting_team_pair_point() const {
  return lose_fighting_team_pair_point_;
}
inline void ArenaResultProto::set_lose_fighting_team_pair_point(::google::protobuf::int32 value) {
  set_has_lose_fighting_team_pair_point();
  lose_fighting_team_pair_point_ = value;
}

// optional int32 lose_fighting_team_changed_pair_point = 9;
inline bool ArenaResultProto::has_lose_fighting_team_changed_pair_point() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ArenaResultProto::set_has_lose_fighting_team_changed_pair_point() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ArenaResultProto::clear_has_lose_fighting_team_changed_pair_point() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ArenaResultProto::clear_lose_fighting_team_changed_pair_point() {
  lose_fighting_team_changed_pair_point_ = 0;
  clear_has_lose_fighting_team_changed_pair_point();
}
inline ::google::protobuf::int32 ArenaResultProto::lose_fighting_team_changed_pair_point() const {
  return lose_fighting_team_changed_pair_point_;
}
inline void ArenaResultProto::set_lose_fighting_team_changed_pair_point(::google::protobuf::int32 value) {
  set_has_lose_fighting_team_changed_pair_point();
  lose_fighting_team_changed_pair_point_ = value;
}

// -------------------------------------------------------------------

// ArenaEachHeroResult

// optional int64 hero_id = 1;
inline bool ArenaEachHeroResult::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ArenaEachHeroResult::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ArenaEachHeroResult::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ArenaEachHeroResult::clear_hero_id() {
  hero_id_ = GOOGLE_LONGLONG(0);
  clear_has_hero_id();
}
inline ::google::protobuf::int64 ArenaEachHeroResult::hero_id() const {
  return hero_id_;
}
inline void ArenaEachHeroResult::set_hero_id(::google::protobuf::int64 value) {
  set_has_hero_id();
  hero_id_ = value;
}

// optional string hero_name = 2;
inline bool ArenaEachHeroResult::has_hero_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ArenaEachHeroResult::set_has_hero_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ArenaEachHeroResult::clear_has_hero_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ArenaEachHeroResult::clear_hero_name() {
  if (hero_name_ != &::google::protobuf::internal::kEmptyString) {
    hero_name_->clear();
  }
  clear_has_hero_name();
}
inline const ::std::string& ArenaEachHeroResult::hero_name() const {
  return *hero_name_;
}
inline void ArenaEachHeroResult::set_hero_name(const ::std::string& value) {
  set_has_hero_name();
  if (hero_name_ == &::google::protobuf::internal::kEmptyString) {
    hero_name_ = new ::std::string;
  }
  hero_name_->assign(value);
}
inline void ArenaEachHeroResult::set_hero_name(const char* value) {
  set_has_hero_name();
  if (hero_name_ == &::google::protobuf::internal::kEmptyString) {
    hero_name_ = new ::std::string;
  }
  hero_name_->assign(value);
}
inline void ArenaEachHeroResult::set_hero_name(const char* value, size_t size) {
  set_has_hero_name();
  if (hero_name_ == &::google::protobuf::internal::kEmptyString) {
    hero_name_ = new ::std::string;
  }
  hero_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ArenaEachHeroResult::mutable_hero_name() {
  set_has_hero_name();
  if (hero_name_ == &::google::protobuf::internal::kEmptyString) {
    hero_name_ = new ::std::string;
  }
  return hero_name_;
}
inline ::std::string* ArenaEachHeroResult::release_hero_name() {
  clear_has_hero_name();
  if (hero_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = hero_name_;
    hero_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ArenaEachHeroResult::set_allocated_hero_name(::std::string* hero_name) {
  if (hero_name_ != &::google::protobuf::internal::kEmptyString) {
    delete hero_name_;
  }
  if (hero_name) {
    set_has_hero_name();
    hero_name_ = hero_name;
  } else {
    clear_has_hero_name();
    hero_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 old_pair_point = 3;
inline bool ArenaEachHeroResult::has_old_pair_point() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ArenaEachHeroResult::set_has_old_pair_point() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ArenaEachHeroResult::clear_has_old_pair_point() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ArenaEachHeroResult::clear_old_pair_point() {
  old_pair_point_ = 0;
  clear_has_old_pair_point();
}
inline ::google::protobuf::int32 ArenaEachHeroResult::old_pair_point() const {
  return old_pair_point_;
}
inline void ArenaEachHeroResult::set_old_pair_point(::google::protobuf::int32 value) {
  set_has_old_pair_point();
  old_pair_point_ = value;
}

// optional sint32 pair_point_change = 4;
inline bool ArenaEachHeroResult::has_pair_point_change() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ArenaEachHeroResult::set_has_pair_point_change() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ArenaEachHeroResult::clear_has_pair_point_change() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ArenaEachHeroResult::clear_pair_point_change() {
  pair_point_change_ = 0;
  clear_has_pair_point_change();
}
inline ::google::protobuf::int32 ArenaEachHeroResult::pair_point_change() const {
  return pair_point_change_;
}
inline void ArenaEachHeroResult::set_pair_point_change(::google::protobuf::int32 value) {
  set_has_pair_point_change();
  pair_point_change_ = value;
}

// optional int32 win_damage = 5;
inline bool ArenaEachHeroResult::has_win_damage() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ArenaEachHeroResult::set_has_win_damage() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ArenaEachHeroResult::clear_has_win_damage() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ArenaEachHeroResult::clear_win_damage() {
  win_damage_ = 0;
  clear_has_win_damage();
}
inline ::google::protobuf::int32 ArenaEachHeroResult::win_damage() const {
  return win_damage_;
}
inline void ArenaEachHeroResult::set_win_damage(::google::protobuf::int32 value) {
  set_has_win_damage();
  win_damage_ = value;
}

// optional int32 race_id = 6;
inline bool ArenaEachHeroResult::has_race_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ArenaEachHeroResult::set_has_race_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ArenaEachHeroResult::clear_has_race_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ArenaEachHeroResult::clear_race_id() {
  race_id_ = 0;
  clear_has_race_id();
}
inline ::google::protobuf::int32 ArenaEachHeroResult::race_id() const {
  return race_id_;
}
inline void ArenaEachHeroResult::set_race_id(::google::protobuf::int32 value) {
  set_has_race_id();
  race_id_ = value;
}

// -------------------------------------------------------------------

// DotaInitInfoProto

// repeated .app.message.DotaEachHeroInitProto heroes = 1;
inline int DotaInitInfoProto::heroes_size() const {
  return heroes_.size();
}
inline void DotaInitInfoProto::clear_heroes() {
  heroes_.Clear();
}
inline const ::app::message::DotaEachHeroInitProto& DotaInitInfoProto::heroes(int index) const {
  return heroes_.Get(index);
}
inline ::app::message::DotaEachHeroInitProto* DotaInitInfoProto::mutable_heroes(int index) {
  return heroes_.Mutable(index);
}
inline ::app::message::DotaEachHeroInitProto* DotaInitInfoProto::add_heroes() {
  return heroes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::DotaEachHeroInitProto >&
DotaInitInfoProto::heroes() const {
  return heroes_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::DotaEachHeroInitProto >*
DotaInitInfoProto::mutable_heroes() {
  return &heroes_;
}

// repeated int64 party_1_tower_id = 2;
inline int DotaInitInfoProto::party_1_tower_id_size() const {
  return party_1_tower_id_.size();
}
inline void DotaInitInfoProto::clear_party_1_tower_id() {
  party_1_tower_id_.Clear();
}
inline ::google::protobuf::int64 DotaInitInfoProto::party_1_tower_id(int index) const {
  return party_1_tower_id_.Get(index);
}
inline void DotaInitInfoProto::set_party_1_tower_id(int index, ::google::protobuf::int64 value) {
  party_1_tower_id_.Set(index, value);
}
inline void DotaInitInfoProto::add_party_1_tower_id(::google::protobuf::int64 value) {
  party_1_tower_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
DotaInitInfoProto::party_1_tower_id() const {
  return party_1_tower_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
DotaInitInfoProto::mutable_party_1_tower_id() {
  return &party_1_tower_id_;
}

// repeated int64 party_2_tower_id = 3;
inline int DotaInitInfoProto::party_2_tower_id_size() const {
  return party_2_tower_id_.size();
}
inline void DotaInitInfoProto::clear_party_2_tower_id() {
  party_2_tower_id_.Clear();
}
inline ::google::protobuf::int64 DotaInitInfoProto::party_2_tower_id(int index) const {
  return party_2_tower_id_.Get(index);
}
inline void DotaInitInfoProto::set_party_2_tower_id(int index, ::google::protobuf::int64 value) {
  party_2_tower_id_.Set(index, value);
}
inline void DotaInitInfoProto::add_party_2_tower_id(::google::protobuf::int64 value) {
  party_2_tower_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
DotaInitInfoProto::party_2_tower_id() const {
  return party_2_tower_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
DotaInitInfoProto::mutable_party_2_tower_id() {
  return &party_2_tower_id_;
}

// optional int64 party_1_home_id = 4;
inline bool DotaInitInfoProto::has_party_1_home_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DotaInitInfoProto::set_has_party_1_home_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DotaInitInfoProto::clear_has_party_1_home_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DotaInitInfoProto::clear_party_1_home_id() {
  party_1_home_id_ = GOOGLE_LONGLONG(0);
  clear_has_party_1_home_id();
}
inline ::google::protobuf::int64 DotaInitInfoProto::party_1_home_id() const {
  return party_1_home_id_;
}
inline void DotaInitInfoProto::set_party_1_home_id(::google::protobuf::int64 value) {
  set_has_party_1_home_id();
  party_1_home_id_ = value;
}

// optional int64 party_2_home_id = 5;
inline bool DotaInitInfoProto::has_party_2_home_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DotaInitInfoProto::set_has_party_2_home_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DotaInitInfoProto::clear_has_party_2_home_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DotaInitInfoProto::clear_party_2_home_id() {
  party_2_home_id_ = GOOGLE_LONGLONG(0);
  clear_has_party_2_home_id();
}
inline ::google::protobuf::int64 DotaInitInfoProto::party_2_home_id() const {
  return party_2_home_id_;
}
inline void DotaInitInfoProto::set_party_2_home_id(::google::protobuf::int64 value) {
  set_has_party_2_home_id();
  party_2_home_id_ = value;
}

// optional int64 end_time = 6;
inline bool DotaInitInfoProto::has_end_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DotaInitInfoProto::set_has_end_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DotaInitInfoProto::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DotaInitInfoProto::clear_end_time() {
  end_time_ = GOOGLE_LONGLONG(0);
  clear_has_end_time();
}
inline ::google::protobuf::int64 DotaInitInfoProto::end_time() const {
  return end_time_;
}
inline void DotaInitInfoProto::set_end_time(::google::protobuf::int64 value) {
  set_has_end_time();
  end_time_ = value;
}

// -------------------------------------------------------------------

// DotaEachHeroInitProto

// optional int64 hero_id = 1;
inline bool DotaEachHeroInitProto::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DotaEachHeroInitProto::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DotaEachHeroInitProto::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DotaEachHeroInitProto::clear_hero_id() {
  hero_id_ = GOOGLE_LONGLONG(0);
  clear_has_hero_id();
}
inline ::google::protobuf::int64 DotaEachHeroInitProto::hero_id() const {
  return hero_id_;
}
inline void DotaEachHeroInitProto::set_hero_id(::google::protobuf::int64 value) {
  set_has_hero_id();
  hero_id_ = value;
}

// optional string hero_name = 2;
inline bool DotaEachHeroInitProto::has_hero_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DotaEachHeroInitProto::set_has_hero_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DotaEachHeroInitProto::clear_has_hero_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DotaEachHeroInitProto::clear_hero_name() {
  if (hero_name_ != &::google::protobuf::internal::kEmptyString) {
    hero_name_->clear();
  }
  clear_has_hero_name();
}
inline const ::std::string& DotaEachHeroInitProto::hero_name() const {
  return *hero_name_;
}
inline void DotaEachHeroInitProto::set_hero_name(const ::std::string& value) {
  set_has_hero_name();
  if (hero_name_ == &::google::protobuf::internal::kEmptyString) {
    hero_name_ = new ::std::string;
  }
  hero_name_->assign(value);
}
inline void DotaEachHeroInitProto::set_hero_name(const char* value) {
  set_has_hero_name();
  if (hero_name_ == &::google::protobuf::internal::kEmptyString) {
    hero_name_ = new ::std::string;
  }
  hero_name_->assign(value);
}
inline void DotaEachHeroInitProto::set_hero_name(const char* value, size_t size) {
  set_has_hero_name();
  if (hero_name_ == &::google::protobuf::internal::kEmptyString) {
    hero_name_ = new ::std::string;
  }
  hero_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DotaEachHeroInitProto::mutable_hero_name() {
  set_has_hero_name();
  if (hero_name_ == &::google::protobuf::internal::kEmptyString) {
    hero_name_ = new ::std::string;
  }
  return hero_name_;
}
inline ::std::string* DotaEachHeroInitProto::release_hero_name() {
  clear_has_hero_name();
  if (hero_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = hero_name_;
    hero_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DotaEachHeroInitProto::set_allocated_hero_name(::std::string* hero_name) {
  if (hero_name_ != &::google::protobuf::internal::kEmptyString) {
    delete hero_name_;
  }
  if (hero_name) {
    set_has_hero_name();
    hero_name_ = hero_name;
  } else {
    clear_has_hero_name();
    hero_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 party = 3;
inline bool DotaEachHeroInitProto::has_party() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DotaEachHeroInitProto::set_has_party() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DotaEachHeroInitProto::clear_has_party() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DotaEachHeroInitProto::clear_party() {
  party_ = 0;
  clear_has_party();
}
inline ::google::protobuf::int32 DotaEachHeroInitProto::party() const {
  return party_;
}
inline void DotaEachHeroInitProto::set_party(::google::protobuf::int32 value) {
  set_has_party();
  party_ = value;
}

// optional int32 point = 4;
inline bool DotaEachHeroInitProto::has_point() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DotaEachHeroInitProto::set_has_point() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DotaEachHeroInitProto::clear_has_point() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DotaEachHeroInitProto::clear_point() {
  point_ = 0;
  clear_has_point();
}
inline ::google::protobuf::int32 DotaEachHeroInitProto::point() const {
  return point_;
}
inline void DotaEachHeroInitProto::set_point(::google::protobuf::int32 value) {
  set_has_point();
  point_ = value;
}

// optional int64 point_change_time = 5;
inline bool DotaEachHeroInitProto::has_point_change_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DotaEachHeroInitProto::set_has_point_change_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DotaEachHeroInitProto::clear_has_point_change_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DotaEachHeroInitProto::clear_point_change_time() {
  point_change_time_ = GOOGLE_LONGLONG(0);
  clear_has_point_change_time();
}
inline ::google::protobuf::int64 DotaEachHeroInitProto::point_change_time() const {
  return point_change_time_;
}
inline void DotaEachHeroInitProto::set_point_change_time(::google::protobuf::int64 value) {
  set_has_point_change_time();
  point_change_time_ = value;
}

// -------------------------------------------------------------------

// DotaFinalInfoProto

// repeated .app.message.DotaEachHeroFinalProto party_1_heroes = 1;
inline int DotaFinalInfoProto::party_1_heroes_size() const {
  return party_1_heroes_.size();
}
inline void DotaFinalInfoProto::clear_party_1_heroes() {
  party_1_heroes_.Clear();
}
inline const ::app::message::DotaEachHeroFinalProto& DotaFinalInfoProto::party_1_heroes(int index) const {
  return party_1_heroes_.Get(index);
}
inline ::app::message::DotaEachHeroFinalProto* DotaFinalInfoProto::mutable_party_1_heroes(int index) {
  return party_1_heroes_.Mutable(index);
}
inline ::app::message::DotaEachHeroFinalProto* DotaFinalInfoProto::add_party_1_heroes() {
  return party_1_heroes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::DotaEachHeroFinalProto >&
DotaFinalInfoProto::party_1_heroes() const {
  return party_1_heroes_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::DotaEachHeroFinalProto >*
DotaFinalInfoProto::mutable_party_1_heroes() {
  return &party_1_heroes_;
}

// repeated .app.message.DotaEachHeroFinalProto party_2_heroes = 2;
inline int DotaFinalInfoProto::party_2_heroes_size() const {
  return party_2_heroes_.size();
}
inline void DotaFinalInfoProto::clear_party_2_heroes() {
  party_2_heroes_.Clear();
}
inline const ::app::message::DotaEachHeroFinalProto& DotaFinalInfoProto::party_2_heroes(int index) const {
  return party_2_heroes_.Get(index);
}
inline ::app::message::DotaEachHeroFinalProto* DotaFinalInfoProto::mutable_party_2_heroes(int index) {
  return party_2_heroes_.Mutable(index);
}
inline ::app::message::DotaEachHeroFinalProto* DotaFinalInfoProto::add_party_2_heroes() {
  return party_2_heroes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::DotaEachHeroFinalProto >&
DotaFinalInfoProto::party_2_heroes() const {
  return party_2_heroes_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::DotaEachHeroFinalProto >*
DotaFinalInfoProto::mutable_party_2_heroes() {
  return &party_2_heroes_;
}

// optional int32 result = 3;
inline bool DotaFinalInfoProto::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DotaFinalInfoProto::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DotaFinalInfoProto::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DotaFinalInfoProto::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 DotaFinalInfoProto::result() const {
  return result_;
}
inline void DotaFinalInfoProto::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional .app.message.PrizeProto prize = 4;
inline bool DotaFinalInfoProto::has_prize() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DotaFinalInfoProto::set_has_prize() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DotaFinalInfoProto::clear_has_prize() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DotaFinalInfoProto::clear_prize() {
  if (prize_ != NULL) prize_->::app::message::PrizeProto::Clear();
  clear_has_prize();
}
inline const ::app::message::PrizeProto& DotaFinalInfoProto::prize() const {
  return prize_ != NULL ? *prize_ : *default_instance_->prize_;
}
inline ::app::message::PrizeProto* DotaFinalInfoProto::mutable_prize() {
  set_has_prize();
  if (prize_ == NULL) prize_ = new ::app::message::PrizeProto;
  return prize_;
}
inline ::app::message::PrizeProto* DotaFinalInfoProto::release_prize() {
  clear_has_prize();
  ::app::message::PrizeProto* temp = prize_;
  prize_ = NULL;
  return temp;
}
inline void DotaFinalInfoProto::set_allocated_prize(::app::message::PrizeProto* prize) {
  delete prize_;
  prize_ = prize;
  if (prize) {
    set_has_prize();
  } else {
    clear_has_prize();
  }
}

// -------------------------------------------------------------------

// DotaEachHeroFinalProto

// optional int64 hero_id = 1;
inline bool DotaEachHeroFinalProto::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DotaEachHeroFinalProto::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DotaEachHeroFinalProto::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DotaEachHeroFinalProto::clear_hero_id() {
  hero_id_ = GOOGLE_LONGLONG(0);
  clear_has_hero_id();
}
inline ::google::protobuf::int64 DotaEachHeroFinalProto::hero_id() const {
  return hero_id_;
}
inline void DotaEachHeroFinalProto::set_hero_id(::google::protobuf::int64 value) {
  set_has_hero_id();
  hero_id_ = value;
}

// optional string hero_name = 2;
inline bool DotaEachHeroFinalProto::has_hero_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DotaEachHeroFinalProto::set_has_hero_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DotaEachHeroFinalProto::clear_has_hero_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DotaEachHeroFinalProto::clear_hero_name() {
  if (hero_name_ != &::google::protobuf::internal::kEmptyString) {
    hero_name_->clear();
  }
  clear_has_hero_name();
}
inline const ::std::string& DotaEachHeroFinalProto::hero_name() const {
  return *hero_name_;
}
inline void DotaEachHeroFinalProto::set_hero_name(const ::std::string& value) {
  set_has_hero_name();
  if (hero_name_ == &::google::protobuf::internal::kEmptyString) {
    hero_name_ = new ::std::string;
  }
  hero_name_->assign(value);
}
inline void DotaEachHeroFinalProto::set_hero_name(const char* value) {
  set_has_hero_name();
  if (hero_name_ == &::google::protobuf::internal::kEmptyString) {
    hero_name_ = new ::std::string;
  }
  hero_name_->assign(value);
}
inline void DotaEachHeroFinalProto::set_hero_name(const char* value, size_t size) {
  set_has_hero_name();
  if (hero_name_ == &::google::protobuf::internal::kEmptyString) {
    hero_name_ = new ::std::string;
  }
  hero_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* DotaEachHeroFinalProto::mutable_hero_name() {
  set_has_hero_name();
  if (hero_name_ == &::google::protobuf::internal::kEmptyString) {
    hero_name_ = new ::std::string;
  }
  return hero_name_;
}
inline ::std::string* DotaEachHeroFinalProto::release_hero_name() {
  clear_has_hero_name();
  if (hero_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = hero_name_;
    hero_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void DotaEachHeroFinalProto::set_allocated_hero_name(::std::string* hero_name) {
  if (hero_name_ != &::google::protobuf::internal::kEmptyString) {
    delete hero_name_;
  }
  if (hero_name) {
    set_has_hero_name();
    hero_name_ = hero_name;
  } else {
    clear_has_hero_name();
    hero_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 point = 3;
inline bool DotaEachHeroFinalProto::has_point() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DotaEachHeroFinalProto::set_has_point() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DotaEachHeroFinalProto::clear_has_point() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DotaEachHeroFinalProto::clear_point() {
  point_ = 0;
  clear_has_point();
}
inline ::google::protobuf::int32 DotaEachHeroFinalProto::point() const {
  return point_;
}
inline void DotaEachHeroFinalProto::set_point(::google::protobuf::int32 value) {
  set_has_point();
  point_ = value;
}

// optional int32 kill_count = 4;
inline bool DotaEachHeroFinalProto::has_kill_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DotaEachHeroFinalProto::set_has_kill_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DotaEachHeroFinalProto::clear_has_kill_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DotaEachHeroFinalProto::clear_kill_count() {
  kill_count_ = 0;
  clear_has_kill_count();
}
inline ::google::protobuf::int32 DotaEachHeroFinalProto::kill_count() const {
  return kill_count_;
}
inline void DotaEachHeroFinalProto::set_kill_count(::google::protobuf::int32 value) {
  set_has_kill_count();
  kill_count_ = value;
}

// optional int32 dead_count = 5;
inline bool DotaEachHeroFinalProto::has_dead_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DotaEachHeroFinalProto::set_has_dead_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DotaEachHeroFinalProto::clear_has_dead_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DotaEachHeroFinalProto::clear_dead_count() {
  dead_count_ = 0;
  clear_has_dead_count();
}
inline ::google::protobuf::int32 DotaEachHeroFinalProto::dead_count() const {
  return dead_count_;
}
inline void DotaEachHeroFinalProto::set_dead_count(::google::protobuf::int32 value) {
  set_has_dead_count();
  dead_count_ = value;
}

// optional int32 level = 6;
inline bool DotaEachHeroFinalProto::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void DotaEachHeroFinalProto::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void DotaEachHeroFinalProto::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void DotaEachHeroFinalProto::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 DotaEachHeroFinalProto::level() const {
  return level_;
}
inline void DotaEachHeroFinalProto::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// HtzWorldRecordProto

// optional .app.message.HtzTimeRecordProto time_record = 1;
inline bool HtzWorldRecordProto::has_time_record() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HtzWorldRecordProto::set_has_time_record() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HtzWorldRecordProto::clear_has_time_record() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HtzWorldRecordProto::clear_time_record() {
  if (time_record_ != NULL) time_record_->::app::message::HtzTimeRecordProto::Clear();
  clear_has_time_record();
}
inline const ::app::message::HtzTimeRecordProto& HtzWorldRecordProto::time_record() const {
  return time_record_ != NULL ? *time_record_ : *default_instance_->time_record_;
}
inline ::app::message::HtzTimeRecordProto* HtzWorldRecordProto::mutable_time_record() {
  set_has_time_record();
  if (time_record_ == NULL) time_record_ = new ::app::message::HtzTimeRecordProto;
  return time_record_;
}
inline ::app::message::HtzTimeRecordProto* HtzWorldRecordProto::release_time_record() {
  clear_has_time_record();
  ::app::message::HtzTimeRecordProto* temp = time_record_;
  time_record_ = NULL;
  return temp;
}
inline void HtzWorldRecordProto::set_allocated_time_record(::app::message::HtzTimeRecordProto* time_record) {
  delete time_record_;
  time_record_ = time_record;
  if (time_record) {
    set_has_time_record();
  } else {
    clear_has_time_record();
  }
}

// optional .app.message.HtzDestroyRecordProto destroy_record = 2;
inline bool HtzWorldRecordProto::has_destroy_record() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HtzWorldRecordProto::set_has_destroy_record() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HtzWorldRecordProto::clear_has_destroy_record() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HtzWorldRecordProto::clear_destroy_record() {
  if (destroy_record_ != NULL) destroy_record_->::app::message::HtzDestroyRecordProto::Clear();
  clear_has_destroy_record();
}
inline const ::app::message::HtzDestroyRecordProto& HtzWorldRecordProto::destroy_record() const {
  return destroy_record_ != NULL ? *destroy_record_ : *default_instance_->destroy_record_;
}
inline ::app::message::HtzDestroyRecordProto* HtzWorldRecordProto::mutable_destroy_record() {
  set_has_destroy_record();
  if (destroy_record_ == NULL) destroy_record_ = new ::app::message::HtzDestroyRecordProto;
  return destroy_record_;
}
inline ::app::message::HtzDestroyRecordProto* HtzWorldRecordProto::release_destroy_record() {
  clear_has_destroy_record();
  ::app::message::HtzDestroyRecordProto* temp = destroy_record_;
  destroy_record_ = NULL;
  return temp;
}
inline void HtzWorldRecordProto::set_allocated_destroy_record(::app::message::HtzDestroyRecordProto* destroy_record) {
  delete destroy_record_;
  destroy_record_ = destroy_record;
  if (destroy_record) {
    set_has_destroy_record();
  } else {
    clear_has_destroy_record();
  }
}

// -------------------------------------------------------------------

// HtzTimeRecordProto

// optional int64 id = 1;
inline bool HtzTimeRecordProto::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HtzTimeRecordProto::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HtzTimeRecordProto::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HtzTimeRecordProto::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 HtzTimeRecordProto::id() const {
  return id_;
}
inline void HtzTimeRecordProto::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional string name = 2;
inline bool HtzTimeRecordProto::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HtzTimeRecordProto::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HtzTimeRecordProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HtzTimeRecordProto::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& HtzTimeRecordProto::name() const {
  return *name_;
}
inline void HtzTimeRecordProto::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void HtzTimeRecordProto::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void HtzTimeRecordProto::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* HtzTimeRecordProto::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* HtzTimeRecordProto::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void HtzTimeRecordProto::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int64 time = 3;
inline bool HtzTimeRecordProto::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HtzTimeRecordProto::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HtzTimeRecordProto::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HtzTimeRecordProto::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
inline ::google::protobuf::int64 HtzTimeRecordProto::time() const {
  return time_;
}
inline void HtzTimeRecordProto::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
}

// -------------------------------------------------------------------

// HtzDestroyRecordProto

// optional int64 id = 1;
inline bool HtzDestroyRecordProto::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HtzDestroyRecordProto::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HtzDestroyRecordProto::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HtzDestroyRecordProto::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 HtzDestroyRecordProto::id() const {
  return id_;
}
inline void HtzDestroyRecordProto::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// optional string name = 2;
inline bool HtzDestroyRecordProto::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HtzDestroyRecordProto::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HtzDestroyRecordProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HtzDestroyRecordProto::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& HtzDestroyRecordProto::name() const {
  return *name_;
}
inline void HtzDestroyRecordProto::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void HtzDestroyRecordProto::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void HtzDestroyRecordProto::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* HtzDestroyRecordProto::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* HtzDestroyRecordProto::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void HtzDestroyRecordProto::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 max_destory = 3;
inline bool HtzDestroyRecordProto::has_max_destory() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HtzDestroyRecordProto::set_has_max_destory() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HtzDestroyRecordProto::clear_has_max_destory() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HtzDestroyRecordProto::clear_max_destory() {
  max_destory_ = 0;
  clear_has_max_destory();
}
inline ::google::protobuf::int32 HtzDestroyRecordProto::max_destory() const {
  return max_destory_;
}
inline void HtzDestroyRecordProto::set_max_destory(::google::protobuf::int32 value) {
  set_has_max_destory();
  max_destory_ = value;
}

// -------------------------------------------------------------------

// WuLinProto

// optional int64 group_match_time = 1;
inline bool WuLinProto::has_group_match_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WuLinProto::set_has_group_match_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WuLinProto::clear_has_group_match_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WuLinProto::clear_group_match_time() {
  group_match_time_ = GOOGLE_LONGLONG(0);
  clear_has_group_match_time();
}
inline ::google::protobuf::int64 WuLinProto::group_match_time() const {
  return group_match_time_;
}
inline void WuLinProto::set_group_match_time(::google::protobuf::int64 value) {
  set_has_group_match_time();
  group_match_time_ = value;
}

// repeated .app.message.WuLinGroupProto group = 2;
inline int WuLinProto::group_size() const {
  return group_.size();
}
inline void WuLinProto::clear_group() {
  group_.Clear();
}
inline const ::app::message::WuLinGroupProto& WuLinProto::group(int index) const {
  return group_.Get(index);
}
inline ::app::message::WuLinGroupProto* WuLinProto::mutable_group(int index) {
  return group_.Mutable(index);
}
inline ::app::message::WuLinGroupProto* WuLinProto::add_group() {
  return group_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::WuLinGroupProto >&
WuLinProto::group() const {
  return group_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::WuLinGroupProto >*
WuLinProto::mutable_group() {
  return &group_;
}

// repeated .app.message.WuLinMatchProto match_16 = 3;
inline int WuLinProto::match_16_size() const {
  return match_16_.size();
}
inline void WuLinProto::clear_match_16() {
  match_16_.Clear();
}
inline const ::app::message::WuLinMatchProto& WuLinProto::match_16(int index) const {
  return match_16_.Get(index);
}
inline ::app::message::WuLinMatchProto* WuLinProto::mutable_match_16(int index) {
  return match_16_.Mutable(index);
}
inline ::app::message::WuLinMatchProto* WuLinProto::add_match_16() {
  return match_16_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::WuLinMatchProto >&
WuLinProto::match_16() const {
  return match_16_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::WuLinMatchProto >*
WuLinProto::mutable_match_16() {
  return &match_16_;
}

// repeated .app.message.WuLinMatchProto match_8 = 4;
inline int WuLinProto::match_8_size() const {
  return match_8_.size();
}
inline void WuLinProto::clear_match_8() {
  match_8_.Clear();
}
inline const ::app::message::WuLinMatchProto& WuLinProto::match_8(int index) const {
  return match_8_.Get(index);
}
inline ::app::message::WuLinMatchProto* WuLinProto::mutable_match_8(int index) {
  return match_8_.Mutable(index);
}
inline ::app::message::WuLinMatchProto* WuLinProto::add_match_8() {
  return match_8_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::WuLinMatchProto >&
WuLinProto::match_8() const {
  return match_8_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::WuLinMatchProto >*
WuLinProto::mutable_match_8() {
  return &match_8_;
}

// repeated .app.message.WuLinMatchProto match_4 = 5;
inline int WuLinProto::match_4_size() const {
  return match_4_.size();
}
inline void WuLinProto::clear_match_4() {
  match_4_.Clear();
}
inline const ::app::message::WuLinMatchProto& WuLinProto::match_4(int index) const {
  return match_4_.Get(index);
}
inline ::app::message::WuLinMatchProto* WuLinProto::mutable_match_4(int index) {
  return match_4_.Mutable(index);
}
inline ::app::message::WuLinMatchProto* WuLinProto::add_match_4() {
  return match_4_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::WuLinMatchProto >&
WuLinProto::match_4() const {
  return match_4_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::WuLinMatchProto >*
WuLinProto::mutable_match_4() {
  return &match_4_;
}

// repeated .app.message.WuLinMatchProto match_2 = 6;
inline int WuLinProto::match_2_size() const {
  return match_2_.size();
}
inline void WuLinProto::clear_match_2() {
  match_2_.Clear();
}
inline const ::app::message::WuLinMatchProto& WuLinProto::match_2(int index) const {
  return match_2_.Get(index);
}
inline ::app::message::WuLinMatchProto* WuLinProto::mutable_match_2(int index) {
  return match_2_.Mutable(index);
}
inline ::app::message::WuLinMatchProto* WuLinProto::add_match_2() {
  return match_2_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::WuLinMatchProto >&
WuLinProto::match_2() const {
  return match_2_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::WuLinMatchProto >*
WuLinProto::mutable_match_2() {
  return &match_2_;
}

// -------------------------------------------------------------------

// WuLinGroupProto

// repeated .app.message.WuLinHeroProto hero_a = 1;
inline int WuLinGroupProto::hero_a_size() const {
  return hero_a_.size();
}
inline void WuLinGroupProto::clear_hero_a() {
  hero_a_.Clear();
}
inline const ::app::message::WuLinHeroProto& WuLinGroupProto::hero_a(int index) const {
  return hero_a_.Get(index);
}
inline ::app::message::WuLinHeroProto* WuLinGroupProto::mutable_hero_a(int index) {
  return hero_a_.Mutable(index);
}
inline ::app::message::WuLinHeroProto* WuLinGroupProto::add_hero_a() {
  return hero_a_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::WuLinHeroProto >&
WuLinGroupProto::hero_a() const {
  return hero_a_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::WuLinHeroProto >*
WuLinGroupProto::mutable_hero_a() {
  return &hero_a_;
}

// repeated .app.message.WuLinMatchProto match_a = 2;
inline int WuLinGroupProto::match_a_size() const {
  return match_a_.size();
}
inline void WuLinGroupProto::clear_match_a() {
  match_a_.Clear();
}
inline const ::app::message::WuLinMatchProto& WuLinGroupProto::match_a(int index) const {
  return match_a_.Get(index);
}
inline ::app::message::WuLinMatchProto* WuLinGroupProto::mutable_match_a(int index) {
  return match_a_.Mutable(index);
}
inline ::app::message::WuLinMatchProto* WuLinGroupProto::add_match_a() {
  return match_a_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::WuLinMatchProto >&
WuLinGroupProto::match_a() const {
  return match_a_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::WuLinMatchProto >*
WuLinGroupProto::mutable_match_a() {
  return &match_a_;
}

// repeated .app.message.WuLinHeroProto hero_b = 3;
inline int WuLinGroupProto::hero_b_size() const {
  return hero_b_.size();
}
inline void WuLinGroupProto::clear_hero_b() {
  hero_b_.Clear();
}
inline const ::app::message::WuLinHeroProto& WuLinGroupProto::hero_b(int index) const {
  return hero_b_.Get(index);
}
inline ::app::message::WuLinHeroProto* WuLinGroupProto::mutable_hero_b(int index) {
  return hero_b_.Mutable(index);
}
inline ::app::message::WuLinHeroProto* WuLinGroupProto::add_hero_b() {
  return hero_b_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::WuLinHeroProto >&
WuLinGroupProto::hero_b() const {
  return hero_b_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::WuLinHeroProto >*
WuLinGroupProto::mutable_hero_b() {
  return &hero_b_;
}

// repeated .app.message.WuLinMatchProto match_b = 4;
inline int WuLinGroupProto::match_b_size() const {
  return match_b_.size();
}
inline void WuLinGroupProto::clear_match_b() {
  match_b_.Clear();
}
inline const ::app::message::WuLinMatchProto& WuLinGroupProto::match_b(int index) const {
  return match_b_.Get(index);
}
inline ::app::message::WuLinMatchProto* WuLinGroupProto::mutable_match_b(int index) {
  return match_b_.Mutable(index);
}
inline ::app::message::WuLinMatchProto* WuLinGroupProto::add_match_b() {
  return match_b_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::WuLinMatchProto >&
WuLinGroupProto::match_b() const {
  return match_b_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::WuLinMatchProto >*
WuLinGroupProto::mutable_match_b() {
  return &match_b_;
}

// -------------------------------------------------------------------

// WuLinMatchProto

// optional int64 start_time = 1;
inline bool WuLinMatchProto::has_start_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WuLinMatchProto::set_has_start_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WuLinMatchProto::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WuLinMatchProto::clear_start_time() {
  start_time_ = GOOGLE_LONGLONG(0);
  clear_has_start_time();
}
inline ::google::protobuf::int64 WuLinMatchProto::start_time() const {
  return start_time_;
}
inline void WuLinMatchProto::set_start_time(::google::protobuf::int64 value) {
  set_has_start_time();
  start_time_ = value;
}

// optional int64 end_time = 10;
inline bool WuLinMatchProto::has_end_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WuLinMatchProto::set_has_end_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WuLinMatchProto::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WuLinMatchProto::clear_end_time() {
  end_time_ = GOOGLE_LONGLONG(0);
  clear_has_end_time();
}
inline ::google::protobuf::int64 WuLinMatchProto::end_time() const {
  return end_time_;
}
inline void WuLinMatchProto::set_end_time(::google::protobuf::int64 value) {
  set_has_end_time();
  end_time_ = value;
}

// optional int32 result = 8;
inline bool WuLinMatchProto::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WuLinMatchProto::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WuLinMatchProto::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WuLinMatchProto::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::google::protobuf::int32 WuLinMatchProto::result() const {
  return result_;
}
inline void WuLinMatchProto::set_result(::google::protobuf::int32 value) {
  set_has_result();
  result_ = value;
}

// optional int32 match_id = 9;
inline bool WuLinMatchProto::has_match_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WuLinMatchProto::set_has_match_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WuLinMatchProto::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WuLinMatchProto::clear_match_id() {
  match_id_ = 0;
  clear_has_match_id();
}
inline ::google::protobuf::int32 WuLinMatchProto::match_id() const {
  return match_id_;
}
inline void WuLinMatchProto::set_match_id(::google::protobuf::int32 value) {
  set_has_match_id();
  match_id_ = value;
}

// optional .app.message.WuLinHeroProto hero_1 = 2;
inline bool WuLinMatchProto::has_hero_1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WuLinMatchProto::set_has_hero_1() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WuLinMatchProto::clear_has_hero_1() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WuLinMatchProto::clear_hero_1() {
  if (hero_1_ != NULL) hero_1_->::app::message::WuLinHeroProto::Clear();
  clear_has_hero_1();
}
inline const ::app::message::WuLinHeroProto& WuLinMatchProto::hero_1() const {
  return hero_1_ != NULL ? *hero_1_ : *default_instance_->hero_1_;
}
inline ::app::message::WuLinHeroProto* WuLinMatchProto::mutable_hero_1() {
  set_has_hero_1();
  if (hero_1_ == NULL) hero_1_ = new ::app::message::WuLinHeroProto;
  return hero_1_;
}
inline ::app::message::WuLinHeroProto* WuLinMatchProto::release_hero_1() {
  clear_has_hero_1();
  ::app::message::WuLinHeroProto* temp = hero_1_;
  hero_1_ = NULL;
  return temp;
}
inline void WuLinMatchProto::set_allocated_hero_1(::app::message::WuLinHeroProto* hero_1) {
  delete hero_1_;
  hero_1_ = hero_1;
  if (hero_1) {
    set_has_hero_1();
  } else {
    clear_has_hero_1();
  }
}

// optional .app.message.WuLinHeroProto hero_2 = 3;
inline bool WuLinMatchProto::has_hero_2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WuLinMatchProto::set_has_hero_2() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WuLinMatchProto::clear_has_hero_2() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WuLinMatchProto::clear_hero_2() {
  if (hero_2_ != NULL) hero_2_->::app::message::WuLinHeroProto::Clear();
  clear_has_hero_2();
}
inline const ::app::message::WuLinHeroProto& WuLinMatchProto::hero_2() const {
  return hero_2_ != NULL ? *hero_2_ : *default_instance_->hero_2_;
}
inline ::app::message::WuLinHeroProto* WuLinMatchProto::mutable_hero_2() {
  set_has_hero_2();
  if (hero_2_ == NULL) hero_2_ = new ::app::message::WuLinHeroProto;
  return hero_2_;
}
inline ::app::message::WuLinHeroProto* WuLinMatchProto::release_hero_2() {
  clear_has_hero_2();
  ::app::message::WuLinHeroProto* temp = hero_2_;
  hero_2_ = NULL;
  return temp;
}
inline void WuLinMatchProto::set_allocated_hero_2(::app::message::WuLinHeroProto* hero_2) {
  delete hero_2_;
  hero_2_ = hero_2;
  if (hero_2) {
    set_has_hero_2();
  } else {
    clear_has_hero_2();
  }
}

// optional int32 uuid = 4;
inline bool WuLinMatchProto::has_uuid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WuLinMatchProto::set_has_uuid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WuLinMatchProto::clear_has_uuid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WuLinMatchProto::clear_uuid() {
  uuid_ = 0;
  clear_has_uuid();
}
inline ::google::protobuf::int32 WuLinMatchProto::uuid() const {
  return uuid_;
}
inline void WuLinMatchProto::set_uuid(::google::protobuf::int32 value) {
  set_has_uuid();
  uuid_ = value;
}

// optional int64 combat_server_id = 5;
inline bool WuLinMatchProto::has_combat_server_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void WuLinMatchProto::set_has_combat_server_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void WuLinMatchProto::clear_has_combat_server_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void WuLinMatchProto::clear_combat_server_id() {
  combat_server_id_ = GOOGLE_LONGLONG(0);
  clear_has_combat_server_id();
}
inline ::google::protobuf::int64 WuLinMatchProto::combat_server_id() const {
  return combat_server_id_;
}
inline void WuLinMatchProto::set_combat_server_id(::google::protobuf::int64 value) {
  set_has_combat_server_id();
  combat_server_id_ = value;
}

// optional .app.message.WuLinMatchType match_type = 6;
inline bool WuLinMatchProto::has_match_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void WuLinMatchProto::set_has_match_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void WuLinMatchProto::clear_has_match_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void WuLinMatchProto::clear_match_type() {
  match_type_ = 1;
  clear_has_match_type();
}
inline ::app::message::WuLinMatchType WuLinMatchProto::match_type() const {
  return static_cast< ::app::message::WuLinMatchType >(match_type_);
}
inline void WuLinMatchProto::set_match_type(::app::message::WuLinMatchType value) {
  assert(::app::message::WuLinMatchType_IsValid(value));
  set_has_match_type();
  match_type_ = value;
}

// -------------------------------------------------------------------

// WuLinHeroProto

// optional int64 hero_id = 1;
inline bool WuLinHeroProto::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WuLinHeroProto::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WuLinHeroProto::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WuLinHeroProto::clear_hero_id() {
  hero_id_ = GOOGLE_LONGLONG(0);
  clear_has_hero_id();
}
inline ::google::protobuf::int64 WuLinHeroProto::hero_id() const {
  return hero_id_;
}
inline void WuLinHeroProto::set_hero_id(::google::protobuf::int64 value) {
  set_has_hero_id();
  hero_id_ = value;
}

// optional int32 hero_race = 2;
inline bool WuLinHeroProto::has_hero_race() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WuLinHeroProto::set_has_hero_race() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WuLinHeroProto::clear_has_hero_race() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WuLinHeroProto::clear_hero_race() {
  hero_race_ = 0;
  clear_has_hero_race();
}
inline ::google::protobuf::int32 WuLinHeroProto::hero_race() const {
  return hero_race_;
}
inline void WuLinHeroProto::set_hero_race(::google::protobuf::int32 value) {
  set_has_hero_race();
  hero_race_ = value;
}

// optional string hero_name = 3;
inline bool WuLinHeroProto::has_hero_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WuLinHeroProto::set_has_hero_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WuLinHeroProto::clear_has_hero_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WuLinHeroProto::clear_hero_name() {
  if (hero_name_ != &::google::protobuf::internal::kEmptyString) {
    hero_name_->clear();
  }
  clear_has_hero_name();
}
inline const ::std::string& WuLinHeroProto::hero_name() const {
  return *hero_name_;
}
inline void WuLinHeroProto::set_hero_name(const ::std::string& value) {
  set_has_hero_name();
  if (hero_name_ == &::google::protobuf::internal::kEmptyString) {
    hero_name_ = new ::std::string;
  }
  hero_name_->assign(value);
}
inline void WuLinHeroProto::set_hero_name(const char* value) {
  set_has_hero_name();
  if (hero_name_ == &::google::protobuf::internal::kEmptyString) {
    hero_name_ = new ::std::string;
  }
  hero_name_->assign(value);
}
inline void WuLinHeroProto::set_hero_name(const char* value, size_t size) {
  set_has_hero_name();
  if (hero_name_ == &::google::protobuf::internal::kEmptyString) {
    hero_name_ = new ::std::string;
  }
  hero_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* WuLinHeroProto::mutable_hero_name() {
  set_has_hero_name();
  if (hero_name_ == &::google::protobuf::internal::kEmptyString) {
    hero_name_ = new ::std::string;
  }
  return hero_name_;
}
inline ::std::string* WuLinHeroProto::release_hero_name() {
  clear_has_hero_name();
  if (hero_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = hero_name_;
    hero_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void WuLinHeroProto::set_allocated_hero_name(::std::string* hero_name) {
  if (hero_name_ != &::google::protobuf::internal::kEmptyString) {
    delete hero_name_;
  }
  if (hero_name) {
    set_has_hero_name();
    hero_name_ = hero_name;
  } else {
    clear_has_hero_name();
    hero_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 pair_point = 4;
inline bool WuLinHeroProto::has_pair_point() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WuLinHeroProto::set_has_pair_point() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WuLinHeroProto::clear_has_pair_point() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WuLinHeroProto::clear_pair_point() {
  pair_point_ = 0;
  clear_has_pair_point();
}
inline ::google::protobuf::int32 WuLinHeroProto::pair_point() const {
  return pair_point_;
}
inline void WuLinHeroProto::set_pair_point(::google::protobuf::int32 value) {
  set_has_pair_point();
  pair_point_ = value;
}

// -------------------------------------------------------------------

// WuLinMatchResultProto

// optional int64 win_hero_id = 1;
inline bool WuLinMatchResultProto::has_win_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WuLinMatchResultProto::set_has_win_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WuLinMatchResultProto::clear_has_win_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WuLinMatchResultProto::clear_win_hero_id() {
  win_hero_id_ = GOOGLE_LONGLONG(0);
  clear_has_win_hero_id();
}
inline ::google::protobuf::int64 WuLinMatchResultProto::win_hero_id() const {
  return win_hero_id_;
}
inline void WuLinMatchResultProto::set_win_hero_id(::google::protobuf::int64 value) {
  set_has_win_hero_id();
  win_hero_id_ = value;
}

// optional string win_hero_name = 2;
inline bool WuLinMatchResultProto::has_win_hero_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WuLinMatchResultProto::set_has_win_hero_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WuLinMatchResultProto::clear_has_win_hero_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WuLinMatchResultProto::clear_win_hero_name() {
  if (win_hero_name_ != &::google::protobuf::internal::kEmptyString) {
    win_hero_name_->clear();
  }
  clear_has_win_hero_name();
}
inline const ::std::string& WuLinMatchResultProto::win_hero_name() const {
  return *win_hero_name_;
}
inline void WuLinMatchResultProto::set_win_hero_name(const ::std::string& value) {
  set_has_win_hero_name();
  if (win_hero_name_ == &::google::protobuf::internal::kEmptyString) {
    win_hero_name_ = new ::std::string;
  }
  win_hero_name_->assign(value);
}
inline void WuLinMatchResultProto::set_win_hero_name(const char* value) {
  set_has_win_hero_name();
  if (win_hero_name_ == &::google::protobuf::internal::kEmptyString) {
    win_hero_name_ = new ::std::string;
  }
  win_hero_name_->assign(value);
}
inline void WuLinMatchResultProto::set_win_hero_name(const char* value, size_t size) {
  set_has_win_hero_name();
  if (win_hero_name_ == &::google::protobuf::internal::kEmptyString) {
    win_hero_name_ = new ::std::string;
  }
  win_hero_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* WuLinMatchResultProto::mutable_win_hero_name() {
  set_has_win_hero_name();
  if (win_hero_name_ == &::google::protobuf::internal::kEmptyString) {
    win_hero_name_ = new ::std::string;
  }
  return win_hero_name_;
}
inline ::std::string* WuLinMatchResultProto::release_win_hero_name() {
  clear_has_win_hero_name();
  if (win_hero_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = win_hero_name_;
    win_hero_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void WuLinMatchResultProto::set_allocated_win_hero_name(::std::string* win_hero_name) {
  if (win_hero_name_ != &::google::protobuf::internal::kEmptyString) {
    delete win_hero_name_;
  }
  if (win_hero_name) {
    set_has_win_hero_name();
    win_hero_name_ = win_hero_name;
  } else {
    clear_has_win_hero_name();
    win_hero_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 win_hero_damage = 3;
inline bool WuLinMatchResultProto::has_win_hero_damage() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WuLinMatchResultProto::set_has_win_hero_damage() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WuLinMatchResultProto::clear_has_win_hero_damage() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WuLinMatchResultProto::clear_win_hero_damage() {
  win_hero_damage_ = 0;
  clear_has_win_hero_damage();
}
inline ::google::protobuf::int32 WuLinMatchResultProto::win_hero_damage() const {
  return win_hero_damage_;
}
inline void WuLinMatchResultProto::set_win_hero_damage(::google::protobuf::int32 value) {
  set_has_win_hero_damage();
  win_hero_damage_ = value;
}

// optional int64 lose_hero_id = 4;
inline bool WuLinMatchResultProto::has_lose_hero_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WuLinMatchResultProto::set_has_lose_hero_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WuLinMatchResultProto::clear_has_lose_hero_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WuLinMatchResultProto::clear_lose_hero_id() {
  lose_hero_id_ = GOOGLE_LONGLONG(0);
  clear_has_lose_hero_id();
}
inline ::google::protobuf::int64 WuLinMatchResultProto::lose_hero_id() const {
  return lose_hero_id_;
}
inline void WuLinMatchResultProto::set_lose_hero_id(::google::protobuf::int64 value) {
  set_has_lose_hero_id();
  lose_hero_id_ = value;
}

// optional string lose_hero_name = 5;
inline bool WuLinMatchResultProto::has_lose_hero_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WuLinMatchResultProto::set_has_lose_hero_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WuLinMatchResultProto::clear_has_lose_hero_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WuLinMatchResultProto::clear_lose_hero_name() {
  if (lose_hero_name_ != &::google::protobuf::internal::kEmptyString) {
    lose_hero_name_->clear();
  }
  clear_has_lose_hero_name();
}
inline const ::std::string& WuLinMatchResultProto::lose_hero_name() const {
  return *lose_hero_name_;
}
inline void WuLinMatchResultProto::set_lose_hero_name(const ::std::string& value) {
  set_has_lose_hero_name();
  if (lose_hero_name_ == &::google::protobuf::internal::kEmptyString) {
    lose_hero_name_ = new ::std::string;
  }
  lose_hero_name_->assign(value);
}
inline void WuLinMatchResultProto::set_lose_hero_name(const char* value) {
  set_has_lose_hero_name();
  if (lose_hero_name_ == &::google::protobuf::internal::kEmptyString) {
    lose_hero_name_ = new ::std::string;
  }
  lose_hero_name_->assign(value);
}
inline void WuLinMatchResultProto::set_lose_hero_name(const char* value, size_t size) {
  set_has_lose_hero_name();
  if (lose_hero_name_ == &::google::protobuf::internal::kEmptyString) {
    lose_hero_name_ = new ::std::string;
  }
  lose_hero_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* WuLinMatchResultProto::mutable_lose_hero_name() {
  set_has_lose_hero_name();
  if (lose_hero_name_ == &::google::protobuf::internal::kEmptyString) {
    lose_hero_name_ = new ::std::string;
  }
  return lose_hero_name_;
}
inline ::std::string* WuLinMatchResultProto::release_lose_hero_name() {
  clear_has_lose_hero_name();
  if (lose_hero_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = lose_hero_name_;
    lose_hero_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void WuLinMatchResultProto::set_allocated_lose_hero_name(::std::string* lose_hero_name) {
  if (lose_hero_name_ != &::google::protobuf::internal::kEmptyString) {
    delete lose_hero_name_;
  }
  if (lose_hero_name) {
    set_has_lose_hero_name();
    lose_hero_name_ = lose_hero_name;
  } else {
    clear_has_lose_hero_name();
    lose_hero_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 lose_hero_damage = 6;
inline bool WuLinMatchResultProto::has_lose_hero_damage() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void WuLinMatchResultProto::set_has_lose_hero_damage() {
  _has_bits_[0] |= 0x00000020u;
}
inline void WuLinMatchResultProto::clear_has_lose_hero_damage() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void WuLinMatchResultProto::clear_lose_hero_damage() {
  lose_hero_damage_ = 0;
  clear_has_lose_hero_damage();
}
inline ::google::protobuf::int32 WuLinMatchResultProto::lose_hero_damage() const {
  return lose_hero_damage_;
}
inline void WuLinMatchResultProto::set_lose_hero_damage(::google::protobuf::int32 value) {
  set_has_lose_hero_damage();
  lose_hero_damage_ = value;
}

// optional .app.message.WuLinMatchType match_type = 7;
inline bool WuLinMatchResultProto::has_match_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void WuLinMatchResultProto::set_has_match_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void WuLinMatchResultProto::clear_has_match_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void WuLinMatchResultProto::clear_match_type() {
  match_type_ = 1;
  clear_has_match_type();
}
inline ::app::message::WuLinMatchType WuLinMatchResultProto::match_type() const {
  return static_cast< ::app::message::WuLinMatchType >(match_type_);
}
inline void WuLinMatchResultProto::set_match_type(::app::message::WuLinMatchType value) {
  assert(::app::message::WuLinMatchType_IsValid(value));
  set_has_match_type();
  match_type_ = value;
}

// -------------------------------------------------------------------

// MeleeInitProto

// repeated .app.message.MeleeEachHeroInfoProto heroes = 1;
inline int MeleeInitProto::heroes_size() const {
  return heroes_.size();
}
inline void MeleeInitProto::clear_heroes() {
  heroes_.Clear();
}
inline const ::app::message::MeleeEachHeroInfoProto& MeleeInitProto::heroes(int index) const {
  return heroes_.Get(index);
}
inline ::app::message::MeleeEachHeroInfoProto* MeleeInitProto::mutable_heroes(int index) {
  return heroes_.Mutable(index);
}
inline ::app::message::MeleeEachHeroInfoProto* MeleeInitProto::add_heroes() {
  return heroes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::MeleeEachHeroInfoProto >&
MeleeInitProto::heroes() const {
  return heroes_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::MeleeEachHeroInfoProto >*
MeleeInitProto::mutable_heroes() {
  return &heroes_;
}

// optional int64 battle_start_time = 2;
inline bool MeleeInitProto::has_battle_start_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MeleeInitProto::set_has_battle_start_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MeleeInitProto::clear_has_battle_start_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MeleeInitProto::clear_battle_start_time() {
  battle_start_time_ = GOOGLE_LONGLONG(0);
  clear_has_battle_start_time();
}
inline ::google::protobuf::int64 MeleeInitProto::battle_start_time() const {
  return battle_start_time_;
}
inline void MeleeInitProto::set_battle_start_time(::google::protobuf::int64 value) {
  set_has_battle_start_time();
  battle_start_time_ = value;
}

// -------------------------------------------------------------------

// MeleeEachHeroInfoProto

// optional int64 hero_id = 1;
inline bool MeleeEachHeroInfoProto::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MeleeEachHeroInfoProto::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MeleeEachHeroInfoProto::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MeleeEachHeroInfoProto::clear_hero_id() {
  hero_id_ = GOOGLE_LONGLONG(0);
  clear_has_hero_id();
}
inline ::google::protobuf::int64 MeleeEachHeroInfoProto::hero_id() const {
  return hero_id_;
}
inline void MeleeEachHeroInfoProto::set_hero_id(::google::protobuf::int64 value) {
  set_has_hero_id();
  hero_id_ = value;
}

// optional string hero_name = 2;
inline bool MeleeEachHeroInfoProto::has_hero_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MeleeEachHeroInfoProto::set_has_hero_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MeleeEachHeroInfoProto::clear_has_hero_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MeleeEachHeroInfoProto::clear_hero_name() {
  if (hero_name_ != &::google::protobuf::internal::kEmptyString) {
    hero_name_->clear();
  }
  clear_has_hero_name();
}
inline const ::std::string& MeleeEachHeroInfoProto::hero_name() const {
  return *hero_name_;
}
inline void MeleeEachHeroInfoProto::set_hero_name(const ::std::string& value) {
  set_has_hero_name();
  if (hero_name_ == &::google::protobuf::internal::kEmptyString) {
    hero_name_ = new ::std::string;
  }
  hero_name_->assign(value);
}
inline void MeleeEachHeroInfoProto::set_hero_name(const char* value) {
  set_has_hero_name();
  if (hero_name_ == &::google::protobuf::internal::kEmptyString) {
    hero_name_ = new ::std::string;
  }
  hero_name_->assign(value);
}
inline void MeleeEachHeroInfoProto::set_hero_name(const char* value, size_t size) {
  set_has_hero_name();
  if (hero_name_ == &::google::protobuf::internal::kEmptyString) {
    hero_name_ = new ::std::string;
  }
  hero_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MeleeEachHeroInfoProto::mutable_hero_name() {
  set_has_hero_name();
  if (hero_name_ == &::google::protobuf::internal::kEmptyString) {
    hero_name_ = new ::std::string;
  }
  return hero_name_;
}
inline ::std::string* MeleeEachHeroInfoProto::release_hero_name() {
  clear_has_hero_name();
  if (hero_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = hero_name_;
    hero_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void MeleeEachHeroInfoProto::set_allocated_hero_name(::std::string* hero_name) {
  if (hero_name_ != &::google::protobuf::internal::kEmptyString) {
    delete hero_name_;
  }
  if (hero_name) {
    set_has_hero_name();
    hero_name_ = hero_name;
  } else {
    clear_has_hero_name();
    hero_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 kill = 3;
inline bool MeleeEachHeroInfoProto::has_kill() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MeleeEachHeroInfoProto::set_has_kill() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MeleeEachHeroInfoProto::clear_has_kill() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MeleeEachHeroInfoProto::clear_kill() {
  kill_ = 0;
  clear_has_kill();
}
inline ::google::protobuf::int32 MeleeEachHeroInfoProto::kill() const {
  return kill_;
}
inline void MeleeEachHeroInfoProto::set_kill(::google::protobuf::int32 value) {
  set_has_kill();
  kill_ = value;
}

// optional int32 assist = 4;
inline bool MeleeEachHeroInfoProto::has_assist() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MeleeEachHeroInfoProto::set_has_assist() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MeleeEachHeroInfoProto::clear_has_assist() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MeleeEachHeroInfoProto::clear_assist() {
  assist_ = 0;
  clear_has_assist();
}
inline ::google::protobuf::int32 MeleeEachHeroInfoProto::assist() const {
  return assist_;
}
inline void MeleeEachHeroInfoProto::set_assist(::google::protobuf::int32 value) {
  set_has_assist();
  assist_ = value;
}

// optional int64 kill_change_time = 5;
inline bool MeleeEachHeroInfoProto::has_kill_change_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MeleeEachHeroInfoProto::set_has_kill_change_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MeleeEachHeroInfoProto::clear_has_kill_change_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MeleeEachHeroInfoProto::clear_kill_change_time() {
  kill_change_time_ = GOOGLE_LONGLONG(0);
  clear_has_kill_change_time();
}
inline ::google::protobuf::int64 MeleeEachHeroInfoProto::kill_change_time() const {
  return kill_change_time_;
}
inline void MeleeEachHeroInfoProto::set_kill_change_time(::google::protobuf::int64 value) {
  set_has_kill_change_time();
  kill_change_time_ = value;
}

// -------------------------------------------------------------------

// MeleeFinalInfoProto

// repeated .app.message.MeleeEachHeroInfoProto heroes = 1;
inline int MeleeFinalInfoProto::heroes_size() const {
  return heroes_.size();
}
inline void MeleeFinalInfoProto::clear_heroes() {
  heroes_.Clear();
}
inline const ::app::message::MeleeEachHeroInfoProto& MeleeFinalInfoProto::heroes(int index) const {
  return heroes_.Get(index);
}
inline ::app::message::MeleeEachHeroInfoProto* MeleeFinalInfoProto::mutable_heroes(int index) {
  return heroes_.Mutable(index);
}
inline ::app::message::MeleeEachHeroInfoProto* MeleeFinalInfoProto::add_heroes() {
  return heroes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::MeleeEachHeroInfoProto >&
MeleeFinalInfoProto::heroes() const {
  return heroes_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::MeleeEachHeroInfoProto >*
MeleeFinalInfoProto::mutable_heroes() {
  return &heroes_;
}

// optional int64 win_hero_id = 2;
inline bool MeleeFinalInfoProto::has_win_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MeleeFinalInfoProto::set_has_win_hero_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MeleeFinalInfoProto::clear_has_win_hero_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MeleeFinalInfoProto::clear_win_hero_id() {
  win_hero_id_ = GOOGLE_LONGLONG(0);
  clear_has_win_hero_id();
}
inline ::google::protobuf::int64 MeleeFinalInfoProto::win_hero_id() const {
  return win_hero_id_;
}
inline void MeleeFinalInfoProto::set_win_hero_id(::google::protobuf::int64 value) {
  set_has_win_hero_id();
  win_hero_id_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace app

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::app::message::WuLinMatchType>() {
  return ::app::message::WuLinMatchType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_dungeon_2eproto__INCLUDED
