// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: recharge_gold_tree.proto

#ifndef PROTOBUF_recharge_5fgold_5ftree_2eproto__INCLUDED
#define PROTOBUF_recharge_5fgold_5ftree_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "goods.pb.h"
// @@protoc_insertion_point(includes)

namespace app {
namespace message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_recharge_5fgold_5ftree_2eproto();
void protobuf_AssignDesc_recharge_5fgold_5ftree_2eproto();
void protobuf_ShutdownFile_recharge_5fgold_5ftree_2eproto();

class RechargePrizeProto;
class WaterPrizeProto;
class FruitPrizeProto;
class RechargeGoldTreeInfoProto;

// ===================================================================

class RechargePrizeProto : public ::google::protobuf::Message {
 public:
  RechargePrizeProto();
  virtual ~RechargePrizeProto();

  RechargePrizeProto(const RechargePrizeProto& from);

  inline RechargePrizeProto& operator=(const RechargePrizeProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RechargePrizeProto& default_instance();

  void Swap(RechargePrizeProto* other);

  // implements Message ----------------------------------------------

  RechargePrizeProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RechargePrizeProto& from);
  void MergeFrom(const RechargePrizeProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .app.message.GoodsWrapperProto prize = 1;
  inline int prize_size() const;
  inline void clear_prize();
  static const int kPrizeFieldNumber = 1;
  inline const ::app::message::GoodsWrapperProto& prize(int index) const;
  inline ::app::message::GoodsWrapperProto* mutable_prize(int index);
  inline ::app::message::GoodsWrapperProto* add_prize();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto >&
      prize() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto >*
      mutable_prize();

  // @@protoc_insertion_point(class_scope:app.message.RechargePrizeProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto > prize_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_recharge_5fgold_5ftree_2eproto();
  friend void protobuf_AssignDesc_recharge_5fgold_5ftree_2eproto();
  friend void protobuf_ShutdownFile_recharge_5fgold_5ftree_2eproto();

  void InitAsDefaultInstance();
  static RechargePrizeProto* default_instance_;
};
// -------------------------------------------------------------------

class WaterPrizeProto : public ::google::protobuf::Message {
 public:
  WaterPrizeProto();
  virtual ~WaterPrizeProto();

  WaterPrizeProto(const WaterPrizeProto& from);

  inline WaterPrizeProto& operator=(const WaterPrizeProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WaterPrizeProto& default_instance();

  void Swap(WaterPrizeProto* other);

  // implements Message ----------------------------------------------

  WaterPrizeProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WaterPrizeProto& from);
  void MergeFrom(const WaterPrizeProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .app.message.GoodsWrapperProto prize = 1;
  inline int prize_size() const;
  inline void clear_prize();
  static const int kPrizeFieldNumber = 1;
  inline const ::app::message::GoodsWrapperProto& prize(int index) const;
  inline ::app::message::GoodsWrapperProto* mutable_prize(int index);
  inline ::app::message::GoodsWrapperProto* add_prize();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto >&
      prize() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto >*
      mutable_prize();

  // @@protoc_insertion_point(class_scope:app.message.WaterPrizeProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto > prize_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_recharge_5fgold_5ftree_2eproto();
  friend void protobuf_AssignDesc_recharge_5fgold_5ftree_2eproto();
  friend void protobuf_ShutdownFile_recharge_5fgold_5ftree_2eproto();

  void InitAsDefaultInstance();
  static WaterPrizeProto* default_instance_;
};
// -------------------------------------------------------------------

class FruitPrizeProto : public ::google::protobuf::Message {
 public:
  FruitPrizeProto();
  virtual ~FruitPrizeProto();

  FruitPrizeProto(const FruitPrizeProto& from);

  inline FruitPrizeProto& operator=(const FruitPrizeProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FruitPrizeProto& default_instance();

  void Swap(FruitPrizeProto* other);

  // implements Message ----------------------------------------------

  FruitPrizeProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FruitPrizeProto& from);
  void MergeFrom(const FruitPrizeProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .app.message.GoodsWrapperProto prize = 1;
  inline int prize_size() const;
  inline void clear_prize();
  static const int kPrizeFieldNumber = 1;
  inline const ::app::message::GoodsWrapperProto& prize(int index) const;
  inline ::app::message::GoodsWrapperProto* mutable_prize(int index);
  inline ::app::message::GoodsWrapperProto* add_prize();
  inline const ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto >&
      prize() const;
  inline ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto >*
      mutable_prize();

  // @@protoc_insertion_point(class_scope:app.message.FruitPrizeProto)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto > prize_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_recharge_5fgold_5ftree_2eproto();
  friend void protobuf_AssignDesc_recharge_5fgold_5ftree_2eproto();
  friend void protobuf_ShutdownFile_recharge_5fgold_5ftree_2eproto();

  void InitAsDefaultInstance();
  static FruitPrizeProto* default_instance_;
};
// -------------------------------------------------------------------

class RechargeGoldTreeInfoProto : public ::google::protobuf::Message {
 public:
  RechargeGoldTreeInfoProto();
  virtual ~RechargeGoldTreeInfoProto();

  RechargeGoldTreeInfoProto(const RechargeGoldTreeInfoProto& from);

  inline RechargeGoldTreeInfoProto& operator=(const RechargeGoldTreeInfoProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RechargeGoldTreeInfoProto& default_instance();

  void Swap(RechargeGoldTreeInfoProto* other);

  // implements Message ----------------------------------------------

  RechargeGoldTreeInfoProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RechargeGoldTreeInfoProto& from);
  void MergeFrom(const RechargeGoldTreeInfoProto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .app.message.RechargePrizeProto recharge_prize = 1;
  inline bool has_recharge_prize() const;
  inline void clear_recharge_prize();
  static const int kRechargePrizeFieldNumber = 1;
  inline const ::app::message::RechargePrizeProto& recharge_prize() const;
  inline ::app::message::RechargePrizeProto* mutable_recharge_prize();
  inline ::app::message::RechargePrizeProto* release_recharge_prize();
  inline void set_allocated_recharge_prize(::app::message::RechargePrizeProto* recharge_prize);

  // optional bool can_collect_recharge_prize = 2;
  inline bool has_can_collect_recharge_prize() const;
  inline void clear_can_collect_recharge_prize();
  static const int kCanCollectRechargePrizeFieldNumber = 2;
  inline bool can_collect_recharge_prize() const;
  inline void set_can_collect_recharge_prize(bool value);

  // optional bool finished_collect_recharge_prize = 3;
  inline bool has_finished_collect_recharge_prize() const;
  inline void clear_finished_collect_recharge_prize();
  static const int kFinishedCollectRechargePrizeFieldNumber = 3;
  inline bool finished_collect_recharge_prize() const;
  inline void set_finished_collect_recharge_prize(bool value);

  // optional .app.message.WaterPrizeProto water_prize = 4;
  inline bool has_water_prize() const;
  inline void clear_water_prize();
  static const int kWaterPrizeFieldNumber = 4;
  inline const ::app::message::WaterPrizeProto& water_prize() const;
  inline ::app::message::WaterPrizeProto* mutable_water_prize();
  inline ::app::message::WaterPrizeProto* release_water_prize();
  inline void set_allocated_water_prize(::app::message::WaterPrizeProto* water_prize);

  // optional int32 tree_level = 5;
  inline bool has_tree_level() const;
  inline void clear_tree_level();
  static const int kTreeLevelFieldNumber = 5;
  inline ::google::protobuf::int32 tree_level() const;
  inline void set_tree_level(::google::protobuf::int32 value);

  // optional int32 remaining_water_count = 6;
  inline bool has_remaining_water_count() const;
  inline void clear_remaining_water_count();
  static const int kRemainingWaterCountFieldNumber = 6;
  inline ::google::protobuf::int32 remaining_water_count() const;
  inline void set_remaining_water_count(::google::protobuf::int32 value);

  // optional int64 mature_time = 7;
  inline bool has_mature_time() const;
  inline void clear_mature_time();
  static const int kMatureTimeFieldNumber = 7;
  inline ::google::protobuf::int64 mature_time() const;
  inline void set_mature_time(::google::protobuf::int64 value);

  // optional .app.message.FruitPrizeProto fruit_prize = 8;
  inline bool has_fruit_prize() const;
  inline void clear_fruit_prize();
  static const int kFruitPrizeFieldNumber = 8;
  inline const ::app::message::FruitPrizeProto& fruit_prize() const;
  inline ::app::message::FruitPrizeProto* mutable_fruit_prize();
  inline ::app::message::FruitPrizeProto* release_fruit_prize();
  inline void set_allocated_fruit_prize(::app::message::FruitPrizeProto* fruit_prize);

  // optional int64 start_mature_time = 9;
  inline bool has_start_mature_time() const;
  inline void clear_start_mature_time();
  static const int kStartMatureTimeFieldNumber = 9;
  inline ::google::protobuf::int64 start_mature_time() const;
  inline void set_start_mature_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:app.message.RechargeGoldTreeInfoProto)
 private:
  inline void set_has_recharge_prize();
  inline void clear_has_recharge_prize();
  inline void set_has_can_collect_recharge_prize();
  inline void clear_has_can_collect_recharge_prize();
  inline void set_has_finished_collect_recharge_prize();
  inline void clear_has_finished_collect_recharge_prize();
  inline void set_has_water_prize();
  inline void clear_has_water_prize();
  inline void set_has_tree_level();
  inline void clear_has_tree_level();
  inline void set_has_remaining_water_count();
  inline void clear_has_remaining_water_count();
  inline void set_has_mature_time();
  inline void clear_has_mature_time();
  inline void set_has_fruit_prize();
  inline void clear_has_fruit_prize();
  inline void set_has_start_mature_time();
  inline void clear_has_start_mature_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::app::message::RechargePrizeProto* recharge_prize_;
  bool can_collect_recharge_prize_;
  bool finished_collect_recharge_prize_;
  ::google::protobuf::int32 tree_level_;
  ::app::message::WaterPrizeProto* water_prize_;
  ::google::protobuf::int64 mature_time_;
  ::app::message::FruitPrizeProto* fruit_prize_;
  ::google::protobuf::int64 start_mature_time_;
  ::google::protobuf::int32 remaining_water_count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_recharge_5fgold_5ftree_2eproto();
  friend void protobuf_AssignDesc_recharge_5fgold_5ftree_2eproto();
  friend void protobuf_ShutdownFile_recharge_5fgold_5ftree_2eproto();

  void InitAsDefaultInstance();
  static RechargeGoldTreeInfoProto* default_instance_;
};
// ===================================================================


// ===================================================================

// RechargePrizeProto

// repeated .app.message.GoodsWrapperProto prize = 1;
inline int RechargePrizeProto::prize_size() const {
  return prize_.size();
}
inline void RechargePrizeProto::clear_prize() {
  prize_.Clear();
}
inline const ::app::message::GoodsWrapperProto& RechargePrizeProto::prize(int index) const {
  return prize_.Get(index);
}
inline ::app::message::GoodsWrapperProto* RechargePrizeProto::mutable_prize(int index) {
  return prize_.Mutable(index);
}
inline ::app::message::GoodsWrapperProto* RechargePrizeProto::add_prize() {
  return prize_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto >&
RechargePrizeProto::prize() const {
  return prize_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto >*
RechargePrizeProto::mutable_prize() {
  return &prize_;
}

// -------------------------------------------------------------------

// WaterPrizeProto

// repeated .app.message.GoodsWrapperProto prize = 1;
inline int WaterPrizeProto::prize_size() const {
  return prize_.size();
}
inline void WaterPrizeProto::clear_prize() {
  prize_.Clear();
}
inline const ::app::message::GoodsWrapperProto& WaterPrizeProto::prize(int index) const {
  return prize_.Get(index);
}
inline ::app::message::GoodsWrapperProto* WaterPrizeProto::mutable_prize(int index) {
  return prize_.Mutable(index);
}
inline ::app::message::GoodsWrapperProto* WaterPrizeProto::add_prize() {
  return prize_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto >&
WaterPrizeProto::prize() const {
  return prize_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto >*
WaterPrizeProto::mutable_prize() {
  return &prize_;
}

// -------------------------------------------------------------------

// FruitPrizeProto

// repeated .app.message.GoodsWrapperProto prize = 1;
inline int FruitPrizeProto::prize_size() const {
  return prize_.size();
}
inline void FruitPrizeProto::clear_prize() {
  prize_.Clear();
}
inline const ::app::message::GoodsWrapperProto& FruitPrizeProto::prize(int index) const {
  return prize_.Get(index);
}
inline ::app::message::GoodsWrapperProto* FruitPrizeProto::mutable_prize(int index) {
  return prize_.Mutable(index);
}
inline ::app::message::GoodsWrapperProto* FruitPrizeProto::add_prize() {
  return prize_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto >&
FruitPrizeProto::prize() const {
  return prize_;
}
inline ::google::protobuf::RepeatedPtrField< ::app::message::GoodsWrapperProto >*
FruitPrizeProto::mutable_prize() {
  return &prize_;
}

// -------------------------------------------------------------------

// RechargeGoldTreeInfoProto

// optional .app.message.RechargePrizeProto recharge_prize = 1;
inline bool RechargeGoldTreeInfoProto::has_recharge_prize() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RechargeGoldTreeInfoProto::set_has_recharge_prize() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RechargeGoldTreeInfoProto::clear_has_recharge_prize() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RechargeGoldTreeInfoProto::clear_recharge_prize() {
  if (recharge_prize_ != NULL) recharge_prize_->::app::message::RechargePrizeProto::Clear();
  clear_has_recharge_prize();
}
inline const ::app::message::RechargePrizeProto& RechargeGoldTreeInfoProto::recharge_prize() const {
  return recharge_prize_ != NULL ? *recharge_prize_ : *default_instance_->recharge_prize_;
}
inline ::app::message::RechargePrizeProto* RechargeGoldTreeInfoProto::mutable_recharge_prize() {
  set_has_recharge_prize();
  if (recharge_prize_ == NULL) recharge_prize_ = new ::app::message::RechargePrizeProto;
  return recharge_prize_;
}
inline ::app::message::RechargePrizeProto* RechargeGoldTreeInfoProto::release_recharge_prize() {
  clear_has_recharge_prize();
  ::app::message::RechargePrizeProto* temp = recharge_prize_;
  recharge_prize_ = NULL;
  return temp;
}
inline void RechargeGoldTreeInfoProto::set_allocated_recharge_prize(::app::message::RechargePrizeProto* recharge_prize) {
  delete recharge_prize_;
  recharge_prize_ = recharge_prize;
  if (recharge_prize) {
    set_has_recharge_prize();
  } else {
    clear_has_recharge_prize();
  }
}

// optional bool can_collect_recharge_prize = 2;
inline bool RechargeGoldTreeInfoProto::has_can_collect_recharge_prize() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RechargeGoldTreeInfoProto::set_has_can_collect_recharge_prize() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RechargeGoldTreeInfoProto::clear_has_can_collect_recharge_prize() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RechargeGoldTreeInfoProto::clear_can_collect_recharge_prize() {
  can_collect_recharge_prize_ = false;
  clear_has_can_collect_recharge_prize();
}
inline bool RechargeGoldTreeInfoProto::can_collect_recharge_prize() const {
  return can_collect_recharge_prize_;
}
inline void RechargeGoldTreeInfoProto::set_can_collect_recharge_prize(bool value) {
  set_has_can_collect_recharge_prize();
  can_collect_recharge_prize_ = value;
}

// optional bool finished_collect_recharge_prize = 3;
inline bool RechargeGoldTreeInfoProto::has_finished_collect_recharge_prize() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RechargeGoldTreeInfoProto::set_has_finished_collect_recharge_prize() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RechargeGoldTreeInfoProto::clear_has_finished_collect_recharge_prize() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RechargeGoldTreeInfoProto::clear_finished_collect_recharge_prize() {
  finished_collect_recharge_prize_ = false;
  clear_has_finished_collect_recharge_prize();
}
inline bool RechargeGoldTreeInfoProto::finished_collect_recharge_prize() const {
  return finished_collect_recharge_prize_;
}
inline void RechargeGoldTreeInfoProto::set_finished_collect_recharge_prize(bool value) {
  set_has_finished_collect_recharge_prize();
  finished_collect_recharge_prize_ = value;
}

// optional .app.message.WaterPrizeProto water_prize = 4;
inline bool RechargeGoldTreeInfoProto::has_water_prize() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RechargeGoldTreeInfoProto::set_has_water_prize() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RechargeGoldTreeInfoProto::clear_has_water_prize() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RechargeGoldTreeInfoProto::clear_water_prize() {
  if (water_prize_ != NULL) water_prize_->::app::message::WaterPrizeProto::Clear();
  clear_has_water_prize();
}
inline const ::app::message::WaterPrizeProto& RechargeGoldTreeInfoProto::water_prize() const {
  return water_prize_ != NULL ? *water_prize_ : *default_instance_->water_prize_;
}
inline ::app::message::WaterPrizeProto* RechargeGoldTreeInfoProto::mutable_water_prize() {
  set_has_water_prize();
  if (water_prize_ == NULL) water_prize_ = new ::app::message::WaterPrizeProto;
  return water_prize_;
}
inline ::app::message::WaterPrizeProto* RechargeGoldTreeInfoProto::release_water_prize() {
  clear_has_water_prize();
  ::app::message::WaterPrizeProto* temp = water_prize_;
  water_prize_ = NULL;
  return temp;
}
inline void RechargeGoldTreeInfoProto::set_allocated_water_prize(::app::message::WaterPrizeProto* water_prize) {
  delete water_prize_;
  water_prize_ = water_prize;
  if (water_prize) {
    set_has_water_prize();
  } else {
    clear_has_water_prize();
  }
}

// optional int32 tree_level = 5;
inline bool RechargeGoldTreeInfoProto::has_tree_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RechargeGoldTreeInfoProto::set_has_tree_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RechargeGoldTreeInfoProto::clear_has_tree_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RechargeGoldTreeInfoProto::clear_tree_level() {
  tree_level_ = 0;
  clear_has_tree_level();
}
inline ::google::protobuf::int32 RechargeGoldTreeInfoProto::tree_level() const {
  return tree_level_;
}
inline void RechargeGoldTreeInfoProto::set_tree_level(::google::protobuf::int32 value) {
  set_has_tree_level();
  tree_level_ = value;
}

// optional int32 remaining_water_count = 6;
inline bool RechargeGoldTreeInfoProto::has_remaining_water_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RechargeGoldTreeInfoProto::set_has_remaining_water_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RechargeGoldTreeInfoProto::clear_has_remaining_water_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RechargeGoldTreeInfoProto::clear_remaining_water_count() {
  remaining_water_count_ = 0;
  clear_has_remaining_water_count();
}
inline ::google::protobuf::int32 RechargeGoldTreeInfoProto::remaining_water_count() const {
  return remaining_water_count_;
}
inline void RechargeGoldTreeInfoProto::set_remaining_water_count(::google::protobuf::int32 value) {
  set_has_remaining_water_count();
  remaining_water_count_ = value;
}

// optional int64 mature_time = 7;
inline bool RechargeGoldTreeInfoProto::has_mature_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RechargeGoldTreeInfoProto::set_has_mature_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RechargeGoldTreeInfoProto::clear_has_mature_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RechargeGoldTreeInfoProto::clear_mature_time() {
  mature_time_ = GOOGLE_LONGLONG(0);
  clear_has_mature_time();
}
inline ::google::protobuf::int64 RechargeGoldTreeInfoProto::mature_time() const {
  return mature_time_;
}
inline void RechargeGoldTreeInfoProto::set_mature_time(::google::protobuf::int64 value) {
  set_has_mature_time();
  mature_time_ = value;
}

// optional .app.message.FruitPrizeProto fruit_prize = 8;
inline bool RechargeGoldTreeInfoProto::has_fruit_prize() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RechargeGoldTreeInfoProto::set_has_fruit_prize() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RechargeGoldTreeInfoProto::clear_has_fruit_prize() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RechargeGoldTreeInfoProto::clear_fruit_prize() {
  if (fruit_prize_ != NULL) fruit_prize_->::app::message::FruitPrizeProto::Clear();
  clear_has_fruit_prize();
}
inline const ::app::message::FruitPrizeProto& RechargeGoldTreeInfoProto::fruit_prize() const {
  return fruit_prize_ != NULL ? *fruit_prize_ : *default_instance_->fruit_prize_;
}
inline ::app::message::FruitPrizeProto* RechargeGoldTreeInfoProto::mutable_fruit_prize() {
  set_has_fruit_prize();
  if (fruit_prize_ == NULL) fruit_prize_ = new ::app::message::FruitPrizeProto;
  return fruit_prize_;
}
inline ::app::message::FruitPrizeProto* RechargeGoldTreeInfoProto::release_fruit_prize() {
  clear_has_fruit_prize();
  ::app::message::FruitPrizeProto* temp = fruit_prize_;
  fruit_prize_ = NULL;
  return temp;
}
inline void RechargeGoldTreeInfoProto::set_allocated_fruit_prize(::app::message::FruitPrizeProto* fruit_prize) {
  delete fruit_prize_;
  fruit_prize_ = fruit_prize;
  if (fruit_prize) {
    set_has_fruit_prize();
  } else {
    clear_has_fruit_prize();
  }
}

// optional int64 start_mature_time = 9;
inline bool RechargeGoldTreeInfoProto::has_start_mature_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RechargeGoldTreeInfoProto::set_has_start_mature_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RechargeGoldTreeInfoProto::clear_has_start_mature_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RechargeGoldTreeInfoProto::clear_start_mature_time() {
  start_mature_time_ = GOOGLE_LONGLONG(0);
  clear_has_start_mature_time();
}
inline ::google::protobuf::int64 RechargeGoldTreeInfoProto::start_mature_time() const {
  return start_mature_time_;
}
inline void RechargeGoldTreeInfoProto::set_start_mature_time(::google::protobuf::int64 value) {
  set_has_start_mature_time();
  start_mature_time_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace app

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_recharge_5fgold_5ftree_2eproto__INCLUDED
