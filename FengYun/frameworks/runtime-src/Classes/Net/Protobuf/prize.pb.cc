// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: prize.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "prize.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace app {
namespace message {

namespace {

const ::google::protobuf::Descriptor* PrizeProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PrizeProto_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_prize_2eproto() {
  protobuf_AddDesc_prize_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "prize.proto");
  GOOGLE_CHECK(file != NULL);
  PrizeProto_descriptor_ = file->message_type(0);
  static const int PrizeProto_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrizeProto, exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrizeProto, money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrizeProto, real_air_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrizeProto, jianghu_exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrizeProto, lijin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrizeProto, guild_lilian_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrizeProto, honor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrizeProto, sou_shen_point_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrizeProto, goods_wrapper_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrizeProto, task_point_),
  };
  PrizeProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PrizeProto_descriptor_,
      PrizeProto::default_instance_,
      PrizeProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrizeProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrizeProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PrizeProto));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_prize_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PrizeProto_descriptor_, &PrizeProto::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_prize_2eproto() {
  delete PrizeProto::default_instance_;
  delete PrizeProto_reflection_;
}

void protobuf_AddDesc_prize_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::app::message::protobuf_AddDesc_goods_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013prize.proto\022\013app.message\032\013goods.proto\""
    "\352\001\n\nPrizeProto\022\013\n\003exp\030\001 \001(\005\022\r\n\005money\030\002 \001"
    "(\005\022\020\n\010real_air\030\003 \001(\005\022\027\n\013jianghu_exp\030\004 \001("
    "\005B\002\030\001\022\r\n\005lijin\030\005 \001(\005\022\024\n\014guild_lilian\030\006 \001"
    "(\005\022\r\n\005honor\030\007 \001(\005\022\026\n\016sou_shen_point\030\010 \001("
    "\005\0225\n\rgoods_wrapper\030\013 \003(\0132\036.app.message.G"
    "oodsWrapperProto\022\022\n\ntask_point\030\014 \001(\005B\036\n\014"
    "app.protobufB\014PrizeContentH\001", 308);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "prize.proto", &protobuf_RegisterTypes);
  PrizeProto::default_instance_ = new PrizeProto();
  PrizeProto::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_prize_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_prize_2eproto {
  StaticDescriptorInitializer_prize_2eproto() {
    protobuf_AddDesc_prize_2eproto();
  }
} static_descriptor_initializer_prize_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int PrizeProto::kExpFieldNumber;
const int PrizeProto::kMoneyFieldNumber;
const int PrizeProto::kRealAirFieldNumber;
const int PrizeProto::kJianghuExpFieldNumber;
const int PrizeProto::kLijinFieldNumber;
const int PrizeProto::kGuildLilianFieldNumber;
const int PrizeProto::kHonorFieldNumber;
const int PrizeProto::kSouShenPointFieldNumber;
const int PrizeProto::kGoodsWrapperFieldNumber;
const int PrizeProto::kTaskPointFieldNumber;
#endif  // !_MSC_VER

PrizeProto::PrizeProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PrizeProto::InitAsDefaultInstance() {
}

PrizeProto::PrizeProto(const PrizeProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PrizeProto::SharedCtor() {
  _cached_size_ = 0;
  exp_ = 0;
  money_ = 0;
  real_air_ = 0;
  jianghu_exp_ = 0;
  lijin_ = 0;
  guild_lilian_ = 0;
  honor_ = 0;
  sou_shen_point_ = 0;
  task_point_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PrizeProto::~PrizeProto() {
  SharedDtor();
}

void PrizeProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PrizeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PrizeProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PrizeProto_descriptor_;
}

const PrizeProto& PrizeProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_prize_2eproto();
  return *default_instance_;
}

PrizeProto* PrizeProto::default_instance_ = NULL;

PrizeProto* PrizeProto::New() const {
  return new PrizeProto;
}

void PrizeProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    exp_ = 0;
    money_ = 0;
    real_air_ = 0;
    jianghu_exp_ = 0;
    lijin_ = 0;
    guild_lilian_ = 0;
    honor_ = 0;
    sou_shen_point_ = 0;
  }
  if (_has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    task_point_ = 0;
  }
  goods_wrapper_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PrizeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 exp = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &exp_)));
          set_has_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_money;
        break;
      }

      // optional int32 money = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_)));
          set_has_money();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_real_air;
        break;
      }

      // optional int32 real_air = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_real_air:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &real_air_)));
          set_has_real_air();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_jianghu_exp;
        break;
      }

      // optional int32 jianghu_exp = 4 [deprecated = true];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_jianghu_exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &jianghu_exp_)));
          set_has_jianghu_exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_lijin;
        break;
      }

      // optional int32 lijin = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_lijin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lijin_)));
          set_has_lijin();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_guild_lilian;
        break;
      }

      // optional int32 guild_lilian = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_guild_lilian:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &guild_lilian_)));
          set_has_guild_lilian();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_honor;
        break;
      }

      // optional int32 honor = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_honor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &honor_)));
          set_has_honor();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse_sou_shen_point;
        break;
      }

      // optional int32 sou_shen_point = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_sou_shen_point:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sou_shen_point_)));
          set_has_sou_shen_point();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_goods_wrapper;
        break;
      }

      // repeated .app.message.GoodsWrapperProto goods_wrapper = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_goods_wrapper:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_goods_wrapper()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_goods_wrapper;
        if (input->ExpectTag(96)) goto parse_task_point;
        break;
      }

      // optional int32 task_point = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_task_point:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &task_point_)));
          set_has_task_point();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PrizeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 exp = 1;
  if (has_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->exp(), output);
  }

  // optional int32 money = 2;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->money(), output);
  }

  // optional int32 real_air = 3;
  if (has_real_air()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->real_air(), output);
  }

  // optional int32 jianghu_exp = 4 [deprecated = true];
  if (has_jianghu_exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->jianghu_exp(), output);
  }

  // optional int32 lijin = 5;
  if (has_lijin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->lijin(), output);
  }

  // optional int32 guild_lilian = 6;
  if (has_guild_lilian()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->guild_lilian(), output);
  }

  // optional int32 honor = 7;
  if (has_honor()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->honor(), output);
  }

  // optional int32 sou_shen_point = 8;
  if (has_sou_shen_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->sou_shen_point(), output);
  }

  // repeated .app.message.GoodsWrapperProto goods_wrapper = 11;
  for (int i = 0; i < this->goods_wrapper_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->goods_wrapper(i), output);
  }

  // optional int32 task_point = 12;
  if (has_task_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->task_point(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PrizeProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 exp = 1;
  if (has_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->exp(), target);
  }

  // optional int32 money = 2;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->money(), target);
  }

  // optional int32 real_air = 3;
  if (has_real_air()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->real_air(), target);
  }

  // optional int32 jianghu_exp = 4 [deprecated = true];
  if (has_jianghu_exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->jianghu_exp(), target);
  }

  // optional int32 lijin = 5;
  if (has_lijin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->lijin(), target);
  }

  // optional int32 guild_lilian = 6;
  if (has_guild_lilian()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->guild_lilian(), target);
  }

  // optional int32 honor = 7;
  if (has_honor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->honor(), target);
  }

  // optional int32 sou_shen_point = 8;
  if (has_sou_shen_point()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->sou_shen_point(), target);
  }

  // repeated .app.message.GoodsWrapperProto goods_wrapper = 11;
  for (int i = 0; i < this->goods_wrapper_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->goods_wrapper(i), target);
  }

  // optional int32 task_point = 12;
  if (has_task_point()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->task_point(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PrizeProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 exp = 1;
    if (has_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->exp());
    }

    // optional int32 money = 2;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->money());
    }

    // optional int32 real_air = 3;
    if (has_real_air()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->real_air());
    }

    // optional int32 jianghu_exp = 4 [deprecated = true];
    if (has_jianghu_exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->jianghu_exp());
    }

    // optional int32 lijin = 5;
    if (has_lijin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lijin());
    }

    // optional int32 guild_lilian = 6;
    if (has_guild_lilian()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->guild_lilian());
    }

    // optional int32 honor = 7;
    if (has_honor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->honor());
    }

    // optional int32 sou_shen_point = 8;
    if (has_sou_shen_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sou_shen_point());
    }

  }
  if (_has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    // optional int32 task_point = 12;
    if (has_task_point()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->task_point());
    }

  }
  // repeated .app.message.GoodsWrapperProto goods_wrapper = 11;
  total_size += 1 * this->goods_wrapper_size();
  for (int i = 0; i < this->goods_wrapper_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->goods_wrapper(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PrizeProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PrizeProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PrizeProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PrizeProto::MergeFrom(const PrizeProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  goods_wrapper_.MergeFrom(from.goods_wrapper_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_exp()) {
      set_exp(from.exp());
    }
    if (from.has_money()) {
      set_money(from.money());
    }
    if (from.has_real_air()) {
      set_real_air(from.real_air());
    }
    if (from.has_jianghu_exp()) {
      set_jianghu_exp(from.jianghu_exp());
    }
    if (from.has_lijin()) {
      set_lijin(from.lijin());
    }
    if (from.has_guild_lilian()) {
      set_guild_lilian(from.guild_lilian());
    }
    if (from.has_honor()) {
      set_honor(from.honor());
    }
    if (from.has_sou_shen_point()) {
      set_sou_shen_point(from.sou_shen_point());
    }
  }
  if (from._has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    if (from.has_task_point()) {
      set_task_point(from.task_point());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PrizeProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrizeProto::CopyFrom(const PrizeProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrizeProto::IsInitialized() const {

  return true;
}

void PrizeProto::Swap(PrizeProto* other) {
  if (other != this) {
    std::swap(exp_, other->exp_);
    std::swap(money_, other->money_);
    std::swap(real_air_, other->real_air_);
    std::swap(jianghu_exp_, other->jianghu_exp_);
    std::swap(lijin_, other->lijin_);
    std::swap(guild_lilian_, other->guild_lilian_);
    std::swap(honor_, other->honor_);
    std::swap(sou_shen_point_, other->sou_shen_point_);
    goods_wrapper_.Swap(&other->goods_wrapper_);
    std::swap(task_point_, other->task_point_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PrizeProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PrizeProto_descriptor_;
  metadata.reflection = PrizeProto_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace app

// @@protoc_insertion_point(global_scope)
