// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mail.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mail.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace app {
namespace message {

namespace {

const ::google::protobuf::Descriptor* MailProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MailProto_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_mail_2eproto() {
  protobuf_AddDesc_mail_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "mail.proto");
  GOOGLE_CHECK(file != NULL);
  MailProto_descriptor_ = file->message_type(0);
  static const int MailProto_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailProto, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailProto, money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailProto, yuanbao_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailProto, experience_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailProto, realair_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailProto, goods_static_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailProto, goods_dynamic_data_),
  };
  MailProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MailProto_descriptor_,
      MailProto::default_instance_,
      MailProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MailProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MailProto));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_mail_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MailProto_descriptor_, &MailProto::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_mail_2eproto() {
  delete MailProto::default_instance_;
  delete MailProto_reflection_;
}

void protobuf_AddDesc_mail_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::app::message::protobuf_AddDesc_spritestat_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\nmail.proto\022\013app.message\032\020spritestat.pr"
    "oto\"\230\001\n\tMailProto\022\017\n\007content\030\003 \001(\014\022\r\n\005mo"
    "ney\030\013 \001(\005\022\017\n\007yuanbao\030\014 \001(\005\022\022\n\nexperience"
    "\030\r \001(\003\022\017\n\007realAir\030\016 \001(\005\022\031\n\021goods_static_"
    "data\030\025 \003(\014\022\032\n\022goods_dynamic_data\030\026 \003(\014B\035"
    "\n\014app.protobufB\013MailContentH\001", 229);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mail.proto", &protobuf_RegisterTypes);
  MailProto::default_instance_ = new MailProto();
  MailProto::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_mail_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_mail_2eproto {
  StaticDescriptorInitializer_mail_2eproto() {
    protobuf_AddDesc_mail_2eproto();
  }
} static_descriptor_initializer_mail_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int MailProto::kContentFieldNumber;
const int MailProto::kMoneyFieldNumber;
const int MailProto::kYuanbaoFieldNumber;
const int MailProto::kExperienceFieldNumber;
const int MailProto::kRealAirFieldNumber;
const int MailProto::kGoodsStaticDataFieldNumber;
const int MailProto::kGoodsDynamicDataFieldNumber;
#endif  // !_MSC_VER

MailProto::MailProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MailProto::InitAsDefaultInstance() {
}

MailProto::MailProto(const MailProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MailProto::SharedCtor() {
  _cached_size_ = 0;
  content_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  money_ = 0;
  yuanbao_ = 0;
  experience_ = GOOGLE_LONGLONG(0);
  realair_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MailProto::~MailProto() {
  SharedDtor();
}

void MailProto::SharedDtor() {
  if (content_ != &::google::protobuf::internal::kEmptyString) {
    delete content_;
  }
  if (this != default_instance_) {
  }
}

void MailProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MailProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MailProto_descriptor_;
}

const MailProto& MailProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_mail_2eproto();
  return *default_instance_;
}

MailProto* MailProto::default_instance_ = NULL;

MailProto* MailProto::New() const {
  return new MailProto;
}

void MailProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_content()) {
      if (content_ != &::google::protobuf::internal::kEmptyString) {
        content_->clear();
      }
    }
    money_ = 0;
    yuanbao_ = 0;
    experience_ = GOOGLE_LONGLONG(0);
    realair_ = 0;
  }
  goods_static_data_.Clear();
  goods_dynamic_data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MailProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes content = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse_money;
        break;
      }

      // optional int32 money = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_money:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_)));
          set_has_money();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(96)) goto parse_yuanbao;
        break;
      }

      // optional int32 yuanbao = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_yuanbao:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &yuanbao_)));
          set_has_yuanbao();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse_experience;
        break;
      }

      // optional int64 experience = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_experience:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &experience_)));
          set_has_experience();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(112)) goto parse_realAir;
        break;
      }

      // optional int32 realAir = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_realAir:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &realair_)));
          set_has_realair();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_goods_static_data;
        break;
      }

      // repeated bytes goods_static_data = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_goods_static_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_goods_static_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_goods_static_data;
        if (input->ExpectTag(178)) goto parse_goods_dynamic_data;
        break;
      }

      // repeated bytes goods_dynamic_data = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_goods_dynamic_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_goods_dynamic_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(178)) goto parse_goods_dynamic_data;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MailProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional bytes content = 3;
  if (has_content()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      3, this->content(), output);
  }

  // optional int32 money = 11;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->money(), output);
  }

  // optional int32 yuanbao = 12;
  if (has_yuanbao()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->yuanbao(), output);
  }

  // optional int64 experience = 13;
  if (has_experience()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(13, this->experience(), output);
  }

  // optional int32 realAir = 14;
  if (has_realair()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->realair(), output);
  }

  // repeated bytes goods_static_data = 21;
  for (int i = 0; i < this->goods_static_data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      21, this->goods_static_data(i), output);
  }

  // repeated bytes goods_dynamic_data = 22;
  for (int i = 0; i < this->goods_dynamic_data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      22, this->goods_dynamic_data(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MailProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bytes content = 3;
  if (has_content()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->content(), target);
  }

  // optional int32 money = 11;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->money(), target);
  }

  // optional int32 yuanbao = 12;
  if (has_yuanbao()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->yuanbao(), target);
  }

  // optional int64 experience = 13;
  if (has_experience()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(13, this->experience(), target);
  }

  // optional int32 realAir = 14;
  if (has_realair()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->realair(), target);
  }

  // repeated bytes goods_static_data = 21;
  for (int i = 0; i < this->goods_static_data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(21, this->goods_static_data(i), target);
  }

  // repeated bytes goods_dynamic_data = 22;
  for (int i = 0; i < this->goods_dynamic_data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(22, this->goods_dynamic_data(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MailProto::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes content = 3;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->content());
    }

    // optional int32 money = 11;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->money());
    }

    // optional int32 yuanbao = 12;
    if (has_yuanbao()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->yuanbao());
    }

    // optional int64 experience = 13;
    if (has_experience()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->experience());
    }

    // optional int32 realAir = 14;
    if (has_realair()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->realair());
    }

  }
  // repeated bytes goods_static_data = 21;
  total_size += 2 * this->goods_static_data_size();
  for (int i = 0; i < this->goods_static_data_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->goods_static_data(i));
  }

  // repeated bytes goods_dynamic_data = 22;
  total_size += 2 * this->goods_dynamic_data_size();
  for (int i = 0; i < this->goods_dynamic_data_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->goods_dynamic_data(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MailProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MailProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MailProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MailProto::MergeFrom(const MailProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  goods_static_data_.MergeFrom(from.goods_static_data_);
  goods_dynamic_data_.MergeFrom(from.goods_dynamic_data_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_content()) {
      set_content(from.content());
    }
    if (from.has_money()) {
      set_money(from.money());
    }
    if (from.has_yuanbao()) {
      set_yuanbao(from.yuanbao());
    }
    if (from.has_experience()) {
      set_experience(from.experience());
    }
    if (from.has_realair()) {
      set_realair(from.realair());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MailProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MailProto::CopyFrom(const MailProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailProto::IsInitialized() const {

  return true;
}

void MailProto::Swap(MailProto* other) {
  if (other != this) {
    std::swap(content_, other->content_);
    std::swap(money_, other->money_);
    std::swap(yuanbao_, other->yuanbao_);
    std::swap(experience_, other->experience_);
    std::swap(realair_, other->realair_);
    goods_static_data_.Swap(&other->goods_static_data_);
    goods_dynamic_data_.Swap(&other->goods_dynamic_data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MailProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MailProto_descriptor_;
  metadata.reflection = MailProto_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace message
}  // namespace app

// @@protoc_insertion_point(global_scope)
